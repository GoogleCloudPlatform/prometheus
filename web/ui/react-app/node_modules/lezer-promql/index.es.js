import { Parser } from 'lezer';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const 
  inf = 129,
  nan = 130,
  Bool = 1,
  Ignoring = 2,
  On = 3,
  GroupLeft = 4,
  GroupRight = 5,
  Offset = 6,
  Avg = 7,
  Bottomk = 8,
  Count = 9,
  CountValues = 10,
  Group = 11,
  Max = 12,
  Min = 13,
  Quantile = 14,
  Stddev = 15,
  Stdvar = 16,
  Sum = 17,
  Topk = 18,
  By = 19,
  Without = 20,
  And = 21,
  Or = 22,
  Unless = 23,
  Start = 24,
  End = 25;

// Copyright 2021 PromLabs GmbH

const keywordTokens = {
  inf: inf,
  nan: nan,
  bool: Bool,
  ignoring: Ignoring,
  on: On,
  group_left: GroupLeft,
  group_right: GroupRight,
  offset: Offset,
};

const specializeIdentifier = (value, stack) => {
  return keywordTokens[value.toLowerCase()] || -1;
};

const contextualKeywordTokens = {
  avg: Avg,
  bottomk: Bottomk,
  count: Count,
  count_values: CountValues,
  group: Group,
  max: Max,
  min: Min,
  quantile: Quantile,
  stddev: Stddev,
  stdvar: Stdvar,
  sum: Sum,
  topk: Topk,
  by: By,
  without: Without,
  and: And,
  or: Or,
  unless: Unless,
  start: Start,
  end: End,
};

const extendIdentifier = (value, stack) => {
  return contextualKeywordTokens[value.toLowerCase()] || -1;
};

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_Identifier = {__proto__:null,absent_over_time:273, absent:275, abs:277, avg_over_time:279, ceil:281, changes:283, clamp:285, clamp_max:287, clamp_min:289, count_over_time:291, days_in_month:293, day_of_month:295, day_of_week:297, delta:299, deriv:301, exp:303, floor:305, histogram_quantile:307, holt_winters:309, hour:311, idelta:313, increase:315, irate:317, label_replace:319, label_join:321, last_over_time:323, ln:325, log10:327, log2:329, max_over_time:331, min_over_time:333, minute:335, month:337, predict_linear:339, quantile_over_time:341, rate:343, resets:345, round:347, scalar:349, sgn:351, sort:353, sort_desc:355, sqrt:357, stddev_over_time:359, stdvar_over_time:361, sum_over_time:363, timestamp:365, time:367, vector:369, year:371};
const parser = Parser.deserialize({
  version: 13,
  states: "4WOYQPOOO%yQPOOOOQO'#Cz'#CzO&OQPO'#CyQ&ZQQOOOOQO'#Dd'#DdO&UQPO'#DcOOQO'#El'#ElO'eQPO'#ErOYQPO'#EnOYQPO'#EqOOQO'#Et'#EtO,_QSO'#EuO,gQQO'#EsOOQO'#Es'#EsOOQO'#Cx'#CxOOQO'#De'#DeOOQO'#Dg'#DgOOQO'#Dh'#DhOOQO'#Di'#DiOOQO'#Dj'#DjOOQO'#Dk'#DkOOQO'#Dl'#DlOOQO'#Dm'#DmOOQO'#Dn'#DnOOQO'#Do'#DoOOQO'#Dp'#DpOOQO'#Dq'#DqOOQO'#Dr'#DrOOQO'#Ds'#DsOOQO'#Dt'#DtOOQO'#Du'#DuOOQO'#Dv'#DvOOQO'#Dw'#DwOOQO'#Dx'#DxOOQO'#Dy'#DyOOQO'#Dz'#DzOOQO'#D{'#D{OOQO'#D|'#D|OOQO'#D}'#D}OOQO'#EO'#EOOOQO'#EP'#EPOOQO'#EQ'#EQOOQO'#ER'#EROOQO'#ES'#ESOOQO'#ET'#ETOOQO'#EU'#EUOOQO'#EV'#EVOOQO'#EW'#EWOOQO'#EX'#EXOOQO'#EY'#EYOOQO'#EZ'#EZOOQO'#E['#E[OOQO'#E]'#E]OOQO'#E^'#E^OOQO'#E_'#E_OOQO'#E`'#E`OOQO'#Ea'#EaOOQO'#Eb'#EbOOQO'#Ec'#EcOOQO'#Ed'#EdOOQO'#Ee'#EeOOQO'#Ef'#EfOOQO'#Eg'#EgOOQO'#Eh'#EhOOQO'#Ei'#EiQOQPOOO-}QPO'#C{O.SQPO'#DQO&UQPO,59eO.ZQQO,59eO/tQPO,59nO/tQPO,59nO/tQPO,59nO/tQPO,59nO/tQPO,59nO4nQQO,5;UO4sQQO,5;XO4{QPO,5;hOOQO,59},59}OOQO,5;W,5;WO5dQQO,5;YO5kQQO,5;]O7OQPO'#EwO7^QPO,5;aOOQO'#Ev'#EvOOQO,5;a,5;aOOQO,5;_,5;_O7fQSO'#C|OOQO,59g,59gO7nQPO,59lO7vQQO'#DROOQO,59l,59lOOQO1G/P1G/PO-}QPO'#DVO<qQPO'#DUO<{QPO'#DUOYQPO1G/YOYQPO1G/YOYQPO1G/YOYQPO1G/YOYQPO1G/YO=VQSO1G0pOOQO1G0s1G0sO=_QQO1G0sO=dQPO'#ElOOQO'#FO'#FOOOQO1G1S1G1SO=oQPO1G1SOOQO1G0t1G0tOOQO'#Ex'#ExO=tQPO,5;cO=yQSO1G0{OOQO1G0{1G0{OOQO'#DO'#DOO>RQPO,59hOOQO'#C}'#C}OOQO,59h,59hOYQPO,59mOOQO1G/W1G/WOOQO,59q,59qOBwQPO,59pOCOQPO,59pODgQQO7+$tODtQQO7+$tOFSQQO7+$tOFjQQO7+$tOHOQQO7+$tOOQO7+&[7+&[OHiQQO7+&bOOQO7+&_7+&_OHqQPO7+&nOOQO1G0}1G0}OOQO1G0|1G0|OOQO7+&g7+&gOHvQSO1G/SOOQO1G/S1G/SOIOQQO1G/XOOQO1G/[1G/[OIYQPO1G/[OOQO<<I|<<I|OMyQPO<<I|OOQO<<JY<<JYOOQO1G/T1G/TOOQO7+$n7+$nOOQO7+$v7+$vOOQOAN?hAN?h",
  stateData: "NO~O#xOSjOS~OVQOWQOXQOYQOZQO[QO]QO^QO_QO`QOaQObQO!YZO#c_O#uVO#vVO#yXO#|`O#}aO$ObO$PcO$QdO$ReO$SfO$TgO$UhO$ViO$WjO$XkO$YlO$ZmO$[nO$]oO$^pO$_qO$`rO$asO$btO$cuO$dvO$ewO$fxO$gyO$hzO$i{O$j|O$k}O$l!OO$m!PO$n!QO$o!RO$p!SO$q!TO$r!UO$s!VO$t!WO$u!XO$v!YO$w!ZO$x![O$y!]O$z!^O${!_O$|!`O$}!aO%O!bO%P!cO%SWO%TWO%UVO%W[O~O!YZO~Oc!eOd!eO#y!fO~OU!oOe!lOf!mOg!lOw!iOz!iO{!iO|!iO}!jO!O!jO!P!kO!Q!kO!R!kO!S!kO!T!kO!U!kO#q!pO%Q!nO~O#u!rO#v!rO%U!rOV#fXW#fXX#fXY#fXZ#fX[#fX]#fX^#fX_#fX`#fXa#fXb#fX!Y#fX#c#fX#u#fX#v#fX#y#fX#|#fX#}#fX$O#fX$P#fX$Q#fX$R#fX$S#fX$T#fX$U#fX$V#fX$W#fX$X#fX$Y#fX$Z#fX$[#fX$]#fX$^#fX$_#fX$`#fX$a#fX$b#fX$c#fX$d#fX$e#fX$f#fX$g#fX$h#fX$i#fX$j#fX$k#fX$l#fX$m#fX$n#fX$o#fX$p#fX$q#fX$r#fX$s#fX$t#fX$u#fX$v#fX$w#fX$x#fX$y#fX$z#fX${#fX$|#fX$}#fX%O#fX%P#fX%S#fX%T#fX%U#fX%W#fX~Os!uO%X!xO~O%W[OU#gXe#gXf#gXg#gXw#gXz#gX{#gX|#gX}#gX!O#gX!P#gX!Q#gX!R#gX!S#gX!T#gX!U#gX#q#gX#t#gX%Q#gX#{#gX#z#gX~O#y!zO~O#{#OO~PYOc!eOd!eOUmaemafmagmawmazma{ma|ma}ma!Oma!Pma!Qma!Rma!Sma!Tma!Uma#qma#tma%Qma#{ma#zma~OP#SOQ#QOR#QOVxPWxPXxPYxPZxP[xP]xP^xP_xP`xPaxPbxP!YxP#cxP#uxP#vxP#yxP#|xP#}xP$OxP$PxP$QxP$RxP$SxP$TxP$UxP$VxP$WxP$XxP$YxP$ZxP$[xP$]xP$^xP$_xP$`xP$axP$bxP$cxP$dxP$exP$fxP$gxP$hxP$ixP$jxP$kxP$lxP$mxP$nxP$oxP$pxP$qxP$rxP$sxP$txP$uxP$vxP$wxP$xxP$yxP$zxP${xP$|xP$}xP%OxP%PxP%SxP%TxP%UxP%WxP~O#_#YO~O!O#[O#_#ZO~Oh#^Oi#^O#uVO#vVO%S#]O%T#]O%UVO~O#{#aO~P&ZOw!iOU#eae#eaf#eag#eaz#ea{#ea|#ea}#ea!O#ea!P#ea!Q#ea!R#ea!S#ea!T#ea!U#ea#q#ea#t#ea%Q#ea#{#ea#z#ea~O!U#bO#m#bO#n#bO#o#bO~O#z#dO%X#eO~Os#fO#{#iO~O#z#jO#{#kO~O#zuX#{uX~P&ZOVxXWxXXxXYxXZxX[xX]xX^xX_xX`xXaxXbxX!YxX#cxX#uxX#vxX#yxX#|xX#}xX$OxX$PxX$QxX$RxX$SxX$TxX$UxX$VxX$WxX$XxX$YxX$ZxX$[xX$]xX$^xX$_xX$`xX$axX$bxX$cxX$dxX$exX$fxX$gxX$hxX$ixX$jxX$kxX$lxX$mxX$nxX$oxX$pxX$qxX$rxX$sxX$txX$uxX$vxX$wxX$xxX$yxX$zxX${xX$|xX$}xX%OxX%PxX%SxX%TxX%UxX%WxX~OS#mOT#mO~P8QOQ#QOR#QO~P8QO%R#tO%V#uO~O#_#vO~O#u!rO#v!rO%U!rO~O#y#wO~O#c#xO~Os!uO%X#zO~O#z#{O#{#|O~OVxaWxaXxaYxaZxa[xa]xa^xa_xa`xaaxabxa!Yxa#cxa#uxa#vxa#|xa#}xa$Oxa$Pxa$Qxa$Rxa$Sxa$Txa$Uxa$Vxa$Wxa$Xxa$Yxa$Zxa$[xa$]xa$^xa$_xa$`xa$axa$bxa$cxa$dxa$exa$fxa$gxa$hxa$ixa$jxa$kxa$lxa$mxa$nxa$oxa$pxa$qxa$rxa$sxa$txa$uxa$vxa$wxa$xxa$yxa$zxa${xa$|xa$}xa%Oxa%Pxa%Sxa%Txa%Uxa%Wxa~O#y!zO~P>ZOS$POT$PO#yxa~P>ZOw!iOUvqevqfvqgvq}vq!Ovq!Pvq!Qvq!Rvq!Svq!Tvq!Uvq#qvq#tvq%Qvq#{vq#zvq~Ozvq{vq|vq~PC]Oz!iO{!iO|!iO~PC]Ow!iOz!iO{!iO|!iO}!jO!O!jOUvqevqfvqgvq#qvq#tvq%Qvq#{vq#zvq~O!Pvq!Qvq!Rvq!Svq!Tvq!Uvq~PERO!P!kO!Q!kO!R!kO!S!kO!T!kO!U!kO~PEROe!lOg!lOw!iOz!iO{!iO|!iO}!jO!O!jO!P!kO!Q!kO!R!kO!S!kO!T!kO!U!kO~OUvqfvq#qvq#tvq%Qvq#{vq#zvq~PGQO#_$RO%R$QO~O#{$SO~Os#fO#{$UO~O#zui#{ui~P&ZO#y!zOVxiWxiXxiYxiZxi[xi]xi^xi_xi`xiaxibxi!Yxi#cxi#uxi#vxi#|xi#}xi$Oxi$Pxi$Qxi$Rxi$Sxi$Txi$Uxi$Vxi$Wxi$Xxi$Yxi$Zxi$[xi$]xi$^xi$_xi$`xi$axi$bxi$cxi$dxi$exi$fxi$gxi$hxi$ixi$jxi$kxi$lxi$mxi$nxi$oxi$pxi$qxi$rxi$sxi$txi$uxi$vxi$wxi$xxi$yxi$zxi${xi$|xi$}xi%Oxi%Pxi%Sxi%Txi%Uxi%Wxi~O%R$WO~O",
  goto: "(d#sPPPPPPPPPPPPPPPPPPPPPPPPPPPP#t$d$p$|%S%`%cP%i%r$dP%u&UPPPPPPPPPPP$d&`&lP&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l$dP&x$d$dP$d$d'X$d'e't(T(W(^PPP$dP(aQSOQ!sXQ!tYQ!}!fQ#o#TQ#p#UQ#q#VQ#r#WQ#s#XR#}#je_OXY!f#T#U#V#W#X#jeROXY!f#T#U#V#W#X#jQ!gRR#P!hQ!{!eQ#l#QQ$O#mR$V$PR#g!zQ#h!zR$T#{Q!hRQ!qUR#P!gR!|!fQ#T!iQ#U!jQ#V!kQ#W!lR#X!mY#R!i!j!k!l!mR#n#SeUOXY!f#T#U#V#W#X#jeTOXY!f#T#U#V#W#X#jd_OXY!f#T#U#V#W#X#jR#_!peYOXY!f#T#U#V#W#X#jd]OXY!f#T#U#V#W#X#jR!dPd^OXY!f#T#U#V#W#X#jR!y]R!v[Q!w[R#y#dR#c!uR#`!p",
  nodeNames: "âš  Bool Ignoring On GroupLeft GroupRight Offset Avg Bottomk Count CountValues Group Max Min Quantile Stddev Stdvar Sum Topk By Without And Or Unless Start End LineComment PromQL Expr AggregateExpr AggregateOp AggregateModifier GroupingLabels GroupingLabelList GroupingLabel LabelName FunctionCallBody FunctionCallArgs BinaryExpr Pow BinModifiers OnOrIgnoring Mul Div Mod Add Sub Eql Gte Gtr Lte Lss Neq FunctionCall FunctionIdentifier AbsentOverTime Identifier Absent Abs AvgOverTime Ceil Changes Clamp ClampMax ClampMin CountOverTime DaysInMonth DayOfMonth DayOfWeek Delta Deriv Exp Floor HistogramQuantile HoltWinters Hour Idelta Increase Irate LabelReplace LabelJoin LastOverTime Ln Log10 Log2 MaxOverTime MinOverTime Minute Month PredictLinear QuantileOverTime Rate Resets Round Scalar Sgn Sort SortDesc Sqrt StddevOverTime StdvarOverTime SumOverTime Timestamp Time Vector Year MatrixSelector Duration NumberLiteral OffsetExpr ParenExpr StringLiteral SubqueryExpr UnaryExpr UnaryOp VectorSelector MetricIdentifier LabelMatchers LabelMatchList LabelMatcher MatchOp EqlSingle EqlRegex NeqRegex StepInvariantExpr At AtModifierPreprocessors MetricName",
  maxTerm: 193,
  skippedNodes: [0,26],
  repeatNodeCount: 0,
  tokenData: "! j~RwX^#lpq#lqr$ars$tst%huv%swx%xxy&gyz&lz{&q{|&v|}&}}!O'S!O!P'Z!P!Q(Z!Q!R(`!R![)f![!]LZ!^!_MV!_!`Md!`!aMy!b!cNW!c!}N]!}#ONs#P#QNx#Q#RN}#R#SN]#S#T! S#T#oN]#o#p! `#q#r! e#y#z#l$f$g#l#BY#BZ#l$IS$I_#l$I|$JO#l$JT$JU#l$KV$KW#l&FU&FV#l~#qY#x~X^#lpq#l#y#z#l$f$g#l#BY#BZ#l$IS$I_#l$I|$JO#l$JT$JU#l$KV$KW#l&FU&FV#l~$dQ!_!`$j#r#s$o~$oO!U~~$tO#o~~$yU#c~OY$tZr$trs%]s#O$t#O#P%b#P~$t~%bO#c~~%ePO~$t~%mQj~OY%hZ~%h~%xO|~~%}U#c~OY%xZw%xwx%]x#O%x#O#P&a#P~%x~&dPO~%x~&lO#y~~&qO#{~~&vOz~R&}O%TP}Q~'SO#z~R'ZO%SP!OQP'^P!Q!['aP'fR%UP!Q!['a!g!h'o#X#Y'oP'rR{|'{}!O'{!Q![(RP(OP!Q![(RP(WP%UP!Q![(R~(`O{~R(eZ%UP!O!P)W!Q![)f!g!h'o#W#X*Z#X#Y'o#[#].i#a#b0l#g#h1r#k#l2Z#l#mKo#m#n:pP)]R%UP!Q![)W!g!h'o#X#Y'oR)kY%UP!O!P)W!Q![)f!g!h'o#W#X*Z#X#Y'o#[#].i#a#b0l#g#h1r#k#l2Z#m#n:pQ*`P#_Q!Q![*cQ*fS!Q![*c#[#]*r#a#b,z#g#h.QQ*wP#_Q!Q![*zQ*}R!Q![*z#a#b+W#g#h,cQ+]Q#_Q!Q![+c#g#h+uQ+fR!Q![+c#a#b+o#g#h+zQ+rP#g#h+uQ+zO#_QQ,PP#_Q!Q![,SQ,VQ!Q![,S#a#b,]Q,`P#g#h+uQ,hP#_Q!Q![,kQ,nQ!Q![,k#a#b,tQ,wP#g#h+uQ-PQ#_Q!Q![-V#g#h+uQ-YR!Q![-V#a#b-c#g#h-iQ-fP#g#h+uQ-nP#_Q!Q![-qQ-tQ!Q![-q#a#b-zQ-}P#g#h+uQ.VP#_Q!Q![.YQ.]Q!Q![.Y#a#b.cQ.fP#g#h+uQ.nP#_Q!Q![.qQ.tR!Q![.q#a#b.}#g#h0TQ/SQ#_Q!Q![/Y#g#h+uQ/]R!Q![/Y#a#b/f#g#h/lQ/iP#g#h+uQ/qP#_Q!Q![/tQ/wQ!Q![/t#a#b/}Q0QP#g#h+uQ0YP#_Q!Q![0]Q0`Q!Q![0]#a#b0fQ0iP#g#h+uQ0qQ#_Q!Q![0w#g#h+uQ0zR!Q![0w#a#b1T#g#h1ZQ1WP#g#h+uQ1`P#_Q!Q![1cQ1fQ!Q![1c#a#b1lQ1oP#g#h+uQ1wP#_Q!Q![1zQ1}Q!Q![1z#a#b2TQ2WP#g#h+uQ2`P#_Q!Q![2cQ2fT!Q![2c#W#X2u#[#]7O#a#b9R#g#h:XQ2zP#_Q!Q![2}Q3QS!Q![2}#[#]3^#a#b5a#g#h6gQ3cP#_Q!Q![3fQ3iR!Q![3f#a#b3r#g#h4xQ3wQ#_Q!Q![3}#g#h+uQ4QR!Q![3}#a#b4Z#g#h4aQ4^P#g#h+uQ4fP#_Q!Q![4iQ4lQ!Q![4i#a#b4rQ4uP#g#h+uQ4}P#_Q!Q![5QQ5TQ!Q![5Q#a#b5ZQ5^P#g#h+uQ5fQ#_Q!Q![5l#g#h+uQ5oR!Q![5l#a#b5x#g#h6OQ5{P#g#h+uQ6TP#_Q!Q![6WQ6ZQ!Q![6W#a#b6aQ6dP#g#h+uQ6lP#_Q!Q![6oQ6rQ!Q![6o#a#b6xQ6{P#g#h+uQ7TP#_Q!Q![7WQ7ZR!Q![7W#a#b7d#g#h8jQ7iQ#_Q!Q![7o#g#h+uQ7rR!Q![7o#a#b7{#g#h8RQ8OP#g#h+uQ8WP#_Q!Q![8ZQ8^Q!Q![8Z#a#b8dQ8gP#g#h+uQ8oP#_Q!Q![8rQ8uQ!Q![8r#a#b8{Q9OP#g#h+uQ9WQ#_Q!Q![9^#g#h+uQ9aR!Q![9^#a#b9j#g#h9pQ9mP#g#h+uQ9uP#_Q!Q![9xQ9{Q!Q![9x#a#b:RQ:UP#g#h+uQ:^P#_Q!Q![:aQ:dQ!Q![:a#a#b:jQ:mP#g#h+uQ:uP#_Q!Q![:xQ:{U!Q![:x#W#X;_#[#]?h#a#bAk#g#hBq#k#lCYQ;dP#_Q!Q![;gQ;jS!Q![;g#[#];v#a#b=y#g#h?PQ;{P#_Q!Q![<OQ<RR!Q![<O#a#b<[#g#h=bQ<aQ#_Q!Q![<g#g#h+uQ<jR!Q![<g#a#b<s#g#h<yQ<vP#g#h+uQ=OP#_Q!Q![=RQ=UQ!Q![=R#a#b=[Q=_P#g#h+uQ=gP#_Q!Q![=jQ=mQ!Q![=j#a#b=sQ=vP#g#h+uQ>OQ#_Q!Q![>U#g#h+uQ>XR!Q![>U#a#b>b#g#h>hQ>eP#g#h+uQ>mP#_Q!Q![>pQ>sQ!Q![>p#a#b>yQ>|P#g#h+uQ?UP#_Q!Q![?XQ?[Q!Q![?X#a#b?bQ?eP#g#h+uQ?mP#_Q!Q![?pQ?sR!Q![?p#a#b?|#g#hASQ@RQ#_Q!Q![@X#g#h+uQ@[R!Q![@X#a#b@e#g#h@kQ@hP#g#h+uQ@pP#_Q!Q![@sQ@vQ!Q![@s#a#b@|QAPP#g#h+uQAXP#_Q!Q![A[QA_Q!Q![A[#a#bAeQAhP#g#h+uQApQ#_Q!Q![Av#g#h+uQAyR!Q![Av#a#bBS#g#hBYQBVP#g#h+uQB_P#_Q!Q![BbQBeQ!Q![Bb#a#bBkQBnP#g#h+uQBvP#_Q!Q![ByQB|Q!Q![By#a#bCSQCVP#g#h+uQC_P#_Q!Q![CbQCeT!Q![Cb#W#XCt#[#]G}#a#bJQ#g#hKWQCyP#_Q!Q![C|QDPS!Q![C|#[#]D]#a#bF`#g#hGfQDbP#_Q!Q![DeQDhR!Q![De#a#bDq#g#hEwQDvQ#_Q!Q![D|#g#h+uQEPR!Q![D|#a#bEY#g#hE`QE]P#g#h+uQEeP#_Q!Q![EhQEkQ!Q![Eh#a#bEqQEtP#g#h+uQE|P#_Q!Q![FPQFSQ!Q![FP#a#bFYQF]P#g#h+uQFeQ#_Q!Q![Fk#g#h+uQFnR!Q![Fk#a#bFw#g#hF}QFzP#g#h+uQGSP#_Q!Q![GVQGYQ!Q![GV#a#bG`QGcP#g#h+uQGkP#_Q!Q![GnQGqQ!Q![Gn#a#bGwQGzP#g#h+uQHSP#_Q!Q![HVQHYR!Q![HV#a#bHc#g#hIiQHhQ#_Q!Q![Hn#g#h+uQHqR!Q![Hn#a#bHz#g#hIQQH}P#g#h+uQIVP#_Q!Q![IYQI]Q!Q![IY#a#bIcQIfP#g#h+uQInP#_Q!Q![IqQItQ!Q![Iq#a#bIzQI}P#g#h+uQJVQ#_Q!Q![J]#g#h+uQJ`R!Q![J]#a#bJi#g#hJoQJlP#g#h+uQJtP#_Q!Q![JwQJzQ!Q![Jw#a#bKQQKTP#g#h+uQK]P#_Q!Q![K`QKcQ!Q![K`#a#bKiQKlP#g#h+uPKrR!Q![K{!c!iK{#T#ZK{PLQR%UP!Q![K{!c!iK{#T#ZK{VLbT%VS!YR!Q![Lq![!]Lq!c!}Lq#R#SLq#T#oLqRLvT!YR!Q![Lq![!]Lq!c!}Lq#R#SLq#T#oLq~M[P!T~!_!`M_~MdO!S~~MiQ#mP!_!`Mo#r#sMtQMtO!PQ~MyO#n~~NOP!R~!_!`NR~NWO!Q~~N]O#q~VNdT!YRsS!Q![N]![!]Lq!c!}N]#R#SN]#T#oN]~NxO%Q~~N}O%R~~! SOw~~! VRO#S! S#S#T%]#T~! S~! eO%W~~! jO%X~",
  tokenizers: [0, 1, 2],
  topRules: {"PromQL":[0,27],"MetricName":[1,127]},
  specialized: [{term: 56, get: (value, stack) => (specializeIdentifier(value) << 1)},{term: 56, get: (value, stack) => (extendIdentifier(value) << 1) | 1},{term: 56, get: value => spec_Identifier[value] || -1}],
  tokenPrec: 0
});
// This file was generated by lezer-generator. You probably shouldn't edit it.
const 
  inf$1 = 129,
  nan$1 = 130,
  Bool$1 = 1,
  Ignoring$1 = 2,
  On$1 = 3,
  GroupLeft$1 = 4,
  GroupRight$1 = 5,
  Offset$1 = 6,
  Avg$1 = 7,
  Bottomk$1 = 8,
  Count$1 = 9,
  CountValues$1 = 10,
  Group$1 = 11,
  Max$1 = 12,
  Min$1 = 13,
  Quantile$1 = 14,
  Stddev$1 = 15,
  Stdvar$1 = 16,
  Sum$1 = 17,
  Topk$1 = 18,
  By$1 = 19,
  Without$1 = 20,
  And$1 = 21,
  Or$1 = 22,
  Unless$1 = 23,
  Start$1 = 24,
  End$1 = 25,
  LineComment = 26,
  PromQL = 27,
  Expr = 28,
  AggregateExpr = 29,
  AggregateOp = 30,
  AggregateModifier = 31,
  GroupingLabels = 32,
  GroupingLabelList = 33,
  GroupingLabel = 34,
  LabelName = 35,
  FunctionCallBody = 36,
  FunctionCallArgs = 37,
  BinaryExpr = 38,
  Pow = 39,
  BinModifiers = 40,
  OnOrIgnoring = 41,
  Mul = 42,
  Div = 43,
  Mod = 44,
  Add = 45,
  Sub = 46,
  Eql = 47,
  Gte = 48,
  Gtr = 49,
  Lte = 50,
  Lss = 51,
  Neq = 52,
  FunctionCall = 53,
  FunctionIdentifier = 54,
  AbsentOverTime = 55,
  Identifier = 56,
  Absent = 57,
  Abs = 58,
  AvgOverTime = 59,
  Ceil = 60,
  Changes = 61,
  Clamp = 62,
  ClampMax = 63,
  ClampMin = 64,
  CountOverTime = 65,
  DaysInMonth = 66,
  DayOfMonth = 67,
  DayOfWeek = 68,
  Delta = 69,
  Deriv = 70,
  Exp = 71,
  Floor = 72,
  HistogramQuantile = 73,
  HoltWinters = 74,
  Hour = 75,
  Idelta = 76,
  Increase = 77,
  Irate = 78,
  LabelReplace = 79,
  LabelJoin = 80,
  LastOverTime = 81,
  Ln = 82,
  Log10 = 83,
  Log2 = 84,
  MaxOverTime = 85,
  MinOverTime = 86,
  Minute = 87,
  Month = 88,
  PredictLinear = 89,
  QuantileOverTime = 90,
  Rate = 91,
  Resets = 92,
  Round = 93,
  Scalar = 94,
  Sgn = 95,
  Sort = 96,
  SortDesc = 97,
  Sqrt = 98,
  StddevOverTime = 99,
  StdvarOverTime = 100,
  SumOverTime = 101,
  Timestamp = 102,
  Time = 103,
  Vector = 104,
  Year = 105,
  MatrixSelector = 106,
  Duration = 107,
  NumberLiteral = 108,
  OffsetExpr = 109,
  ParenExpr = 110,
  StringLiteral = 111,
  SubqueryExpr = 112,
  UnaryExpr = 113,
  UnaryOp = 114,
  VectorSelector = 115,
  MetricIdentifier = 116,
  LabelMatchers = 117,
  LabelMatchList = 118,
  LabelMatcher = 119,
  MatchOp = 120,
  EqlSingle = 121,
  EqlRegex = 122,
  NeqRegex = 123,
  StepInvariantExpr = 124,
  At = 125,
  AtModifierPreprocessors = 126,
  MetricName = 127;

export { Abs, Absent, AbsentOverTime, Add, AggregateExpr, AggregateModifier, AggregateOp, And$1 as And, At, AtModifierPreprocessors, Avg$1 as Avg, AvgOverTime, BinModifiers, BinaryExpr, Bool$1 as Bool, Bottomk$1 as Bottomk, By$1 as By, Ceil, Changes, Clamp, ClampMax, ClampMin, Count$1 as Count, CountOverTime, CountValues$1 as CountValues, DayOfMonth, DayOfWeek, DaysInMonth, Delta, Deriv, Div, Duration, End$1 as End, Eql, EqlRegex, EqlSingle, Exp, Expr, Floor, FunctionCall, FunctionCallArgs, FunctionCallBody, FunctionIdentifier, Group$1 as Group, GroupLeft$1 as GroupLeft, GroupRight$1 as GroupRight, GroupingLabel, GroupingLabelList, GroupingLabels, Gte, Gtr, HistogramQuantile, HoltWinters, Hour, Idelta, Identifier, Ignoring$1 as Ignoring, Increase, Irate, LabelJoin, LabelMatchList, LabelMatcher, LabelMatchers, LabelName, LabelReplace, LastOverTime, LineComment, Ln, Log10, Log2, Lss, Lte, MatchOp, MatrixSelector, Max$1 as Max, MaxOverTime, MetricIdentifier, MetricName, Min$1 as Min, MinOverTime, Minute, Mod, Month, Mul, Neq, NeqRegex, NumberLiteral, Offset$1 as Offset, OffsetExpr, On$1 as On, OnOrIgnoring, Or$1 as Or, ParenExpr, Pow, PredictLinear, PromQL, Quantile$1 as Quantile, QuantileOverTime, Rate, Resets, Round, Scalar, Sgn, Sort, SortDesc, Sqrt, Start$1 as Start, Stddev$1 as Stddev, StddevOverTime, Stdvar$1 as Stdvar, StdvarOverTime, StepInvariantExpr, StringLiteral, Sub, SubqueryExpr, Sum$1 as Sum, SumOverTime, Time, Timestamp, Topk$1 as Topk, UnaryExpr, UnaryOp, Unless$1 as Unless, Vector, VectorSelector, Without$1 as Without, Year, inf$1 as inf, nan$1 as nan, parser };
