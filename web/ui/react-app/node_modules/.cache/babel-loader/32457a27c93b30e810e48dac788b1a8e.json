{"ast":null,"code":"import _classCallCheck from \"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2020 The Prometheus Authors\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport { EqlSingle, Neq } from 'lezer-promql';\nexport var Matcher = /*#__PURE__*/function () {\n  function Matcher(type, name, value) {\n    _classCallCheck(this, Matcher);\n\n    this.type = type;\n    this.name = name;\n    this.value = value;\n  }\n\n  _createClass(Matcher, [{\n    key: \"matchesEmpty\",\n    value: function matchesEmpty() {\n      switch (this.type) {\n        case EqlSingle:\n          return this.value === '';\n\n        case Neq:\n          return this.value !== '';\n\n        default:\n          return false;\n      }\n    }\n  }]);\n\n  return Matcher;\n}();","map":{"version":3,"sources":["../../../src/lang-promql/types/matcher.ts"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAS,SAAT,EAAoB,GAApB,QAA+B,cAA/B;AAEA,WAAa,OAAb;AAKE,mBAAY,IAAZ,EAA0B,IAA1B,EAAwC,KAAxC,EAAqD;AAAA;;AACnD,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,KAAL,GAAa,KAAb;AACD;;AATH;AAAA;AAAA,WAWE,wBAAY;AACV,cAAQ,KAAK,IAAb;AACE,aAAK,SAAL;AACE,iBAAO,KAAK,KAAL,KAAe,EAAtB;;AACF,aAAK,GAAL;AACE,iBAAO,KAAK,KAAL,KAAe,EAAtB;;AACF;AACE,iBAAO,KAAP;AANJ;AAQD;AApBH;;AAAA;AAAA","sourceRoot":"","sourcesContent":["// The MIT License (MIT)\n//\n// Copyright (c) 2020 The Prometheus Authors\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport { EqlSingle, Neq } from 'lezer-promql';\nexport class Matcher {\n    constructor(type, name, value) {\n        this.type = type;\n        this.name = name;\n        this.value = value;\n    }\n    matchesEmpty() {\n        switch (this.type) {\n            case EqlSingle:\n                return this.value === '';\n            case Neq:\n                return this.value !== '';\n            default:\n                return false;\n        }\n    }\n}\n//# sourceMappingURL=matcher.js.map"]},"metadata":{},"sourceType":"module"}