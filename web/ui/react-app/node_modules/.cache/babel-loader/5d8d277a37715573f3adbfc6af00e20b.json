{"ast":null,"code":"import _objectSpread from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState,useEffect}from'react';import{Alert,Button}from'reactstrap';import Panel,{PanelDefaultOptions}from'./Panel';import Checkbox from'../../components/Checkbox';import{generateID,decodePanelOptionsFromQueryString,encodePanelOptionsToQueryString,callAll}from'../../utils';import{useFetch}from'../../hooks/useFetch';import{useLocalStorage}from'../../hooks/useLocalStorage';import{usePathPrefix}from'../../contexts/PathPrefixContext';import{API_PATH}from'../../constants/constants';export var updateURL=function updateURL(nextPanels){var query=encodePanelOptionsToQueryString(nextPanels);window.history.pushState({},'',query);};export var PanelListContent=function PanelListContent(_ref){var _ref$metrics=_ref.metrics,metrics=_ref$metrics===void 0?[]:_ref$metrics,useLocalTime=_ref.useLocalTime,useExperimentalEditor=_ref.useExperimentalEditor,queryHistoryEnabled=_ref.queryHistoryEnabled,enableAutocomplete=_ref.enableAutocomplete,enableHighlighting=_ref.enableHighlighting,enableLinter=_ref.enableLinter,rest=_objectWithoutProperties(_ref,[\"metrics\",\"useLocalTime\",\"useExperimentalEditor\",\"queryHistoryEnabled\",\"enableAutocomplete\",\"enableHighlighting\",\"enableLinter\"]);var _useState=useState(rest.panels),_useState2=_slicedToArray(_useState,2),panels=_useState2[0],setPanels=_useState2[1];var _useLocalStorage=useLocalStorage('history',[]),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),historyItems=_useLocalStorage2[0],setLocalStorageHistoryItems=_useLocalStorage2[1];useEffect(function(){!panels.length&&addPanel();window.onpopstate=function(){var panels=decodePanelOptionsFromQueryString(window.location.search);if(panels.length>0){setPanels(panels);}};// We want useEffect to act only as componentDidMount, but react still complains about the empty dependencies list.\n// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);var handleExecuteQuery=function handleExecuteQuery(query){var isSimpleMetric=metrics.indexOf(query)!==-1;if(isSimpleMetric||!query.length){return;}var extendedItems=historyItems.reduce(function(acc,metric){return metric===query?acc:[].concat(_toConsumableArray(acc),[metric]);// Prevent adding query twice.\n},[query]);setLocalStorageHistoryItems(extendedItems.slice(0,50));};var addPanel=function addPanel(){callAll(setPanels,updateURL)([].concat(_toConsumableArray(panels),[{id:generateID(),key:\"\".concat(panels.length),options:PanelDefaultOptions}]));};var pathPrefix=usePathPrefix();return/*#__PURE__*/React.createElement(React.Fragment,null,panels.map(function(_ref2){var id=_ref2.id,options=_ref2.options;return/*#__PURE__*/React.createElement(Panel,{pathPrefix:pathPrefix,onExecuteQuery:handleExecuteQuery,key:id,options:options,onOptionsChanged:function onOptionsChanged(opts){return callAll(setPanels,updateURL)(panels.map(function(p){return id===p.id?_objectSpread(_objectSpread({},p),{},{options:opts}):p;}));},removePanel:function removePanel(){return callAll(setPanels,updateURL)(panels.reduce(function(acc,panel){return panel.id!==id?[].concat(_toConsumableArray(acc),[_objectSpread(_objectSpread({},panel),{},{key:\"\".concat(acc.length)})]):acc;},[]));},useExperimentalEditor:useExperimentalEditor,useLocalTime:useLocalTime,metricNames:metrics,pastQueries:queryHistoryEnabled?historyItems:[],enableAutocomplete:enableAutocomplete,enableHighlighting:enableHighlighting,enableLinter:enableLinter});}),/*#__PURE__*/React.createElement(Button,{className:\"d-block mb-3\",color:\"primary\",onClick:addPanel},\"Add Panel\"));};var PanelList=function PanelList(){var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),delta=_useState4[0],setDelta=_useState4[1];var _useLocalStorage3=useLocalStorage('use-new-editor',false),_useLocalStorage4=_slicedToArray(_useLocalStorage3,2),useExperimentalEditor=_useLocalStorage4[0],setUseExperimentalEditor=_useLocalStorage4[1];var _useLocalStorage5=useLocalStorage('use-local-time',false),_useLocalStorage6=_slicedToArray(_useLocalStorage5,2),useLocalTime=_useLocalStorage6[0],setUseLocalTime=_useLocalStorage6[1];var _useLocalStorage7=useLocalStorage('enable-query-history',false),_useLocalStorage8=_slicedToArray(_useLocalStorage7,2),enableQueryHistory=_useLocalStorage8[0],setEnableQueryHistory=_useLocalStorage8[1];var _useLocalStorage9=useLocalStorage('enable-metric-autocomplete',true),_useLocalStorage10=_slicedToArray(_useLocalStorage9,2),enableAutocomplete=_useLocalStorage10[0],setEnableAutocomplete=_useLocalStorage10[1];var _useLocalStorage11=useLocalStorage('enable-syntax-highlighting',true),_useLocalStorage12=_slicedToArray(_useLocalStorage11,2),enableHighlighting=_useLocalStorage12[0],setEnableHighlighting=_useLocalStorage12[1];var _useLocalStorage13=useLocalStorage('enable-linter',true),_useLocalStorage14=_slicedToArray(_useLocalStorage13,2),enableLinter=_useLocalStorage14[0],setEnableLinter=_useLocalStorage14[1];var pathPrefix=usePathPrefix();var _useFetch=useFetch(\"\".concat(pathPrefix,\"/\").concat(API_PATH,\"/label/__name__/values\")),metricsRes=_useFetch.response,metricsErr=_useFetch.error;var browserTime=new Date().getTime()/1000;var _useFetch2=useFetch(\"\".concat(pathPrefix,\"/\").concat(API_PATH,\"/query?query=time()\")),timeRes=_useFetch2.response,timeErr=_useFetch2.error;useEffect(function(){if(timeRes.data){var serverTime=timeRes.data.result[0];setDelta(Math.abs(browserTime-serverTime));}/**\n     * React wants to include browserTime to useEffect dependencies list which will cause a delta change on every re-render\n     * Basically it's not recommended to disable this rule, but this is the only way to take control over the useEffect\n     * dependencies and to not include the browserTime variable.\n     **/ // eslint-disable-next-line react-hooks/exhaustive-deps\n},[timeRes.data]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"clearfix\"},/*#__PURE__*/React.createElement(\"div\",{className:\"float-left\"},/*#__PURE__*/React.createElement(Checkbox,{wrapperStyles:{display:'inline-block'},id:\"use-local-time-checkbox\",onChange:function onChange(_ref3){var target=_ref3.target;return setUseLocalTime(target.checked);},defaultChecked:useLocalTime},\"Use local time\"),/*#__PURE__*/React.createElement(Checkbox,{wrapperStyles:{marginLeft:20,display:'inline-block'},id:\"query-history-checkbox\",onChange:function onChange(_ref4){var target=_ref4.target;return setEnableQueryHistory(target.checked);},defaultChecked:enableQueryHistory},\"Enable query history\"),/*#__PURE__*/React.createElement(Checkbox,{wrapperStyles:{marginLeft:20,display:'inline-block'},id:\"autocomplete-checkbox\",onChange:function onChange(_ref5){var target=_ref5.target;return setEnableAutocomplete(target.checked);},defaultChecked:enableAutocomplete},\"Enable autocomplete\")),/*#__PURE__*/React.createElement(\"div\",{className:\"float-right\"},/*#__PURE__*/React.createElement(Checkbox,{wrapperStyles:{display:'inline-block'},id:\"use-experimental-editor-checkbox\",onChange:function onChange(_ref6){var target=_ref6.target;return setUseExperimentalEditor(target.checked);},defaultChecked:useExperimentalEditor},\"Use experimental editor\"),/*#__PURE__*/React.createElement(Checkbox,{wrapperStyles:{marginLeft:20,display:'inline-block'},id:\"highlighting-checkbox\",onChange:function onChange(_ref7){var target=_ref7.target;return setEnableHighlighting(target.checked);},defaultChecked:enableHighlighting,disabled:!useExperimentalEditor},\"Enable highlighting\"),/*#__PURE__*/React.createElement(Checkbox,{wrapperStyles:{marginLeft:20,display:'inline-block'},id:\"linter-checkbox\",onChange:function onChange(_ref8){var target=_ref8.target;return setEnableLinter(target.checked);},defaultChecked:enableLinter,disabled:!useExperimentalEditor},\"Enable linter\"))),(delta>30||timeErr)&&/*#__PURE__*/React.createElement(Alert,{color:\"danger\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Warning: \"),timeErr&&\"Unexpected response status when fetching server time: \".concat(timeErr.message),delta>=30&&\"Error fetching server time: Detected \".concat(delta,\" seconds time difference between your browser and the server. Prometheus relies on accurate time and time drift might cause unexpected query results.\")),metricsErr&&/*#__PURE__*/React.createElement(Alert,{color:\"danger\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Warning: \"),\"Error fetching metrics list: Unexpected response status when fetching metric names: \",metricsErr.message),/*#__PURE__*/React.createElement(PanelListContent,{panels:decodePanelOptionsFromQueryString(window.location.search),useLocalTime:useLocalTime,metrics:metricsRes.data,useExperimentalEditor:useExperimentalEditor,queryHistoryEnabled:enableQueryHistory,enableAutocomplete:enableAutocomplete,enableHighlighting:enableHighlighting,enableLinter:enableLinter}));};export default PanelList;","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/src/pages/graph/PanelList.tsx"],"names":["React","useState","useEffect","Alert","Button","Panel","PanelDefaultOptions","Checkbox","generateID","decodePanelOptionsFromQueryString","encodePanelOptionsToQueryString","callAll","useFetch","useLocalStorage","usePathPrefix","API_PATH","updateURL","nextPanels","query","window","history","pushState","PanelListContent","metrics","useLocalTime","useExperimentalEditor","queryHistoryEnabled","enableAutocomplete","enableHighlighting","enableLinter","rest","panels","setPanels","historyItems","setLocalStorageHistoryItems","length","addPanel","onpopstate","location","search","handleExecuteQuery","isSimpleMetric","indexOf","extendedItems","reduce","acc","metric","slice","id","key","options","pathPrefix","map","opts","p","panel","PanelList","delta","setDelta","setUseExperimentalEditor","setUseLocalTime","enableQueryHistory","setEnableQueryHistory","setEnableAutocomplete","setEnableHighlighting","setEnableLinter","metricsRes","response","metricsErr","error","browserTime","Date","getTime","timeRes","timeErr","data","serverTime","result","Math","abs","display","target","checked","marginLeft","message"],"mappings":"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","sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { Alert, Button } from 'reactstrap';\n\nimport Panel, { PanelOptions, PanelDefaultOptions } from './Panel';\nimport Checkbox from '../../components/Checkbox';\nimport { generateID, decodePanelOptionsFromQueryString, encodePanelOptionsToQueryString, callAll } from '../../utils';\nimport { useFetch } from '../../hooks/useFetch';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { usePathPrefix } from '../../contexts/PathPrefixContext';\nimport { API_PATH } from '../../constants/constants';\n\nexport type PanelMeta = { key: string; options: PanelOptions; id: string };\n\nexport const updateURL = (nextPanels: PanelMeta[]) => {\n  const query = encodePanelOptionsToQueryString(nextPanels);\n  window.history.pushState({}, '', query);\n};\n\ninterface PanelListContentProps extends RouteComponentProps {\n  panels: PanelMeta[];\n  metrics: string[];\n  useLocalTime: boolean;\n  useExperimentalEditor: boolean;\n  queryHistoryEnabled: boolean;\n  enableAutocomplete: boolean;\n  enableHighlighting: boolean;\n  enableLinter: boolean;\n}\n\nexport const PanelListContent: FC<PanelListContentProps> = ({\n  metrics = [],\n  useLocalTime,\n  useExperimentalEditor,\n  queryHistoryEnabled,\n  enableAutocomplete,\n  enableHighlighting,\n  enableLinter,\n  ...rest\n}) => {\n  const [panels, setPanels] = useState(rest.panels);\n  const [historyItems, setLocalStorageHistoryItems] = useLocalStorage<string[]>('history', []);\n\n  useEffect(() => {\n    !panels.length && addPanel();\n    window.onpopstate = () => {\n      const panels = decodePanelOptionsFromQueryString(window.location.search);\n      if (panels.length > 0) {\n        setPanels(panels);\n      }\n    };\n    // We want useEffect to act only as componentDidMount, but react still complains about the empty dependencies list.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleExecuteQuery = (query: string) => {\n    const isSimpleMetric = metrics.indexOf(query) !== -1;\n    if (isSimpleMetric || !query.length) {\n      return;\n    }\n    const extendedItems = historyItems.reduce(\n      (acc, metric) => {\n        return metric === query ? acc : [...acc, metric]; // Prevent adding query twice.\n      },\n      [query]\n    );\n    setLocalStorageHistoryItems(extendedItems.slice(0, 50));\n  };\n\n  const addPanel = () => {\n    callAll(\n      setPanels,\n      updateURL\n    )([\n      ...panels,\n      {\n        id: generateID(),\n        key: `${panels.length}`,\n        options: PanelDefaultOptions,\n      },\n    ]);\n  };\n\n  const pathPrefix = usePathPrefix();\n\n  return (\n    <>\n      {panels.map(({ id, options }) => (\n        <Panel\n          pathPrefix={pathPrefix}\n          onExecuteQuery={handleExecuteQuery}\n          key={id}\n          options={options}\n          onOptionsChanged={opts =>\n            callAll(setPanels, updateURL)(panels.map(p => (id === p.id ? { ...p, options: opts } : p)))\n          }\n          removePanel={() =>\n            callAll(\n              setPanels,\n              updateURL\n            )(\n              panels.reduce<PanelMeta[]>(\n                (acc, panel) => (panel.id !== id ? [...acc, { ...panel, key: `${acc.length}` }] : acc),\n                []\n              )\n            )\n          }\n          useExperimentalEditor={useExperimentalEditor}\n          useLocalTime={useLocalTime}\n          metricNames={metrics}\n          pastQueries={queryHistoryEnabled ? historyItems : []}\n          enableAutocomplete={enableAutocomplete}\n          enableHighlighting={enableHighlighting}\n          enableLinter={enableLinter}\n        />\n      ))}\n      <Button className=\"d-block mb-3\" color=\"primary\" onClick={addPanel}>\n        Add Panel\n      </Button>\n    </>\n  );\n};\n\nconst PanelList: FC<RouteComponentProps> = () => {\n  const [delta, setDelta] = useState(0);\n  const [useExperimentalEditor, setUseExperimentalEditor] = useLocalStorage('use-new-editor', false);\n  const [useLocalTime, setUseLocalTime] = useLocalStorage('use-local-time', false);\n  const [enableQueryHistory, setEnableQueryHistory] = useLocalStorage('enable-query-history', false);\n  const [enableAutocomplete, setEnableAutocomplete] = useLocalStorage('enable-metric-autocomplete', true);\n  const [enableHighlighting, setEnableHighlighting] = useLocalStorage('enable-syntax-highlighting', true);\n  const [enableLinter, setEnableLinter] = useLocalStorage('enable-linter', true);\n\n  const pathPrefix = usePathPrefix();\n  const { response: metricsRes, error: metricsErr } = useFetch<string[]>(`${pathPrefix}/${API_PATH}/label/__name__/values`);\n\n  const browserTime = new Date().getTime() / 1000;\n  const { response: timeRes, error: timeErr } = useFetch<{ result: number[] }>(\n    `${pathPrefix}/${API_PATH}/query?query=time()`\n  );\n\n  useEffect(() => {\n    if (timeRes.data) {\n      const serverTime = timeRes.data.result[0];\n      setDelta(Math.abs(browserTime - serverTime));\n    }\n    /**\n     * React wants to include browserTime to useEffect dependencies list which will cause a delta change on every re-render\n     * Basically it's not recommended to disable this rule, but this is the only way to take control over the useEffect\n     * dependencies and to not include the browserTime variable.\n     **/\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timeRes.data]);\n\n  return (\n    <>\n      <div className=\"clearfix\">\n        <div className=\"float-left\">\n          <Checkbox\n            wrapperStyles={{ display: 'inline-block' }}\n            id=\"use-local-time-checkbox\"\n            onChange={({ target }) => setUseLocalTime(target.checked)}\n            defaultChecked={useLocalTime}\n          >\n            Use local time\n          </Checkbox>\n          <Checkbox\n            wrapperStyles={{ marginLeft: 20, display: 'inline-block' }}\n            id=\"query-history-checkbox\"\n            onChange={({ target }) => setEnableQueryHistory(target.checked)}\n            defaultChecked={enableQueryHistory}\n          >\n            Enable query history\n          </Checkbox>\n          <Checkbox\n            wrapperStyles={{ marginLeft: 20, display: 'inline-block' }}\n            id=\"autocomplete-checkbox\"\n            onChange={({ target }) => setEnableAutocomplete(target.checked)}\n            defaultChecked={enableAutocomplete}\n          >\n            Enable autocomplete\n          </Checkbox>\n        </div>\n        <div className=\"float-right\">\n          <Checkbox\n            wrapperStyles={{ display: 'inline-block' }}\n            id=\"use-experimental-editor-checkbox\"\n            onChange={({ target }) => setUseExperimentalEditor(target.checked)}\n            defaultChecked={useExperimentalEditor}\n          >\n            Use experimental editor\n          </Checkbox>\n          <Checkbox\n            wrapperStyles={{ marginLeft: 20, display: 'inline-block' }}\n            id=\"highlighting-checkbox\"\n            onChange={({ target }) => setEnableHighlighting(target.checked)}\n            defaultChecked={enableHighlighting}\n            disabled={!useExperimentalEditor}\n          >\n            Enable highlighting\n          </Checkbox>\n          <Checkbox\n            wrapperStyles={{ marginLeft: 20, display: 'inline-block' }}\n            id=\"linter-checkbox\"\n            onChange={({ target }) => setEnableLinter(target.checked)}\n            defaultChecked={enableLinter}\n            disabled={!useExperimentalEditor}\n          >\n            Enable linter\n          </Checkbox>\n        </div>\n      </div>\n      {(delta > 30 || timeErr) && (\n        <Alert color=\"danger\">\n          <strong>Warning: </strong>\n          {timeErr && `Unexpected response status when fetching server time: ${timeErr.message}`}\n          {delta >= 30 &&\n            `Error fetching server time: Detected ${delta} seconds time difference between your browser and the server. Prometheus relies on accurate time and time drift might cause unexpected query results.`}\n        </Alert>\n      )}\n      {metricsErr && (\n        <Alert color=\"danger\">\n          <strong>Warning: </strong>\n          Error fetching metrics list: Unexpected response status when fetching metric names: {metricsErr.message}\n        </Alert>\n      )}\n      <PanelListContent\n        panels={decodePanelOptionsFromQueryString(window.location.search)}\n        useLocalTime={useLocalTime}\n        metrics={metricsRes.data}\n        useExperimentalEditor={useExperimentalEditor}\n        queryHistoryEnabled={enableQueryHistory}\n        enableAutocomplete={enableAutocomplete}\n        enableHighlighting={enableHighlighting}\n        enableLinter={enableLinter}\n      />\n    </>\n  );\n};\n\nexport default PanelList;\n"]},"metadata":{},"sourceType":"module"}