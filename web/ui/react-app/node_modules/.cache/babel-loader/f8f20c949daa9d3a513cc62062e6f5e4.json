{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar getLocation = function getLocation(source) {\n  var _source$location = source.location,\n      search = _source$location.search,\n      hash = _source$location.hash,\n      href = _source$location.href,\n      origin = _source$location.origin,\n      protocol = _source$location.protocol,\n      host = _source$location.host,\n      hostname = _source$location.hostname,\n      port = _source$location.port;\n  var pathname = source.location.pathname;\n\n  if (!pathname && href && canUseDOM) {\n    var url = new URL(href);\n    pathname = url.pathname;\n  }\n\n  return {\n    pathname: encodeURI(decodeURI(pathname)),\n    search: search,\n    hash: hash,\n    href: href,\n    origin: origin,\n    protocol: protocol,\n    host: host,\n    hostname: hostname,\n    port: port,\n    state: source.history.state,\n    key: source.history.state && source.history.state.key || \"initial\"\n  };\n};\n\nvar createHistory = function createHistory(source, options) {\n  var listeners = [];\n  var location = getLocation(source);\n  var transitioning = false;\n\n  var resolveTransition = function resolveTransition() {};\n\n  return {\n    get location() {\n      return location;\n    },\n\n    get transitioning() {\n      return transitioning;\n    },\n\n    _onTransitionComplete: function _onTransitionComplete() {\n      transitioning = false;\n      resolveTransition();\n    },\n    listen: function listen(listener) {\n      listeners.push(listener);\n\n      var popstateListener = function popstateListener() {\n        location = getLocation(source);\n        listener({\n          location: location,\n          action: \"POP\"\n        });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n      return function () {\n        source.removeEventListener(\"popstate\", popstateListener);\n        listeners = listeners.filter(function (fn) {\n          return fn !== listener;\n        });\n      };\n    },\n    navigate: function navigate(to) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          state = _ref.state,\n          _ref$replace = _ref.replace,\n          replace = _ref$replace === undefined ? false : _ref$replace;\n\n      if (typeof to === \"number\") {\n        source.history.go(to);\n      } else {\n        state = _extends({}, state, {\n          key: Date.now() + \"\"\n        }); // try...catch iOS Safari limits to 100 pushState calls\n\n        try {\n          if (transitioning || replace) {\n            source.history.replaceState(state, null, to);\n          } else {\n            source.history.pushState(state, null, to);\n          }\n        } catch (e) {\n          source.location[replace ? \"replace\" : \"assign\"](to);\n        }\n      }\n\n      location = getLocation(source);\n      transitioning = true;\n      var transition = new Promise(function (res) {\n        return resolveTransition = res;\n      });\n      listeners.forEach(function (listener) {\n        return listener({\n          location: location,\n          action: \"PUSH\"\n        });\n      });\n      return transition;\n    }\n  };\n}; ////////////////////////////////////////////////////////////////////////////////\n// Stores history entries in memory for testing or other platforms like Native\n\n\nvar createMemorySource = function createMemorySource() {\n  var initialPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n  var searchIndex = initialPath.indexOf(\"?\");\n  var initialLocation = {\n    pathname: searchIndex > -1 ? initialPath.substr(0, searchIndex) : initialPath,\n    search: searchIndex > -1 ? initialPath.substr(searchIndex) : \"\"\n  };\n  var index = 0;\n  var stack = [initialLocation];\n  var states = [null];\n  return {\n    get location() {\n      return stack[index];\n    },\n\n    addEventListener: function addEventListener(name, fn) {},\n    removeEventListener: function removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n\n      get index() {\n        return index;\n      },\n\n      get state() {\n        return states[index];\n      },\n\n      pushState: function pushState(state, _, uri) {\n        var _uri$split = uri.split(\"?\"),\n            pathname = _uri$split[0],\n            _uri$split$ = _uri$split[1],\n            search = _uri$split$ === undefined ? \"\" : _uri$split$;\n\n        index++;\n        stack.push({\n          pathname: pathname,\n          search: search.length ? \"?\" + search : search\n        });\n        states.push(state);\n      },\n      replaceState: function replaceState(state, _, uri) {\n        var _uri$split2 = uri.split(\"?\"),\n            pathname = _uri$split2[0],\n            _uri$split2$ = _uri$split2[1],\n            search = _uri$split2$ === undefined ? \"\" : _uri$split2$;\n\n        stack[index] = {\n          pathname: pathname,\n          search: search\n        };\n        states[index] = state;\n      },\n      go: function go(to) {\n        var newIndex = index + to;\n\n        if (newIndex < 0 || newIndex > states.length - 1) {\n          return;\n        }\n\n        index = newIndex;\n      }\n    }\n  };\n}; ////////////////////////////////////////////////////////////////////////////////\n// global history - uses window.history as the source if available, otherwise a\n// memory history\n\n\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n\nvar getSource = function getSource() {\n  return canUseDOM ? window : createMemorySource();\n};\n\nvar globalHistory = createHistory(getSource());\nvar navigate = globalHistory.navigate; ////////////////////////////////////////////////////////////////////////////////\n\nexport { globalHistory, navigate, createHistory, createMemorySource };","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/@reach/router/es/lib/history.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","getLocation","_source$location","location","search","hash","href","origin","protocol","host","hostname","port","pathname","canUseDOM","url","URL","encodeURI","decodeURI","state","history","createHistory","options","listeners","transitioning","resolveTransition","_onTransitionComplete","listen","listener","push","popstateListener","action","addEventListener","removeEventListener","filter","fn","navigate","to","_ref","undefined","_ref$replace","replace","go","Date","now","replaceState","pushState","e","transition","Promise","res","forEach","createMemorySource","initialPath","searchIndex","indexOf","initialLocation","substr","index","stack","states","name","entries","_","uri","_uri$split","split","_uri$split$","_uri$split2","_uri$split2$","newIndex","window","document","createElement","getSource","globalHistory"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar getLocation = function getLocation(source) {\n  var _source$location = source.location,\n      search = _source$location.search,\n      hash = _source$location.hash,\n      href = _source$location.href,\n      origin = _source$location.origin,\n      protocol = _source$location.protocol,\n      host = _source$location.host,\n      hostname = _source$location.hostname,\n      port = _source$location.port;\n  var pathname = source.location.pathname;\n\n\n  if (!pathname && href && canUseDOM) {\n    var url = new URL(href);\n    pathname = url.pathname;\n  }\n\n  return {\n    pathname: encodeURI(decodeURI(pathname)),\n    search: search,\n    hash: hash,\n    href: href,\n    origin: origin,\n    protocol: protocol,\n    host: host,\n    hostname: hostname,\n    port: port,\n    state: source.history.state,\n    key: source.history.state && source.history.state.key || \"initial\"\n  };\n};\n\nvar createHistory = function createHistory(source, options) {\n  var listeners = [];\n  var location = getLocation(source);\n  var transitioning = false;\n  var resolveTransition = function resolveTransition() {};\n\n  return {\n    get location() {\n      return location;\n    },\n\n    get transitioning() {\n      return transitioning;\n    },\n\n    _onTransitionComplete: function _onTransitionComplete() {\n      transitioning = false;\n      resolveTransition();\n    },\n    listen: function listen(listener) {\n      listeners.push(listener);\n\n      var popstateListener = function popstateListener() {\n        location = getLocation(source);\n        listener({ location: location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return function () {\n        source.removeEventListener(\"popstate\", popstateListener);\n        listeners = listeners.filter(function (fn) {\n          return fn !== listener;\n        });\n      };\n    },\n    navigate: function navigate(to) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          state = _ref.state,\n          _ref$replace = _ref.replace,\n          replace = _ref$replace === undefined ? false : _ref$replace;\n\n      if (typeof to === \"number\") {\n        source.history.go(to);\n      } else {\n        state = _extends({}, state, { key: Date.now() + \"\" });\n        // try...catch iOS Safari limits to 100 pushState calls\n        try {\n          if (transitioning || replace) {\n            source.history.replaceState(state, null, to);\n          } else {\n            source.history.pushState(state, null, to);\n          }\n        } catch (e) {\n          source.location[replace ? \"replace\" : \"assign\"](to);\n        }\n      }\n\n      location = getLocation(source);\n      transitioning = true;\n      var transition = new Promise(function (res) {\n        return resolveTransition = res;\n      });\n      listeners.forEach(function (listener) {\n        return listener({ location: location, action: \"PUSH\" });\n      });\n      return transition;\n    }\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Stores history entries in memory for testing or other platforms like Native\nvar createMemorySource = function createMemorySource() {\n  var initialPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n\n  var searchIndex = initialPath.indexOf(\"?\");\n  var initialLocation = {\n    pathname: searchIndex > -1 ? initialPath.substr(0, searchIndex) : initialPath,\n    search: searchIndex > -1 ? initialPath.substr(searchIndex) : \"\"\n  };\n  var index = 0;\n  var stack = [initialLocation];\n  var states = [null];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener: function addEventListener(name, fn) {},\n    removeEventListener: function removeEventListener(name, fn) {},\n\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState: function pushState(state, _, uri) {\n        var _uri$split = uri.split(\"?\"),\n            pathname = _uri$split[0],\n            _uri$split$ = _uri$split[1],\n            search = _uri$split$ === undefined ? \"\" : _uri$split$;\n\n        index++;\n        stack.push({ pathname: pathname, search: search.length ? \"?\" + search : search });\n        states.push(state);\n      },\n      replaceState: function replaceState(state, _, uri) {\n        var _uri$split2 = uri.split(\"?\"),\n            pathname = _uri$split2[0],\n            _uri$split2$ = _uri$split2[1],\n            search = _uri$split2$ === undefined ? \"\" : _uri$split2$;\n\n        stack[index] = { pathname: pathname, search: search };\n        states[index] = state;\n      },\n      go: function go(to) {\n        var newIndex = index + to;\n\n        if (newIndex < 0 || newIndex > states.length - 1) {\n          return;\n        }\n\n        index = newIndex;\n      }\n    }\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// global history - uses window.history as the source if available, otherwise a\n// memory history\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nvar getSource = function getSource() {\n  return canUseDOM ? window : createMemorySource();\n};\n\nvar globalHistory = createHistory(getSource());\nvar navigate = globalHistory.navigate;\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport { globalHistory, navigate, createHistory, createMemorySource };"]},"metadata":{},"sourceType":"module"}