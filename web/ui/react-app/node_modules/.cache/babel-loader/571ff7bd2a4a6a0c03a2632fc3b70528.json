{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _addClass = _interopRequireDefault(require(\"dom-helpers/class/addClass\"));\n\nvar _removeClass = _interopRequireDefault(require(\"dom-helpers/class/removeClass\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass.default)(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass.default)(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](http://www.nganimate.org/) library, you should use it if you're\n * using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity: 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.onEnter = function (node, appearing) {\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          className = _this$getClassNames.className;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, className);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node, appearing);\n      }\n    };\n\n    _this.onEntering = function (node, appearing) {\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          activeClassName = _this$getClassNames2.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node, appearing);\n      }\n    };\n\n    _this.onEntered = function (node, appearing) {\n      var appearClassName = _this.getClassNames('appear').doneClassName;\n\n      var enterClassName = _this.getClassNames('enter').doneClassName;\n\n      var doneClassName = appearing ? appearClassName + \" \" + enterClassName : enterClassName;\n\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node, appearing);\n      }\n    };\n\n    _this.onExit = function (node) {\n      var _this$getClassNames3 = _this.getClassNames('exit'),\n          className = _this$getClassNames3.className;\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      addClass(node, className);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.onExiting = function (node) {\n      var _this$getClassNames4 = _this.getClassNames('exit'),\n          activeClassName = _this$getClassNames4.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.onExited = function (node) {\n      var _this$getClassNames5 = _this.getClassNames('exit'),\n          doneClassName = _this$getClassNames5.doneClassName;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + '-' : '';\n      var className = isStringClassNames ? prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? className + '-active' : classNames[type + 'Active'];\n      var doneClassName = isStringClassNames ? className + '-done' : classNames[type + 'Done'];\n      return {\n        className: className,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$getClassNames6 = this.getClassNames(type),\n        className = _this$getClassNames6.className,\n        activeClassName = _this$getClassNames6.activeClassName,\n        doneClassName = _this$getClassNames6.doneClassName;\n\n    className && removeClass(node, className);\n    activeClassName && removeClass(node, activeClassName);\n    doneClassName && removeClass(node, doneClassName);\n  };\n\n  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {\n    // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n    if (className) {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n      /* eslint-enable no-unused-expressions */\n\n      addClass(node, className);\n    }\n  };\n\n  _proto.render = function render() {\n    var props = _extends({}, this.props);\n\n    delete props.classNames;\n    return _react.default.createElement(_Transition.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react.default.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, _Transition.default.propTypes, {\n  /**\n   * The animation classNames applied to the component as it enters, exits or\n   * has finished the transition. A single name can be provided and it will be\n   * suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`,\n   * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,\n   * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.\n   *\n   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.\n   * This allows you to define different behavior for when appearing is done and\n   * when regular entering is done, using selectors like\n   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an\n   * epic entrance animation when element first appears in the DOM using\n   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   * simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nvar _default = CSSTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/react-transition-group/CSSTransition.js"],"names":["exports","__esModule","default","PropTypes","_interopRequireWildcard","require","_addClass","_interopRequireDefault","_removeClass","_react","_Transition","_PropTypes","obj","newObj","key","Object","prototype","hasOwnProperty","call","desc","defineProperty","getOwnPropertyDescriptor","get","set","_extends","assign","target","i","arguments","length","source","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","addClass","node","classes","split","forEach","c","removeClass","CSSTransition","_React$Component","_this","_len","args","Array","_key","concat","onEnter","appearing","_this$getClassNames","getClassNames","className","removeClasses","props","onEntering","_this$getClassNames2","activeClassName","reflowAndAddClass","onEntered","appearClassName","doneClassName","enterClassName","onExit","_this$getClassNames3","onExiting","_this$getClassNames4","onExited","_this$getClassNames5","type","classNames","isStringClassNames","prefix","_proto","_this$getClassNames6","scrollTop","render","createElement","Component","defaultProps","propTypes","process","env","NODE_ENV","classNamesShape","func","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _addClass = _interopRequireDefault(require(\"dom-helpers/class/addClass\"));\n\nvar _removeClass = _interopRequireDefault(require(\"dom-helpers/class/removeClass\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass.default)(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass.default)(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](http://www.nganimate.org/) library, you should use it if you're\n * using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity: 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**.\n */\n\n\nvar CSSTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.onEnter = function (node, appearing) {\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          className = _this$getClassNames.className;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, className);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node, appearing);\n      }\n    };\n\n    _this.onEntering = function (node, appearing) {\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          activeClassName = _this$getClassNames2.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node, appearing);\n      }\n    };\n\n    _this.onEntered = function (node, appearing) {\n      var appearClassName = _this.getClassNames('appear').doneClassName;\n\n      var enterClassName = _this.getClassNames('enter').doneClassName;\n\n      var doneClassName = appearing ? appearClassName + \" \" + enterClassName : enterClassName;\n\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node, appearing);\n      }\n    };\n\n    _this.onExit = function (node) {\n      var _this$getClassNames3 = _this.getClassNames('exit'),\n          className = _this$getClassNames3.className;\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      addClass(node, className);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.onExiting = function (node) {\n      var _this$getClassNames4 = _this.getClassNames('exit'),\n          activeClassName = _this$getClassNames4.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.onExited = function (node) {\n      var _this$getClassNames5 = _this.getClassNames('exit'),\n          doneClassName = _this$getClassNames5.doneClassName;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + '-' : '';\n      var className = isStringClassNames ? prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? className + '-active' : classNames[type + 'Active'];\n      var doneClassName = isStringClassNames ? className + '-done' : classNames[type + 'Done'];\n      return {\n        className: className,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$getClassNames6 = this.getClassNames(type),\n        className = _this$getClassNames6.className,\n        activeClassName = _this$getClassNames6.activeClassName,\n        doneClassName = _this$getClassNames6.doneClassName;\n\n    className && removeClass(node, className);\n    activeClassName && removeClass(node, activeClassName);\n    doneClassName && removeClass(node, doneClassName);\n  };\n\n  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {\n    // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n    if (className) {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n      /* eslint-enable no-unused-expressions */\n\n      addClass(node, className);\n    }\n  };\n\n  _proto.render = function render() {\n    var props = _extends({}, this.props);\n\n    delete props.classNames;\n    return _react.default.createElement(_Transition.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react.default.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, _Transition.default.propTypes, {\n  /**\n   * The animation classNames applied to the component as it enters, exits or\n   * has finished the transition. A single name can be provided and it will be\n   * suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`,\n   * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,\n   * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.\n   *\n   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.\n   * This allows you to define different behavior for when appearing is done and\n   * when regular entering is done, using selectors like\n   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an\n   * epic entrance animation when element first appears in the DOM using\n   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   * simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nvar _default = CSSTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];"]},"metadata":{},"sourceType":"script"}