{"ast":null,"code":"import _classCallCheck from \"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2020 The Prometheus Authors\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport { Parser } from '../parser'; // HybridLint will provide a promQL linter with static analysis\n\nexport var HybridLint = /*#__PURE__*/function () {\n  function HybridLint() {\n    _classCallCheck(this, HybridLint);\n  }\n\n  _createClass(HybridLint, [{\n    key: \"promQL\",\n    value: function promQL() {\n      return function (view) {\n        var parser = new Parser(view.state);\n        parser.analyze();\n        return parser.getDiagnostics();\n      };\n    }\n  }]);\n\n  return HybridLint;\n}();","map":{"version":3,"sources":["../../../src/lang-promql/lint/hybrid.ts"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,SAAS,MAAT,QAAuB,WAAvB,C,CAEA;;AACA,WAAa,UAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACS,kBAAM;AACX,aAAO,UAAC,IAAD,EAAqB;AAC1B,YAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,IAAI,CAAC,KAAhB,CAAf;AACA,QAAA,MAAM,CAAC,OAAP;AACA,eAAO,MAAM,CAAC,cAAP,EAAP;AACD,OAJD;AAKD;AAPH;;AAAA;AAAA","sourceRoot":"","sourcesContent":["// The MIT License (MIT)\n//\n// Copyright (c) 2020 The Prometheus Authors\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport { Parser } from '../parser';\n// HybridLint will provide a promQL linter with static analysis\nexport class HybridLint {\n    promQL() {\n        return (view) => {\n            const parser = new Parser(view.state);\n            parser.analyze();\n            return parser.getDiagnostics();\n        };\n    }\n}\n//# sourceMappingURL=hybrid.js.map"]},"metadata":{},"sourceType":"module"}