{"ast":null,"code":"'use strict';\n\nmodule.exports = function (string) {\n  if (typeof string !== 'string') {\n    throw new TypeError('Expected a string');\n  } // Escape characters with special meaning either inside or outside character sets.\n  // Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\n\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n};","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/sanitize-html/node_modules/escape-string-regexp/index.js"],"names":["module","exports","string","TypeError","replace"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,MAAM,EAAI;AAC1B,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC/B,UAAM,IAAIC,SAAJ,CAAc,mBAAd,CAAN;AACA,GAHyB,CAK1B;AACA;;;AACA,SAAOD,MAAM,CACXE,OADK,CACG,qBADH,EAC0B,MAD1B,EAELA,OAFK,CAEG,IAFH,EAES,OAFT,CAAP;AAGA,CAVD","sourcesContent":["'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n"]},"metadata":{},"sourceType":"script"}