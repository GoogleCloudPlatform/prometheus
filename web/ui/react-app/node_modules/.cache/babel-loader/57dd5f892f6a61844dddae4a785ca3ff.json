{"ast":null,"code":"import _defineProperty from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{Button,ButtonGroup}from'reactstrap';var Filter=function Filter(_ref){var filter=_ref.filter,setFilter=_ref.setFilter,expanded=_ref.expanded,setExpanded=_ref.setExpanded;var showHealthy=filter.showHealthy;var allExpanded=Object.values(expanded).every(function(v){return v;});var mapExpansion=function mapExpansion(next){return Object.keys(expanded).reduce(function(acc,scrapePool){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},scrapePool,next));},{});};var btnProps={all:{active:showHealthy,className:'all',color:'primary',onClick:function onClick(){return setFilter(_objectSpread(_objectSpread({},filter),{},{showHealthy:true}));}},unhealthy:{active:!showHealthy,className:'unhealthy',color:'primary',onClick:function onClick(){return setFilter(_objectSpread(_objectSpread({},filter),{},{showHealthy:false}));}},expansionState:{active:false,className:'expansion',color:'primary',onClick:function onClick(){return setExpanded(mapExpansion(!allExpanded));}}};return/*#__PURE__*/React.createElement(ButtonGroup,{className:\"mt-3 mb-4\"},/*#__PURE__*/React.createElement(Button,btnProps.all,\"All\"),/*#__PURE__*/React.createElement(Button,btnProps.unhealthy,\"Unhealthy\"),/*#__PURE__*/React.createElement(Button,btnProps.expansionState,allExpanded?'Collapse All':'Expand All'));};export default Filter;","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/src/pages/targets/Filter.tsx"],"names":["React","Button","ButtonGroup","Filter","filter","setFilter","expanded","setExpanded","showHealthy","allExpanded","Object","values","every","v","mapExpansion","next","keys","reduce","acc","scrapePool","btnProps","all","active","className","color","onClick","unhealthy","expansionState"],"mappings":"qcAAA,MAAOA,CAAAA,KAAP,KAAoD,OAApD,CACA,OAASC,MAAT,CAAiBC,WAAjB,KAAoC,YAApC,CAkBA,GAAMC,CAAAA,MAAuB,CAAG,QAA1BA,CAAAA,MAA0B,MAAkD,IAA/CC,CAAAA,MAA+C,MAA/CA,MAA+C,CAAvCC,SAAuC,MAAvCA,SAAuC,CAA5BC,QAA4B,MAA5BA,QAA4B,CAAlBC,WAAkB,MAAlBA,WAAkB,CAChF,GAAQC,CAAAA,WAAR,CAAwBJ,MAAxB,CAAQI,WAAR,CACA,GAAMC,CAAAA,WAAW,CAAGC,MAAM,CAACC,MAAP,CAAcL,QAAd,EAAwBM,KAAxB,CAA8B,SAACC,CAAD,QAAyBA,CAAAA,CAAzB,EAA9B,CAApB,CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,QACnBL,CAAAA,MAAM,CAACM,IAAP,CAAYV,QAAZ,EAAsBW,MAAtB,CACE,SAACC,GAAD,CAAyCC,UAAzC,wCACKD,GADL,wBAEGC,UAFH,CAEgBJ,IAFhB,IADF,CAKE,EALF,CADmB,EAArB,CAQA,GAAMK,CAAAA,QAAQ,CAAG,CACfC,GAAG,CAAE,CACHC,MAAM,CAAEd,WADL,CAEHe,SAAS,CAAE,KAFR,CAGHC,KAAK,CAAE,SAHJ,CAIHC,OAAO,CAAE,yBAAYpB,CAAAA,SAAS,gCAAMD,MAAN,MAAcI,WAAW,CAAE,IAA3B,GAArB,EAJN,CADU,CAOfkB,SAAS,CAAE,CACTJ,MAAM,CAAE,CAACd,WADA,CAETe,SAAS,CAAE,WAFF,CAGTC,KAAK,CAAE,SAHE,CAITC,OAAO,CAAE,yBAAYpB,CAAAA,SAAS,gCAAMD,MAAN,MAAcI,WAAW,CAAE,KAA3B,GAArB,EAJA,CAPI,CAafmB,cAAc,CAAE,CACdL,MAAM,CAAE,KADM,CAEdC,SAAS,CAAE,WAFG,CAGdC,KAAK,CAAE,SAHO,CAIdC,OAAO,CAAE,yBAAYlB,CAAAA,WAAW,CAACO,YAAY,CAAC,CAACL,WAAF,CAAb,CAAvB,EAJK,CAbD,CAAjB,CAoBA,mBACE,oBAAC,WAAD,EAAa,SAAS,CAAC,WAAvB,eACE,oBAAC,MAAD,CAAYW,QAAQ,CAACC,GAArB,OADF,cAEE,oBAAC,MAAD,CAAYD,QAAQ,CAACM,SAArB,aAFF,cAGE,oBAAC,MAAD,CAAYN,QAAQ,CAACO,cAArB,CAAsClB,WAAW,CAAG,cAAH,CAAoB,YAArE,CAHF,CADF,CAOD,CAtCD,CAwCA,cAAeN,CAAAA,MAAf","sourcesContent":["import React, { Dispatch, FC, SetStateAction } from 'react';\nimport { Button, ButtonGroup } from 'reactstrap';\n\nexport interface FilterData {\n  showHealthy: boolean;\n  showUnhealthy: boolean;\n}\n\nexport interface Expanded {\n  [scrapePool: string]: boolean;\n}\n\nexport interface FilterProps {\n  filter: FilterData;\n  setFilter: Dispatch<SetStateAction<FilterData>>;\n  expanded: Expanded;\n  setExpanded: Dispatch<SetStateAction<Expanded>>;\n}\n\nconst Filter: FC<FilterProps> = ({ filter, setFilter, expanded, setExpanded }) => {\n  const { showHealthy } = filter;\n  const allExpanded = Object.values(expanded).every((v: boolean): boolean => v);\n  const mapExpansion = (next: boolean): Expanded =>\n    Object.keys(expanded).reduce(\n      (acc: { [scrapePool: string]: boolean }, scrapePool: string) => ({\n        ...acc,\n        [scrapePool]: next,\n      }),\n      {}\n    );\n  const btnProps = {\n    all: {\n      active: showHealthy,\n      className: 'all',\n      color: 'primary',\n      onClick: (): void => setFilter({ ...filter, showHealthy: true }),\n    },\n    unhealthy: {\n      active: !showHealthy,\n      className: 'unhealthy',\n      color: 'primary',\n      onClick: (): void => setFilter({ ...filter, showHealthy: false }),\n    },\n    expansionState: {\n      active: false,\n      className: 'expansion',\n      color: 'primary',\n      onClick: (): void => setExpanded(mapExpansion(!allExpanded)),\n    },\n  };\n  return (\n    <ButtonGroup className=\"mt-3 mb-4\">\n      <Button {...btnProps.all}>All</Button>\n      <Button {...btnProps.unhealthy}>Unhealthy</Button>\n      <Button {...btnProps.expansionState}>{allExpanded ? 'Collapse All' : 'Expand All'}</Button>\n    </ButtonGroup>\n  );\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}