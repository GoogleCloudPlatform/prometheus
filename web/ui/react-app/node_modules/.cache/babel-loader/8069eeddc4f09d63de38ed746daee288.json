{"ast":null,"code":"import { Parser } from 'lezer'; // This file was generated by lezer-generator. You probably shouldn't edit it.\n\nvar Bool = 1,\n    Ignoring = 2,\n    On = 3,\n    GroupLeft = 4,\n    GroupRight = 5,\n    Offset = 6,\n    Avg = 7,\n    Bottomk = 8,\n    Count = 9,\n    CountValues = 10,\n    Group = 11,\n    Max = 12,\n    Min = 13,\n    Quantile = 14,\n    Stddev = 15,\n    Stdvar = 16,\n    Sum = 17,\n    Topk = 18,\n    By = 19,\n    Without = 20,\n    And = 21,\n    Or = 22,\n    Unless = 23; // Copyright 2021 PromLabs GmbH\n\nvar keywordTokens = {\n  bool: Bool,\n  ignoring: Ignoring,\n  on: On,\n  group_left: GroupLeft,\n  group_right: GroupRight,\n  offset: Offset\n};\n\nvar specializeIdentifier = function specializeIdentifier(value, stack) {\n  return keywordTokens[value.toLowerCase()] || -1;\n};\n\nvar contextualKeywordTokens = {\n  avg: Avg,\n  bottomk: Bottomk,\n  count: Count,\n  count_values: CountValues,\n  group: Group,\n  max: Max,\n  min: Min,\n  quantile: Quantile,\n  stddev: Stddev,\n  stdvar: Stdvar,\n  sum: Sum,\n  topk: Topk,\n  by: By,\n  without: Without,\n  and: And,\n  or: Or,\n  unless: Unless\n};\n\nvar extendIdentifier = function extendIdentifier(value, stack) {\n  return contextualKeywordTokens[value.toLowerCase()] || -1;\n}; // This file was generated by lezer-generator. You probably shouldn't edit it.\n\n\nvar spec_Identifier = {\n  __proto__: null,\n  absent_over_time: 269,\n  absent: 271,\n  abs: 273,\n  avg_over_time: 275,\n  ceil: 277,\n  changes: 279,\n  clamp: 281,\n  clamp_max: 283,\n  clamp_min: 285,\n  count_over_time: 287,\n  days_in_month: 289,\n  day_of_month: 291,\n  day_of_week: 293,\n  delta: 295,\n  deriv: 297,\n  exp: 299,\n  floor: 301,\n  histogram_quantile: 303,\n  holt_winters: 305,\n  hour: 307,\n  idelta: 309,\n  increase: 311,\n  irate: 313,\n  label_replace: 315,\n  label_join: 317,\n  last_over_time: 319,\n  ln: 321,\n  log10: 323,\n  log2: 325,\n  max_over_time: 327,\n  min_over_time: 329,\n  minute: 331,\n  month: 333,\n  predict_linear: 335,\n  quantile_over_time: 337,\n  rate: 339,\n  resets: 341,\n  round: 343,\n  scalar: 345,\n  sgn: 347,\n  sort: 349,\n  sort_desc: 351,\n  sqrt: 353,\n  stddev_over_time: 355,\n  stdvar_over_time: 357,\n  sum_over_time: 359,\n  timestamp: 361,\n  time: 363,\n  vector: 365,\n  year: 367\n};\nvar parser = Parser.deserialize({\n  version: 13,\n  states: \"3tOYQPOOOOQO'#Cx'#CxO%sQPO'#CwQ&OQQOOOOQO'#Db'#DbO%yQPO'#DaOYQPO'#ElOOQO'#Ep'#EpOYQPO'#EoOOQO'#Er'#ErO'YQSO'#EsO'bQQO'#EqOOQO'#Eq'#EqOOQO'#Cv'#CvOOQO'#Dc'#DcOOQO'#De'#DeOOQO'#Df'#DfOOQO'#Dg'#DgOOQO'#Dh'#DhOOQO'#Di'#DiOOQO'#Dj'#DjOOQO'#Dk'#DkOOQO'#Dl'#DlOOQO'#Dm'#DmOOQO'#Dn'#DnOOQO'#Do'#DoOOQO'#Dp'#DpOOQO'#Dq'#DqOOQO'#Dr'#DrOOQO'#Ds'#DsOOQO'#Dt'#DtOOQO'#Du'#DuOOQO'#Dv'#DvOOQO'#Dw'#DwOOQO'#Dx'#DxOOQO'#Dy'#DyOOQO'#Dz'#DzOOQO'#D{'#D{OOQO'#D|'#D|OOQO'#D}'#D}OOQO'#EO'#EOOOQO'#EP'#EPOOQO'#EQ'#EQOOQO'#ER'#EROOQO'#ES'#ESOOQO'#ET'#ETOOQO'#EU'#EUOOQO'#EV'#EVOOQO'#EW'#EWOOQO'#EX'#EXOOQO'#EY'#EYOOQO'#EZ'#EZOOQO'#E['#E[OOQO'#E]'#E]OOQO'#E^'#E^OOQO'#E_'#E_OOQO'#E`'#E`OOQO'#Ea'#EaOOQO'#Eb'#EbOOQO'#Ec'#EcOOQO'#Ed'#EdOOQO'#Ee'#EeOOQO'#Ef'#EfOOQO'#Eg'#EgO(xQPO'#CyO(}QPO'#DOO%yQPO,59cO)UQQO,59cO*oQPO,59lO*oQPO,59lO*oQPO,59lO*oQPO,59lO*oQPO,59lO/cQQO,5;SO/hQQO,5;VO/pQWO,5;fOOQO,59{,59{O0RQQO,5;WO0YQQO,5;ZO1mQPO'#EuO1{QPO,5;_OOQO'#Et'#EtOOQO,5;_,5;_OOQO,5;],5;]O2TQSO'#CzOOQO,59e,59eO2]QPO,59jO2eQQO'#DPOOQO,59j,59jOOQO1G.}1G.}O(xQPO'#DTO7YQPO'#DSO7dQPO'#DSOYQPO1G/WOYQPO1G/WOYQPO1G/WOYQPO1G/WOYQPO1G/WO7nQSO1G0nOOQO1G0q1G0qO7vQQO1G0qO7{QPO'#E|OOQO'#E}'#E}OOQO1G1Q1G1QO8QQPO1G1QOOQO1G0r1G0rOOQO'#Ev'#EvO8VQPO,5;aO8[QSO1G0yOOQO1G0y1G0yOOQO'#C|'#C|O8dQPO,59fOOQO'#C{'#C{OOQO,59f,59fOYQPO,59kOOQO1G/U1G/UOOQO,59o,59oO=SQPO,59nO=ZQPO,59nO>rQQO7+$rO?PQQO7+$rO@_QQO7+$rO@uQQO7+$rOBZQQO7+$rOOQO7+&Y7+&YOBtQQO7+&`OOQO7+&]7+&]OOQO,5;h,5;hOB|QPO7+&lOOQO1G0{1G0{OOQO1G0z1G0zOOQO7+&e7+&eOCRQSO1G/QOOQO1G/Q1G/QOCZQQO1G/VOOQO1G/Y1G/YOCeQPO1G/YOOQO<<Iz<<IzOHOQPO<<IzOOQO<<JW<<JWOOQO1G/R1G/ROOQO7+$l7+$lOOQO7+$t7+$tOOQOAN?fAN?f\",\n  stateData: \"HZ~O#vOShOS~OVPOWPOXPOYPOZPO[PO]PO^PO_PO`POaPObPO!WXO#^]O#a]O#wUO#z^O#{_O#|`O#}aO$ObO$PcO$QdO$ReO$SfO$TgO$UhO$ViO$WjO$XkO$YlO$ZmO$[nO$]oO$^pO$_qO$`rO$asO$btO$cuO$dvO$ewO$fxO$gyO$hzO$i{O$j|O$k}O$l!OO$m!PO$n!QO$o!RO$p!SO$q!TO$r!UO$s!VO$t!WO$u!XO$v!YO$w!ZO$x![O$y!]O$z!^O${!_O$|!`O$}!aO%RVO%SVO%TYO~Oc!bOd!bO#w!cO~OU!lOe!iOf!jOg!iOu!fOx!fOy!fOz!fO{!gO|!gO}!hO!O!hO!P!hO!Q!hO!R!hO!S!hO#o!mO%O!kO~Oq!qO%U!tO~O%TYOU#eXe#eXf#eXg#eXu#eXx#eXy#eXz#eX{#eX|#eX}#eX!O#eX!P#eX!Q#eX!R#eX!S#eX#o#eX#t#eX%O#eX#y#eX#x#eX~O#w!vO~O#y!zO~PYOc!bOd!bOUkaekafkagkaukaxkaykazka{ka|ka}ka!Oka!Pka!Qka!Rka!Ska#oka#tka%Oka#yka#xka~OP#OOQ!|OR!|OVvPWvPXvPYvPZvP[vP]vP^vP_vP`vPavPbvP!WvP#^vP#avP#wvP#zvP#{vP#|vP#}vP$OvP$PvP$QvP$RvP$SvP$TvP$UvP$VvP$WvP$XvP$YvP$ZvP$[vP$]vP$^vP$_vP$`vP$avP$bvP$cvP$dvP$evP$fvP$gvP$hvP$ivP$jvP$kvP$lvP$mvP$nvP$ovP$pvP$qvP$rvP$svP$tvP$uvP$vvP$wvP$xvP$yvP$zvP${vP$|vP$}vP%RvP%SvP%TvP~O#]#UO~O|#WO#]#VO~O#^#ZO#r#YO#s#YO%R#XO%S#XO~O#y#]O~P&OOu!fOU#cae#caf#cag#cax#cay#caz#ca{#ca|#ca}#ca!O#ca!P#ca!Q#ca!R#ca!S#ca#o#ca#t#ca%O#ca#y#ca#x#ca~O!S#^O#k#^O#l#^O#m#^O~O#x#`O%U#aO~Oq#bO#y#eO~O#x#fO#y#gO~O#xsX#ysX~P&OOVvXWvXXvXYvXZvX[vX]vX^vX_vX`vXavXbvX!WvX#^vX#avX#wvX#zvX#{vX#|vX#}vX$OvX$PvX$QvX$RvX$SvX$TvX$UvX$VvX$WvX$XvX$YvX$ZvX$[vX$]vX$^vX$_vX$`vX$avX$bvX$cvX$dvX$evX$fvX$gvX$hvX$ivX$jvX$kvX$lvX$mvX$nvX$ovX$pvX$qvX$rvX$svX$tvX$uvX$vvX$wvX$xvX$yvX$zvX${vX$|vX$}vX%RvX%SvX%TvX~OS#iOT#iO~P2oOQ!|OR!|O~P2oO%P#pO%Q#qO~O#]#rO~O#^#sO~O#w#tO~O#a#uO~Oq!qO%U#wO~O#x#xO#y#yO~OVvaWvaXvaYvaZva[va]va^va_va`vaavabva!Wva#^va#ava#zva#{va#|va#}va$Ova$Pva$Qva$Rva$Sva$Tva$Uva$Vva$Wva$Xva$Yva$Zva$[va$]va$^va$_va$`va$ava$bva$cva$dva$eva$fva$gva$hva$iva$jva$kva$lva$mva$nva$ova$pva$qva$rva$sva$tva$uva$vva$wva$xva$yva$zva${va$|va$}va%Rva%Sva%Tva~O#w!vO~P8lOS#|OT#|O#wva~P8lOu!fOUtqetqftqgtq{tq|tq}tq!Otq!Ptq!Qtq!Rtq!Stq#otq#ttq%Otq#ytq#xtq~Oxtqytqztq~P=hOx!fOy!fOz!fO~P=hOu!fOx!fOy!fOz!fO{!gO|!gOUtqetqftqgtq#otq#ttq%Otq#ytq#xtq~O}tq!Otq!Ptq!Qtq!Rtq!Stq~P?^O}!hO!O!hO!P!hO!Q!hO!R!hO!S!hO~P?^Oe!iOg!iOu!fOx!fOy!fOz!fO{!gO|!gO}!hO!O!hO!P!hO!Q!hO!R!hO!S!hO~OUtqftq#otq#ttq%Otq#ytq#xtq~PA]O#]$OO%P#}O~O#y$PO~Oq#bO#y$RO~O#xsi#ysi~P&OO#w!vOVviWviXviYviZvi[vi]vi^vi_vi`viavibvi!Wvi#^vi#avi#zvi#{vi#|vi#}vi$Ovi$Pvi$Qvi$Rvi$Svi$Tvi$Uvi$Vvi$Wvi$Xvi$Yvi$Zvi$[vi$]vi$^vi$_vi$`vi$avi$bvi$cvi$dvi$evi$fvi$gvi$hvi$ivi$jvi$kvi$lvi$mvi$nvi$ovi$pvi$qvi$rvi$svi$tvi$uvi$vvi$wvi$xvi$yvi$zvi${vi$|vi$}vi%Rvi%Svi%Tvi~O%P$TO~O#^!W%S%R%S~\",\n  goto: \"(S#rPPPPPPPPPPPPPPPPPPPPPPPPPP#s$c$o${%R%_%bP%h%q$cP%t&TPPPPPPPPPPP$c&_&kP&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k$cPP$c$cP$c$c&w$c'T'a'p's'yPPP$cP'|(PQROQ!oUQ!pWQ!y!cQ#k#PQ#l#QQ#m#RQ#n#SQ#o#TR#z#fe]OUW!c#P#Q#R#S#T#feQOUW!c#P#Q#R#S#T#fQ!dQR!{!eQ!w!bQ#h!|Q#{#iR$S#|R#c!vQ#d!vR$Q#xQ!eQQ!nTR!{!dR!x!cQ#P!fQ#Q!gQ#R!hQ#S!iR#T!jY!}!f!g!h!i!jR#j#OeTOUW!c#P#Q#R#S#T#feSOUW!c#P#Q#R#S#T#feWOUW!c#P#Q#R#S#T#feZOUW!c#P#Q#R#S#T#fd[OUW!c#P#Q#R#S#T#fR!uZR!rYQ!sYR#v#`R#_!qR#Z!mR#[!m\",\n  nodeNames: \"âš  Bool Ignoring On GroupLeft GroupRight Offset Avg Bottomk Count CountValues Group Max Min Quantile Stddev Stdvar Sum Topk By Without And Or Unless LineComment PromQL Expr AggregateExpr AggregateOp AggregateModifier GroupingLabels GroupingLabelList GroupingLabel LabelName FunctionCallBody FunctionCallArgs BinaryExpr Pow BinModifiers OnOrIgnoring Mul Div Mod Add Sub Eql Gte Gtr Lte Lss Neq FunctionCall FunctionIdentifier AbsentOverTime Identifier Absent Abs AvgOverTime Ceil Changes Clamp ClampMax ClampMin CountOverTime DaysInMonth DayOfMonth DayOfWeek Delta Deriv Exp Floor HistogramQuantile HoltWinters Hour Idelta Increase Irate LabelReplace LabelJoin LastOverTime Ln Log10 Log2 MaxOverTime MinOverTime Minute Month PredictLinear QuantileOverTime Rate Resets Round Scalar Sgn Sort SortDesc Sqrt StddevOverTime StdvarOverTime SumOverTime Timestamp Time Vector Year MatrixSelector Duration NumberLiteral OffsetExpr ParenExpr StringLiteral SubqueryExpr UnaryExpr UnaryOp VectorSelector MetricIdentifier LabelMatchers LabelMatchList LabelMatcher MatchOp EqlSingle EqlRegex NeqRegex StepInvariantExpr At SignedNumber AtModifierPreprocessors Start End\",\n  maxTerm: 190,\n  skippedNodes: [0, 24],\n  repeatNodeCount: 0,\n  tokenData: \"!,{~R!TX^$bpq$bqr%Vrs%jst&^uv&iwx&nxy']yz'bz{'g{|'l|}+t}!O+y!O!P(Y!P!Q,g!Q!R,l!R![-d![!]! m!^!_!!i!_!`!!v!`!a!#]!b!c!#j!c!k!#o!k!l!$V!l!p!#o!p!q!&V!q!}!#o!}#O!'g#P#Q!'l#Q#R!'q#R#S!#o#S#T!'v#T#X!#o#X#Y!(S#Y#]!#o#]#^!$V#^#b!#o#b#c!&V#c#g!#o#g#h!)v#h#o!#o#o#p!,q#q#r!,v#y#z$b$f$g$b#BY#BZ$b$IS$I_$b$I|$JO$b$JT$JU$b$KV$KW$b&FU&FV$b~$gY#v~X^$bpq$b#y#z$b$f$g$b#BY#BZ$b$IS$I_$b$I|$JO$b$JT$JU$b$KV$KW$b&FU&FV$b~%YQ!_!`%`#r#s%e~%eO!S~~%jO#m~~%oU#a~OY%jZr%jrs&Rs#O%j#O#P&W#P~%j~&WO#a~~&ZPO~%j~&cQh~OY&^Z~&^~&nOz~~&sU#a~OY&nZw&nwx&Rx#O&n#O#P'V#P~&n~'YPO~&n~'bO#w~~'gO#y~~'lOx~Z'sV{Q%SX!O!P(Y!Q!R)Y!R![)|!k!l*y!p!q+b#]#^*y#b#c+bX(]P!Q![(`X(eR#^X!Q![(`!g!h(n#X#Y(nX(qR{|(z}!O(z!Q![)QX(}P!Q![)QX)VP#^X!Q![)QX)_T#^X!O!P)n!Q![)|!g!h(n#X#Y(n#l#m*_X)sR#^X!Q![)n!g!h(n#X#Y(nX*RS#^X!O!P)n!Q![)|!g!h(n#X#Y(nX*bR!Q![*k!c!i*k#T#Z*kX*pR#^X!Q![*k!c!i*k#T#Z*kX*|Q!p!q+S#b#c+SX+VQ!h!i+]#Y#Z+]X+bO#^XX+eQ!c!d+k#T#U+kX+nQ!p!q+]#b#c+]~+yO#x~Z,QV|Q%RX!O!P(Y!Q!R)Y!R![)|!k!l*y!p!q+b#]#^*y#b#c+b~,lOy~Z,qZ#^X!O!P)n!Q![-d!g!h(n#W#X.X#X#Y(n#[#]2g#a#b4j#g#h5p#k#l6X#l#m*_#m#n>nZ-iY#^X!O!P)n!Q![-d!g!h(n#W#X.X#X#Y(n#[#]2g#a#b4j#g#h5p#k#l6X#m#n>nQ.^P#]Q!Q![.aQ.dS!Q![.a#[#].p#a#b0x#g#h2OQ.uP#]Q!Q![.xQ.{R!Q![.x#a#b/U#g#h0aQ/ZQ#]Q!Q![/a#g#h/sQ/dR!Q![/a#a#b/m#g#h/xQ/pP#g#h/sQ/xO#]QQ/}P#]Q!Q![0QQ0TQ!Q![0Q#a#b0ZQ0^P#g#h/sQ0fP#]Q!Q![0iQ0lQ!Q![0i#a#b0rQ0uP#g#h/sQ0}Q#]Q!Q![1T#g#h/sQ1WR!Q![1T#a#b1a#g#h1gQ1dP#g#h/sQ1lP#]Q!Q![1oQ1rQ!Q![1o#a#b1xQ1{P#g#h/sQ2TP#]Q!Q![2WQ2ZQ!Q![2W#a#b2aQ2dP#g#h/sQ2lP#]Q!Q![2oQ2rR!Q![2o#a#b2{#g#h4RQ3QQ#]Q!Q![3W#g#h/sQ3ZR!Q![3W#a#b3d#g#h3jQ3gP#g#h/sQ3oP#]Q!Q![3rQ3uQ!Q![3r#a#b3{Q4OP#g#h/sQ4WP#]Q!Q![4ZQ4^Q!Q![4Z#a#b4dQ4gP#g#h/sQ4oQ#]Q!Q![4u#g#h/sQ4xR!Q![4u#a#b5R#g#h5XQ5UP#g#h/sQ5^P#]Q!Q![5aQ5dQ!Q![5a#a#b5jQ5mP#g#h/sQ5uP#]Q!Q![5xQ5{Q!Q![5x#a#b6RQ6UP#g#h/sQ6^P#]Q!Q![6aQ6dT!Q![6a#W#X6s#[#]:|#a#b=P#g#h>VQ6xP#]Q!Q![6{Q7OS!Q![6{#[#]7[#a#b9_#g#h:eQ7aP#]Q!Q![7dQ7gR!Q![7d#a#b7p#g#h8vQ7uQ#]Q!Q![7{#g#h/sQ8OR!Q![7{#a#b8X#g#h8_Q8[P#g#h/sQ8dP#]Q!Q![8gQ8jQ!Q![8g#a#b8pQ8sP#g#h/sQ8{P#]Q!Q![9OQ9RQ!Q![9O#a#b9XQ9[P#g#h/sQ9dQ#]Q!Q![9j#g#h/sQ9mR!Q![9j#a#b9v#g#h9|Q9yP#g#h/sQ:RP#]Q!Q![:UQ:XQ!Q![:U#a#b:_Q:bP#g#h/sQ:jP#]Q!Q![:mQ:pQ!Q![:m#a#b:vQ:yP#g#h/sQ;RP#]Q!Q![;UQ;XR!Q![;U#a#b;b#g#h<hQ;gQ#]Q!Q![;m#g#h/sQ;pR!Q![;m#a#b;y#g#h<PQ;|P#g#h/sQ<UP#]Q!Q![<XQ<[Q!Q![<X#a#b<bQ<eP#g#h/sQ<mP#]Q!Q![<pQ<sQ!Q![<p#a#b<yQ<|P#g#h/sQ=UQ#]Q!Q![=[#g#h/sQ=_R!Q![=[#a#b=h#g#h=nQ=kP#g#h/sQ=sP#]Q!Q![=vQ=yQ!Q![=v#a#b>PQ>SP#g#h/sQ>[P#]Q!Q![>_Q>bQ!Q![>_#a#b>hQ>kP#g#h/sQ>sP#]Q!Q![>vQ>yU!Q![>v#W#X?]#[#]Cf#a#bEi#g#hFo#k#lGWQ?bP#]Q!Q![?eQ?hS!Q![?e#[#]?t#a#bAw#g#hB}Q?yP#]Q!Q![?|Q@PR!Q![?|#a#b@Y#g#hA`Q@_Q#]Q!Q![@e#g#h/sQ@hR!Q![@e#a#b@q#g#h@wQ@tP#g#h/sQ@|P#]Q!Q![APQASQ!Q![AP#a#bAYQA]P#g#h/sQAeP#]Q!Q![AhQAkQ!Q![Ah#a#bAqQAtP#g#h/sQA|Q#]Q!Q![BS#g#h/sQBVR!Q![BS#a#bB`#g#hBfQBcP#g#h/sQBkP#]Q!Q![BnQBqQ!Q![Bn#a#bBwQBzP#g#h/sQCSP#]Q!Q![CVQCYQ!Q![CV#a#bC`QCcP#g#h/sQCkP#]Q!Q![CnQCqR!Q![Cn#a#bCz#g#hEQQDPQ#]Q!Q![DV#g#h/sQDYR!Q![DV#a#bDc#g#hDiQDfP#g#h/sQDnP#]Q!Q![DqQDtQ!Q![Dq#a#bDzQD}P#g#h/sQEVP#]Q!Q![EYQE]Q!Q![EY#a#bEcQEfP#g#h/sQEnQ#]Q!Q![Et#g#h/sQEwR!Q![Et#a#bFQ#g#hFWQFTP#g#h/sQF]P#]Q!Q![F`QFcQ!Q![F`#a#bFiQFlP#g#h/sQFtP#]Q!Q![FwQFzQ!Q![Fw#a#bGQQGTP#g#h/sQG]P#]Q!Q![G`QGcT!Q![G`#W#XGr#[#]K{#a#bNO#g#h! UQGwP#]Q!Q![GzQG}S!Q![Gz#[#]HZ#a#bJ^#g#hKdQH`P#]Q!Q![HcQHfR!Q![Hc#a#bHo#g#hIuQHtQ#]Q!Q![Hz#g#h/sQH}R!Q![Hz#a#bIW#g#hI^QIZP#g#h/sQIcP#]Q!Q![IfQIiQ!Q![If#a#bIoQIrP#g#h/sQIzP#]Q!Q![I}QJQQ!Q![I}#a#bJWQJZP#g#h/sQJcQ#]Q!Q![Ji#g#h/sQJlR!Q![Ji#a#bJu#g#hJ{QJxP#g#h/sQKQP#]Q!Q![KTQKWQ!Q![KT#a#bK^QKaP#g#h/sQKiP#]Q!Q![KlQKoQ!Q![Kl#a#bKuQKxP#g#h/sQLQP#]Q!Q![LTQLWR!Q![LT#a#bLa#g#hMgQLfQ#]Q!Q![Ll#g#h/sQLoR!Q![Ll#a#bLx#g#hMOQL{P#g#h/sQMTP#]Q!Q![MWQMZQ!Q![MW#a#bMaQMdP#g#h/sQMlP#]Q!Q![MoQMrQ!Q![Mo#a#bMxQM{P#g#h/sQNTQ#]Q!Q![NZ#g#h/sQN^R!Q![NZ#a#bNg#g#hNmQNjP#g#h/sQNrP#]Q!Q![NuQNxQ!Q![Nu#a#b! OQ! RP#g#h/sQ! ZP#]Q!Q![! ^Q! aQ!Q![! ^#a#b! gQ! jP#g#h/sV! tT%QS!WR!Q![!!T![!]!!T!c!}!!T#R#S!!T#T#o!!TR!!YT!WR!Q![!!T![!]!!T!c!}!!T#R#S!!T#T#o!!T~!!nP!R~!_!`!!q~!!vO!Q~~!!{Q#kP!_!`!#R#r#s!#WQ!#WO}Q~!#]O#l~~!#bP!P~!_!`!#e~!#jO!O~~!#oO#o~V!#vTqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#o!#o_!$^XqS!WR!Q![!#o![!]!!T!c!p!#o!p!q!$y!q!}!#o#R#S!#o#T#b!#o#b#c!$y#c#o!#o_!%QXqS!WR!Q![!#o![!]!!T!c!h!#o!h!i!%m!i!}!#o#R#S!#o#T#Y!#o#Y#Z!%m#Z#o!#o_!%vTqS#^X!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#o!#o_!&^VqS!WR!Q![!#o![!]!!T!c!d!&s!d!}!#o#R#S!#o#T#U!&s#U#o!#o_!&zXqS!WR!Q![!#o![!]!!T!c!p!#o!p!q!%m!q!}!#o#R#S!#o#T#b!#o#b#c!%m#c#o!#o~!'lO%O~~!'qO%P~~!'vOu~~!'yRO#S!'v#S#T&R#T~!'v_!(ZVqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#b!#o#b#c!(p#c#o!#o_!(wVqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#W!#o#W#X!)^#X#o!#o_!)gT#sWqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#o!#o_!)}VqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#h!#o#h#i!*d#i#o!#o_!*kUqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#U!*}#U#o!#o_!+UVqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#f!#o#f#g!+k#g#o!#o_!+rVqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#h!#o#h#i!,X#i#o!#o_!,bTqS#rW!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#o!#o~!,vO%T~~!,{O%U~\",\n  tokenizers: [0, 1, 2, 3],\n  topRules: {\n    \"PromQL\": [0, 25]\n  },\n  specialized: [{\n    term: 54,\n    get: function get(value, stack) {\n      return specializeIdentifier(value) << 1;\n    }\n  }, {\n    term: 54,\n    get: function get(value, stack) {\n      return extendIdentifier(value) << 1 | 1;\n    }\n  }, {\n    term: 54,\n    get: function get(value) {\n      return spec_Identifier[value] || -1;\n    }\n  }],\n  tokenPrec: 1799\n}); // This file was generated by lezer-generator. You probably shouldn't edit it.\n\nvar Bool$1 = 1,\n    Ignoring$1 = 2,\n    On$1 = 3,\n    GroupLeft$1 = 4,\n    GroupRight$1 = 5,\n    Offset$1 = 6,\n    Avg$1 = 7,\n    Bottomk$1 = 8,\n    Count$1 = 9,\n    CountValues$1 = 10,\n    Group$1 = 11,\n    Max$1 = 12,\n    Min$1 = 13,\n    Quantile$1 = 14,\n    Stddev$1 = 15,\n    Stdvar$1 = 16,\n    Sum$1 = 17,\n    Topk$1 = 18,\n    By$1 = 19,\n    Without$1 = 20,\n    And$1 = 21,\n    Or$1 = 22,\n    Unless$1 = 23,\n    LineComment = 24,\n    PromQL = 25,\n    Expr = 26,\n    AggregateExpr = 27,\n    AggregateOp = 28,\n    AggregateModifier = 29,\n    GroupingLabels = 30,\n    GroupingLabelList = 31,\n    GroupingLabel = 32,\n    LabelName = 33,\n    FunctionCallBody = 34,\n    FunctionCallArgs = 35,\n    BinaryExpr = 36,\n    Pow = 37,\n    BinModifiers = 38,\n    OnOrIgnoring = 39,\n    Mul = 40,\n    Div = 41,\n    Mod = 42,\n    Add = 43,\n    Sub = 44,\n    Eql = 45,\n    Gte = 46,\n    Gtr = 47,\n    Lte = 48,\n    Lss = 49,\n    Neq = 50,\n    FunctionCall = 51,\n    FunctionIdentifier = 52,\n    AbsentOverTime = 53,\n    Identifier = 54,\n    Absent = 55,\n    Abs = 56,\n    AvgOverTime = 57,\n    Ceil = 58,\n    Changes = 59,\n    Clamp = 60,\n    ClampMax = 61,\n    ClampMin = 62,\n    CountOverTime = 63,\n    DaysInMonth = 64,\n    DayOfMonth = 65,\n    DayOfWeek = 66,\n    Delta = 67,\n    Deriv = 68,\n    Exp = 69,\n    Floor = 70,\n    HistogramQuantile = 71,\n    HoltWinters = 72,\n    Hour = 73,\n    Idelta = 74,\n    Increase = 75,\n    Irate = 76,\n    LabelReplace = 77,\n    LabelJoin = 78,\n    LastOverTime = 79,\n    Ln = 80,\n    Log10 = 81,\n    Log2 = 82,\n    MaxOverTime = 83,\n    MinOverTime = 84,\n    Minute = 85,\n    Month = 86,\n    PredictLinear = 87,\n    QuantileOverTime = 88,\n    Rate = 89,\n    Resets = 90,\n    Round = 91,\n    Scalar = 92,\n    Sgn = 93,\n    Sort = 94,\n    SortDesc = 95,\n    Sqrt = 96,\n    StddevOverTime = 97,\n    StdvarOverTime = 98,\n    SumOverTime = 99,\n    Timestamp = 100,\n    Time = 101,\n    Vector = 102,\n    Year = 103,\n    MatrixSelector = 104,\n    Duration = 105,\n    NumberLiteral = 106,\n    OffsetExpr = 107,\n    ParenExpr = 108,\n    StringLiteral = 109,\n    SubqueryExpr = 110,\n    UnaryExpr = 111,\n    UnaryOp = 112,\n    VectorSelector = 113,\n    MetricIdentifier = 114,\n    LabelMatchers = 115,\n    LabelMatchList = 116,\n    LabelMatcher = 117,\n    MatchOp = 118,\n    EqlSingle = 119,\n    EqlRegex = 120,\n    NeqRegex = 121,\n    StepInvariantExpr = 122,\n    At = 123,\n    SignedNumber = 124,\n    AtModifierPreprocessors = 125,\n    Start = 126,\n    End = 127;\nexport { Abs, Absent, AbsentOverTime, Add, AggregateExpr, AggregateModifier, AggregateOp, And$1 as And, At, AtModifierPreprocessors, Avg$1 as Avg, AvgOverTime, BinModifiers, BinaryExpr, Bool$1 as Bool, Bottomk$1 as Bottomk, By$1 as By, Ceil, Changes, Clamp, ClampMax, ClampMin, Count$1 as Count, CountOverTime, CountValues$1 as CountValues, DayOfMonth, DayOfWeek, DaysInMonth, Delta, Deriv, Div, Duration, End, Eql, EqlRegex, EqlSingle, Exp, Expr, Floor, FunctionCall, FunctionCallArgs, FunctionCallBody, FunctionIdentifier, Group$1 as Group, GroupLeft$1 as GroupLeft, GroupRight$1 as GroupRight, GroupingLabel, GroupingLabelList, GroupingLabels, Gte, Gtr, HistogramQuantile, HoltWinters, Hour, Idelta, Identifier, Ignoring$1 as Ignoring, Increase, Irate, LabelJoin, LabelMatchList, LabelMatcher, LabelMatchers, LabelName, LabelReplace, LastOverTime, LineComment, Ln, Log10, Log2, Lss, Lte, MatchOp, MatrixSelector, Max$1 as Max, MaxOverTime, MetricIdentifier, Min$1 as Min, MinOverTime, Minute, Mod, Month, Mul, Neq, NeqRegex, NumberLiteral, Offset$1 as Offset, OffsetExpr, On$1 as On, OnOrIgnoring, Or$1 as Or, ParenExpr, Pow, PredictLinear, PromQL, Quantile$1 as Quantile, QuantileOverTime, Rate, Resets, Round, Scalar, Sgn, SignedNumber, Sort, SortDesc, Sqrt, Start, Stddev$1 as Stddev, StddevOverTime, Stdvar$1 as Stdvar, StdvarOverTime, StepInvariantExpr, StringLiteral, Sub, SubqueryExpr, Sum$1 as Sum, SumOverTime, Time, Timestamp, Topk$1 as Topk, UnaryExpr, UnaryOp, Unless$1 as Unless, Vector, VectorSelector, Without$1 as Without, Year, parser };","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/lezer-promql/index.es.js"],"names":["Parser","Bool","Ignoring","On","GroupLeft","GroupRight","Offset","Avg","Bottomk","Count","CountValues","Group","Max","Min","Quantile","Stddev","Stdvar","Sum","Topk","By","Without","And","Or","Unless","keywordTokens","bool","ignoring","on","group_left","group_right","offset","specializeIdentifier","value","stack","toLowerCase","contextualKeywordTokens","avg","bottomk","count","count_values","group","max","min","quantile","stddev","stdvar","sum","topk","by","without","and","or","unless","extendIdentifier","spec_Identifier","__proto__","absent_over_time","absent","abs","avg_over_time","ceil","changes","clamp","clamp_max","clamp_min","count_over_time","days_in_month","day_of_month","day_of_week","delta","deriv","exp","floor","histogram_quantile","holt_winters","hour","idelta","increase","irate","label_replace","label_join","last_over_time","ln","log10","log2","max_over_time","min_over_time","minute","month","predict_linear","quantile_over_time","rate","resets","round","scalar","sgn","sort","sort_desc","sqrt","stddev_over_time","stdvar_over_time","sum_over_time","timestamp","time","vector","year","parser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","specialized","term","get","tokenPrec","Bool$1","Ignoring$1","On$1","GroupLeft$1","GroupRight$1","Offset$1","Avg$1","Bottomk$1","Count$1","CountValues$1","Group$1","Max$1","Min$1","Quantile$1","Stddev$1","Stdvar$1","Sum$1","Topk$1","By$1","Without$1","And$1","Or$1","Unless$1","LineComment","PromQL","Expr","AggregateExpr","AggregateOp","AggregateModifier","GroupingLabels","GroupingLabelList","GroupingLabel","LabelName","FunctionCallBody","FunctionCallArgs","BinaryExpr","Pow","BinModifiers","OnOrIgnoring","Mul","Div","Mod","Add","Sub","Eql","Gte","Gtr","Lte","Lss","Neq","FunctionCall","FunctionIdentifier","AbsentOverTime","Identifier","Absent","Abs","AvgOverTime","Ceil","Changes","Clamp","ClampMax","ClampMin","CountOverTime","DaysInMonth","DayOfMonth","DayOfWeek","Delta","Deriv","Exp","Floor","HistogramQuantile","HoltWinters","Hour","Idelta","Increase","Irate","LabelReplace","LabelJoin","LastOverTime","Ln","Log10","Log2","MaxOverTime","MinOverTime","Minute","Month","PredictLinear","QuantileOverTime","Rate","Resets","Round","Scalar","Sgn","Sort","SortDesc","Sqrt","StddevOverTime","StdvarOverTime","SumOverTime","Timestamp","Time","Vector","Year","MatrixSelector","Duration","NumberLiteral","OffsetExpr","ParenExpr","StringLiteral","SubqueryExpr","UnaryExpr","UnaryOp","VectorSelector","MetricIdentifier","LabelMatchers","LabelMatchList","LabelMatcher","MatchOp","EqlSingle","EqlRegex","NeqRegex","StepInvariantExpr","At","SignedNumber","AtModifierPreprocessors","Start","End"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB,C,CAEA;;AACA,IACEC,IAAI,GAAG,CADT;AAAA,IAEEC,QAAQ,GAAG,CAFb;AAAA,IAGEC,EAAE,GAAG,CAHP;AAAA,IAIEC,SAAS,GAAG,CAJd;AAAA,IAKEC,UAAU,GAAG,CALf;AAAA,IAMEC,MAAM,GAAG,CANX;AAAA,IAOEC,GAAG,GAAG,CAPR;AAAA,IAQEC,OAAO,GAAG,CARZ;AAAA,IASEC,KAAK,GAAG,CATV;AAAA,IAUEC,WAAW,GAAG,EAVhB;AAAA,IAWEC,KAAK,GAAG,EAXV;AAAA,IAYEC,GAAG,GAAG,EAZR;AAAA,IAaEC,GAAG,GAAG,EAbR;AAAA,IAcEC,QAAQ,GAAG,EAdb;AAAA,IAeEC,MAAM,GAAG,EAfX;AAAA,IAgBEC,MAAM,GAAG,EAhBX;AAAA,IAiBEC,GAAG,GAAG,EAjBR;AAAA,IAkBEC,IAAI,GAAG,EAlBT;AAAA,IAmBEC,EAAE,GAAG,EAnBP;AAAA,IAoBEC,OAAO,GAAG,EApBZ;AAAA,IAqBEC,GAAG,GAAG,EArBR;AAAA,IAsBEC,EAAE,GAAG,EAtBP;AAAA,IAuBEC,MAAM,GAAG,EAvBX,C,CAyBA;;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAExB,IADc;AAEpByB,EAAAA,QAAQ,EAAExB,QAFU;AAGpByB,EAAAA,EAAE,EAAExB,EAHgB;AAIpByB,EAAAA,UAAU,EAAExB,SAJQ;AAKpByB,EAAAA,WAAW,EAAExB,UALO;AAMpByB,EAAAA,MAAM,EAAExB;AANY,CAAtB;;AASA,IAAMyB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAQC,KAAR,EAAkB;AAC7C,SAAOT,aAAa,CAACQ,KAAK,CAACE,WAAN,EAAD,CAAb,IAAsC,CAAC,CAA9C;AACD,CAFD;;AAIA,IAAMC,uBAAuB,GAAG;AAC9BC,EAAAA,GAAG,EAAE7B,GADyB;AAE9B8B,EAAAA,OAAO,EAAE7B,OAFqB;AAG9B8B,EAAAA,KAAK,EAAE7B,KAHuB;AAI9B8B,EAAAA,YAAY,EAAE7B,WAJgB;AAK9B8B,EAAAA,KAAK,EAAE7B,KALuB;AAM9B8B,EAAAA,GAAG,EAAE7B,GANyB;AAO9B8B,EAAAA,GAAG,EAAE7B,GAPyB;AAQ9B8B,EAAAA,QAAQ,EAAE7B,QARoB;AAS9B8B,EAAAA,MAAM,EAAE7B,MATsB;AAU9B8B,EAAAA,MAAM,EAAE7B,MAVsB;AAW9B8B,EAAAA,GAAG,EAAE7B,GAXyB;AAY9B8B,EAAAA,IAAI,EAAE7B,IAZwB;AAa9B8B,EAAAA,EAAE,EAAE7B,EAb0B;AAc9B8B,EAAAA,OAAO,EAAE7B,OAdqB;AAe9B8B,EAAAA,GAAG,EAAE7B,GAfyB;AAgB9B8B,EAAAA,EAAE,EAAE7B,EAhB0B;AAiB9B8B,EAAAA,MAAM,EAAE7B;AAjBsB,CAAhC;;AAoBA,IAAM8B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACrB,KAAD,EAAQC,KAAR,EAAkB;AACzC,SAAOE,uBAAuB,CAACH,KAAK,CAACE,WAAN,EAAD,CAAvB,IAAgD,CAAC,CAAxD;AACD,CAFD,C,CAIA;;;AACA,IAAMoB,eAAe,GAAG;AAACC,EAAAA,SAAS,EAAC,IAAX;AAAgBC,EAAAA,gBAAgB,EAAC,GAAjC;AAAsCC,EAAAA,MAAM,EAAC,GAA7C;AAAkDC,EAAAA,GAAG,EAAC,GAAtD;AAA2DC,EAAAA,aAAa,EAAC,GAAzE;AAA8EC,EAAAA,IAAI,EAAC,GAAnF;AAAwFC,EAAAA,OAAO,EAAC,GAAhG;AAAqGC,EAAAA,KAAK,EAAC,GAA3G;AAAgHC,EAAAA,SAAS,EAAC,GAA1H;AAA+HC,EAAAA,SAAS,EAAC,GAAzI;AAA8IC,EAAAA,eAAe,EAAC,GAA9J;AAAmKC,EAAAA,aAAa,EAAC,GAAjL;AAAsLC,EAAAA,YAAY,EAAC,GAAnM;AAAwMC,EAAAA,WAAW,EAAC,GAApN;AAAyNC,EAAAA,KAAK,EAAC,GAA/N;AAAoOC,EAAAA,KAAK,EAAC,GAA1O;AAA+OC,EAAAA,GAAG,EAAC,GAAnP;AAAwPC,EAAAA,KAAK,EAAC,GAA9P;AAAmQC,EAAAA,kBAAkB,EAAC,GAAtR;AAA2RC,EAAAA,YAAY,EAAC,GAAxS;AAA6SC,EAAAA,IAAI,EAAC,GAAlT;AAAuTC,EAAAA,MAAM,EAAC,GAA9T;AAAmUC,EAAAA,QAAQ,EAAC,GAA5U;AAAiVC,EAAAA,KAAK,EAAC,GAAvV;AAA4VC,EAAAA,aAAa,EAAC,GAA1W;AAA+WC,EAAAA,UAAU,EAAC,GAA1X;AAA+XC,EAAAA,cAAc,EAAC,GAA9Y;AAAmZC,EAAAA,EAAE,EAAC,GAAtZ;AAA2ZC,EAAAA,KAAK,EAAC,GAAja;AAAsaC,EAAAA,IAAI,EAAC,GAA3a;AAAgbC,EAAAA,aAAa,EAAC,GAA9b;AAAmcC,EAAAA,aAAa,EAAC,GAAjd;AAAsdC,EAAAA,MAAM,EAAC,GAA7d;AAAkeC,EAAAA,KAAK,EAAC,GAAxe;AAA6eC,EAAAA,cAAc,EAAC,GAA5f;AAAigBC,EAAAA,kBAAkB,EAAC,GAAphB;AAAyhBC,EAAAA,IAAI,EAAC,GAA9hB;AAAmiBC,EAAAA,MAAM,EAAC,GAA1iB;AAA+iBC,EAAAA,KAAK,EAAC,GAArjB;AAA0jBC,EAAAA,MAAM,EAAC,GAAjkB;AAAskBC,EAAAA,GAAG,EAAC,GAA1kB;AAA+kBC,EAAAA,IAAI,EAAC,GAAplB;AAAylBC,EAAAA,SAAS,EAAC,GAAnmB;AAAwmBC,EAAAA,IAAI,EAAC,GAA7mB;AAAknBC,EAAAA,gBAAgB,EAAC,GAAnoB;AAAwoBC,EAAAA,gBAAgB,EAAC,GAAzpB;AAA8pBC,EAAAA,aAAa,EAAC,GAA5qB;AAAirBC,EAAAA,SAAS,EAAC,GAA3rB;AAAgsBC,EAAAA,IAAI,EAAC,GAArsB;AAA0sBC,EAAAA,MAAM,EAAC,GAAjtB;AAAstBC,EAAAA,IAAI,EAAC;AAA3tB,CAAxB;AACA,IAAMC,MAAM,GAAG1G,MAAM,CAAC2G,WAAP,CAAmB;AAChCC,EAAAA,OAAO,EAAE,EADuB;AAEhCC,EAAAA,MAAM,EAAE,qkDAFwB;AAGhCC,EAAAA,SAAS,EAAE,o1EAHqB;AAIhCC,EAAAA,IAAI,EAAE,+gBAJ0B;AAKhCC,EAAAA,SAAS,EAAE,koCALqB;AAMhCC,EAAAA,OAAO,EAAE,GANuB;AAOhCC,EAAAA,YAAY,EAAE,CAAC,CAAD,EAAG,EAAH,CAPkB;AAQhCC,EAAAA,eAAe,EAAE,CARe;AAShCC,EAAAA,SAAS,EAAE,ouJATqB;AAUhCC,EAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAVoB;AAWhCC,EAAAA,QAAQ,EAAE;AAAC,cAAS,CAAC,CAAD,EAAG,EAAH;AAAV,GAXsB;AAYhCC,EAAAA,WAAW,EAAE,CAAC;AAACC,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,GAAG,EAAE,aAACzF,KAAD,EAAQC,KAAR;AAAA,aAAmBF,oBAAoB,CAACC,KAAD,CAApB,IAA+B,CAAlD;AAAA;AAAhB,GAAD,EAAuE;AAACwF,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,GAAG,EAAE,aAACzF,KAAD,EAAQC,KAAR;AAAA,aAAmBoB,gBAAgB,CAACrB,KAAD,CAAhB,IAA2B,CAA5B,GAAiC,CAAnD;AAAA;AAAhB,GAAvE,EAA6I;AAACwF,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,GAAG,EAAE,aAAAzF,KAAK;AAAA,aAAIsB,eAAe,CAACtB,KAAD,CAAf,IAA0B,CAAC,CAA/B;AAAA;AAArB,GAA7I,CAZmB;AAahC0F,EAAAA,SAAS,EAAE;AAbqB,CAAnB,CAAf,C,CAeA;;AACA,IACEC,MAAM,GAAG,CADX;AAAA,IAEEC,UAAU,GAAG,CAFf;AAAA,IAGEC,IAAI,GAAG,CAHT;AAAA,IAIEC,WAAW,GAAG,CAJhB;AAAA,IAKEC,YAAY,GAAG,CALjB;AAAA,IAMEC,QAAQ,GAAG,CANb;AAAA,IAOEC,KAAK,GAAG,CAPV;AAAA,IAQEC,SAAS,GAAG,CARd;AAAA,IASEC,OAAO,GAAG,CATZ;AAAA,IAUEC,aAAa,GAAG,EAVlB;AAAA,IAWEC,OAAO,GAAG,EAXZ;AAAA,IAYEC,KAAK,GAAG,EAZV;AAAA,IAaEC,KAAK,GAAG,EAbV;AAAA,IAcEC,UAAU,GAAG,EAdf;AAAA,IAeEC,QAAQ,GAAG,EAfb;AAAA,IAgBEC,QAAQ,GAAG,EAhBb;AAAA,IAiBEC,KAAK,GAAG,EAjBV;AAAA,IAkBEC,MAAM,GAAG,EAlBX;AAAA,IAmBEC,IAAI,GAAG,EAnBT;AAAA,IAoBEC,SAAS,GAAG,EApBd;AAAA,IAqBEC,KAAK,GAAG,EArBV;AAAA,IAsBEC,IAAI,GAAG,EAtBT;AAAA,IAuBEC,QAAQ,GAAG,EAvBb;AAAA,IAwBEC,WAAW,GAAG,EAxBhB;AAAA,IAyBEC,MAAM,GAAG,EAzBX;AAAA,IA0BEC,IAAI,GAAG,EA1BT;AAAA,IA2BEC,aAAa,GAAG,EA3BlB;AAAA,IA4BEC,WAAW,GAAG,EA5BhB;AAAA,IA6BEC,iBAAiB,GAAG,EA7BtB;AAAA,IA8BEC,cAAc,GAAG,EA9BnB;AAAA,IA+BEC,iBAAiB,GAAG,EA/BtB;AAAA,IAgCEC,aAAa,GAAG,EAhClB;AAAA,IAiCEC,SAAS,GAAG,EAjCd;AAAA,IAkCEC,gBAAgB,GAAG,EAlCrB;AAAA,IAmCEC,gBAAgB,GAAG,EAnCrB;AAAA,IAoCEC,UAAU,GAAG,EApCf;AAAA,IAqCEC,GAAG,GAAG,EArCR;AAAA,IAsCEC,YAAY,GAAG,EAtCjB;AAAA,IAuCEC,YAAY,GAAG,EAvCjB;AAAA,IAwCEC,GAAG,GAAG,EAxCR;AAAA,IAyCEC,GAAG,GAAG,EAzCR;AAAA,IA0CEC,GAAG,GAAG,EA1CR;AAAA,IA2CEC,GAAG,GAAG,EA3CR;AAAA,IA4CEC,GAAG,GAAG,EA5CR;AAAA,IA6CEC,GAAG,GAAG,EA7CR;AAAA,IA8CEC,GAAG,GAAG,EA9CR;AAAA,IA+CEC,GAAG,GAAG,EA/CR;AAAA,IAgDEC,GAAG,GAAG,EAhDR;AAAA,IAiDEC,GAAG,GAAG,EAjDR;AAAA,IAkDEC,GAAG,GAAG,EAlDR;AAAA,IAmDEC,YAAY,GAAG,EAnDjB;AAAA,IAoDEC,kBAAkB,GAAG,EApDvB;AAAA,IAqDEC,cAAc,GAAG,EArDnB;AAAA,IAsDEC,UAAU,GAAG,EAtDf;AAAA,IAuDEC,MAAM,GAAG,EAvDX;AAAA,IAwDEC,GAAG,GAAG,EAxDR;AAAA,IAyDEC,WAAW,GAAG,EAzDhB;AAAA,IA0DEC,IAAI,GAAG,EA1DT;AAAA,IA2DEC,OAAO,GAAG,EA3DZ;AAAA,IA4DEC,KAAK,GAAG,EA5DV;AAAA,IA6DEC,QAAQ,GAAG,EA7Db;AAAA,IA8DEC,QAAQ,GAAG,EA9Db;AAAA,IA+DEC,aAAa,GAAG,EA/DlB;AAAA,IAgEEC,WAAW,GAAG,EAhEhB;AAAA,IAiEEC,UAAU,GAAG,EAjEf;AAAA,IAkEEC,SAAS,GAAG,EAlEd;AAAA,IAmEEC,KAAK,GAAG,EAnEV;AAAA,IAoEEC,KAAK,GAAG,EApEV;AAAA,IAqEEC,GAAG,GAAG,EArER;AAAA,IAsEEC,KAAK,GAAG,EAtEV;AAAA,IAuEEC,iBAAiB,GAAG,EAvEtB;AAAA,IAwEEC,WAAW,GAAG,EAxEhB;AAAA,IAyEEC,IAAI,GAAG,EAzET;AAAA,IA0EEC,MAAM,GAAG,EA1EX;AAAA,IA2EEC,QAAQ,GAAG,EA3Eb;AAAA,IA4EEC,KAAK,GAAG,EA5EV;AAAA,IA6EEC,YAAY,GAAG,EA7EjB;AAAA,IA8EEC,SAAS,GAAG,EA9Ed;AAAA,IA+EEC,YAAY,GAAG,EA/EjB;AAAA,IAgFEC,EAAE,GAAG,EAhFP;AAAA,IAiFEC,KAAK,GAAG,EAjFV;AAAA,IAkFEC,IAAI,GAAG,EAlFT;AAAA,IAmFEC,WAAW,GAAG,EAnFhB;AAAA,IAoFEC,WAAW,GAAG,EApFhB;AAAA,IAqFEC,MAAM,GAAG,EArFX;AAAA,IAsFEC,KAAK,GAAG,EAtFV;AAAA,IAuFEC,aAAa,GAAG,EAvFlB;AAAA,IAwFEC,gBAAgB,GAAG,EAxFrB;AAAA,IAyFEC,IAAI,GAAG,EAzFT;AAAA,IA0FEC,MAAM,GAAG,EA1FX;AAAA,IA2FEC,KAAK,GAAG,EA3FV;AAAA,IA4FEC,MAAM,GAAG,EA5FX;AAAA,IA6FEC,GAAG,GAAG,EA7FR;AAAA,IA8FEC,IAAI,GAAG,EA9FT;AAAA,IA+FEC,QAAQ,GAAG,EA/Fb;AAAA,IAgGEC,IAAI,GAAG,EAhGT;AAAA,IAiGEC,cAAc,GAAG,EAjGnB;AAAA,IAkGEC,cAAc,GAAG,EAlGnB;AAAA,IAmGEC,WAAW,GAAG,EAnGhB;AAAA,IAoGEC,SAAS,GAAG,GApGd;AAAA,IAqGEC,IAAI,GAAG,GArGT;AAAA,IAsGEC,MAAM,GAAG,GAtGX;AAAA,IAuGEC,IAAI,GAAG,GAvGT;AAAA,IAwGEC,cAAc,GAAG,GAxGnB;AAAA,IAyGEC,QAAQ,GAAG,GAzGb;AAAA,IA0GEC,aAAa,GAAG,GA1GlB;AAAA,IA2GEC,UAAU,GAAG,GA3Gf;AAAA,IA4GEC,SAAS,GAAG,GA5Gd;AAAA,IA6GEC,aAAa,GAAG,GA7GlB;AAAA,IA8GEC,YAAY,GAAG,GA9GjB;AAAA,IA+GEC,SAAS,GAAG,GA/Gd;AAAA,IAgHEC,OAAO,GAAG,GAhHZ;AAAA,IAiHEC,cAAc,GAAG,GAjHnB;AAAA,IAkHEC,gBAAgB,GAAG,GAlHrB;AAAA,IAmHEC,aAAa,GAAG,GAnHlB;AAAA,IAoHEC,cAAc,GAAG,GApHnB;AAAA,IAqHEC,YAAY,GAAG,GArHjB;AAAA,IAsHEC,OAAO,GAAG,GAtHZ;AAAA,IAuHEC,SAAS,GAAG,GAvHd;AAAA,IAwHEC,QAAQ,GAAG,GAxHb;AAAA,IAyHEC,QAAQ,GAAG,GAzHb;AAAA,IA0HEC,iBAAiB,GAAG,GA1HtB;AAAA,IA2HEC,EAAE,GAAG,GA3HP;AAAA,IA4HEC,YAAY,GAAG,GA5HjB;AAAA,IA6HEC,uBAAuB,GAAG,GA7H5B;AAAA,IA8HEC,KAAK,GAAG,GA9HV;AAAA,IA+HEC,GAAG,GAAG,GA/HR;AAiIA,SAASvE,GAAT,EAAcD,MAAd,EAAsBF,cAAtB,EAAsCV,GAAtC,EAA2ChB,aAA3C,EAA0DE,iBAA1D,EAA6ED,WAA7E,EAA0FP,KAAK,IAAI1H,GAAnG,EAAwGgO,EAAxG,EAA4GE,uBAA5G,EAAqItH,KAAK,IAAI1H,GAA9I,EAAmJ4K,WAAnJ,EAAgKnB,YAAhK,EAA8KF,UAA9K,EAA0LnC,MAAM,IAAI1H,IAApM,EAA0MiI,SAAS,IAAI1H,OAAvN,EAAgOqI,IAAI,IAAI1H,EAAxO,EAA4OiK,IAA5O,EAAkPC,OAAlP,EAA2PC,KAA3P,EAAkQC,QAAlQ,EAA4QC,QAA5Q,EAAsRrD,OAAO,IAAI1H,KAAjS,EAAwSgL,aAAxS,EAAuTrD,aAAa,IAAI1H,WAAxU,EAAqViL,UAArV,EAAiWC,SAAjW,EAA4WF,WAA5W,EAAyXG,KAAzX,EAAgYC,KAAhY,EAAuY3B,GAAvY,EAA4YgE,QAA5Y,EAAsZsB,GAAtZ,EAA2ZlF,GAA3Z,EAAga2E,QAAha,EAA0aD,SAA1a,EAAqblD,GAArb,EAA0b3C,IAA1b,EAAgc4C,KAAhc,EAAucnB,YAAvc,EAAqdhB,gBAArd,EAAueD,gBAAve,EAAyfkB,kBAAzf,EAA6gBzC,OAAO,IAAI1H,KAAxhB,EAA+hBmH,WAAW,IAAI1H,SAA9iB,EAAyjB2H,YAAY,IAAI1H,UAAzkB,EAAqlBqJ,aAArlB,EAAomBD,iBAApmB,EAAunBD,cAAvnB,EAAuoBgB,GAAvoB,EAA4oBC,GAA5oB,EAAipBwB,iBAAjpB,EAAoqBC,WAApqB,EAAirBC,IAAjrB,EAAurBC,MAAvrB,EAA+rBpB,UAA/rB,EAA2sBpD,UAAU,IAAI1H,QAAztB,EAAmuBmM,QAAnuB,EAA6uBC,KAA7uB,EAAovBE,SAApvB,EAA+vBsC,cAA/vB,EAA+wBC,YAA/wB,EAA6xBF,aAA7xB,EAA4yBlF,SAA5yB,EAAuzB4C,YAAvzB,EAAq0BE,YAAr0B,EAAm1BvD,WAAn1B,EAAg2BwD,EAAh2B,EAAo2BC,KAAp2B,EAA22BC,IAA32B,EAAi3BjC,GAAj3B,EAAs3BD,GAAt3B,EAA23BsE,OAA33B,EAAo4Bd,cAAp4B,EAAo5B5F,KAAK,IAAI1H,GAA75B,EAAk6BiM,WAAl6B,EAA+6B+B,gBAA/6B,EAAi8BrG,KAAK,IAAI1H,GAA18B,EAA+8BiM,WAA/8B,EAA49BC,MAA59B,EAAo+B3C,GAAp+B,EAAy+B4C,KAAz+B,EAAg/B9C,GAAh/B,EAAq/BU,GAAr/B,EAA0/BuE,QAA1/B,EAAogCf,aAApgC,EAAmhCpG,QAAQ,IAAI1H,MAA/hC,EAAuiC+N,UAAviC,EAAmjCxG,IAAI,IAAI1H,EAA3jC,EAA+jC8J,YAA/jC,EAA6kCjB,IAAI,IAAI1H,EAArlC,EAAylCgN,SAAzlC,EAAomCvE,GAApmC,EAAymCkD,aAAzmC,EAAwnC9D,MAAxnC,EAAgoCX,UAAU,IAAI1H,QAA9oC,EAAwpCoM,gBAAxpC,EAA0qCC,IAA1qC,EAAgrCC,MAAhrC,EAAwrCC,KAAxrC,EAA+rCC,MAA/rC,EAAusCC,GAAvsC,EAA4sC+B,YAA5sC,EAA0tC9B,IAA1tC,EAAguCC,QAAhuC,EAA0uCC,IAA1uC,EAAgvC8B,KAAhvC,EAAuvC/G,QAAQ,IAAI1H,MAAnwC,EAA2wC4M,cAA3wC,EAA2xCjF,QAAQ,IAAI1H,MAAvyC,EAA+yC4M,cAA/yC,EAA+zCwB,iBAA/zC,EAAk1Cb,aAAl1C,EAAi2CjE,GAAj2C,EAAs2CkE,YAAt2C,EAAo3C7F,KAAK,IAAI1H,GAA73C,EAAk4C4M,WAAl4C,EAA+4CE,IAA/4C,EAAq5CD,SAAr5C,EAAg6ClF,MAAM,IAAI1H,IAA16C,EAAg7CuN,SAAh7C,EAA27CC,OAA37C,EAAo8CzF,QAAQ,IAAI1H,MAAh9C,EAAw9CyM,MAAx9C,EAAg+CW,cAAh+C,EAAg/C7F,SAAS,IAAI1H,OAA7/C,EAAsgD6M,IAAtgD,EAA4gDvH,MAA5gD","sourcesContent":["import { Parser } from 'lezer';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst \n  Bool = 1,\n  Ignoring = 2,\n  On = 3,\n  GroupLeft = 4,\n  GroupRight = 5,\n  Offset = 6,\n  Avg = 7,\n  Bottomk = 8,\n  Count = 9,\n  CountValues = 10,\n  Group = 11,\n  Max = 12,\n  Min = 13,\n  Quantile = 14,\n  Stddev = 15,\n  Stdvar = 16,\n  Sum = 17,\n  Topk = 18,\n  By = 19,\n  Without = 20,\n  And = 21,\n  Or = 22,\n  Unless = 23;\n\n// Copyright 2021 PromLabs GmbH\n\nconst keywordTokens = {\n  bool: Bool,\n  ignoring: Ignoring,\n  on: On,\n  group_left: GroupLeft,\n  group_right: GroupRight,\n  offset: Offset,\n};\n\nconst specializeIdentifier = (value, stack) => {\n  return keywordTokens[value.toLowerCase()] || -1;\n};\n\nconst contextualKeywordTokens = {\n  avg: Avg,\n  bottomk: Bottomk,\n  count: Count,\n  count_values: CountValues,\n  group: Group,\n  max: Max,\n  min: Min,\n  quantile: Quantile,\n  stddev: Stddev,\n  stdvar: Stdvar,\n  sum: Sum,\n  topk: Topk,\n  by: By,\n  without: Without,\n  and: And,\n  or: Or,\n  unless: Unless,\n};\n\nconst extendIdentifier = (value, stack) => {\n  return contextualKeywordTokens[value.toLowerCase()] || -1;\n};\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_Identifier = {__proto__:null,absent_over_time:269, absent:271, abs:273, avg_over_time:275, ceil:277, changes:279, clamp:281, clamp_max:283, clamp_min:285, count_over_time:287, days_in_month:289, day_of_month:291, day_of_week:293, delta:295, deriv:297, exp:299, floor:301, histogram_quantile:303, holt_winters:305, hour:307, idelta:309, increase:311, irate:313, label_replace:315, label_join:317, last_over_time:319, ln:321, log10:323, log2:325, max_over_time:327, min_over_time:329, minute:331, month:333, predict_linear:335, quantile_over_time:337, rate:339, resets:341, round:343, scalar:345, sgn:347, sort:349, sort_desc:351, sqrt:353, stddev_over_time:355, stdvar_over_time:357, sum_over_time:359, timestamp:361, time:363, vector:365, year:367};\nconst parser = Parser.deserialize({\n  version: 13,\n  states: \"3tOYQPOOOOQO'#Cx'#CxO%sQPO'#CwQ&OQQOOOOQO'#Db'#DbO%yQPO'#DaOYQPO'#ElOOQO'#Ep'#EpOYQPO'#EoOOQO'#Er'#ErO'YQSO'#EsO'bQQO'#EqOOQO'#Eq'#EqOOQO'#Cv'#CvOOQO'#Dc'#DcOOQO'#De'#DeOOQO'#Df'#DfOOQO'#Dg'#DgOOQO'#Dh'#DhOOQO'#Di'#DiOOQO'#Dj'#DjOOQO'#Dk'#DkOOQO'#Dl'#DlOOQO'#Dm'#DmOOQO'#Dn'#DnOOQO'#Do'#DoOOQO'#Dp'#DpOOQO'#Dq'#DqOOQO'#Dr'#DrOOQO'#Ds'#DsOOQO'#Dt'#DtOOQO'#Du'#DuOOQO'#Dv'#DvOOQO'#Dw'#DwOOQO'#Dx'#DxOOQO'#Dy'#DyOOQO'#Dz'#DzOOQO'#D{'#D{OOQO'#D|'#D|OOQO'#D}'#D}OOQO'#EO'#EOOOQO'#EP'#EPOOQO'#EQ'#EQOOQO'#ER'#EROOQO'#ES'#ESOOQO'#ET'#ETOOQO'#EU'#EUOOQO'#EV'#EVOOQO'#EW'#EWOOQO'#EX'#EXOOQO'#EY'#EYOOQO'#EZ'#EZOOQO'#E['#E[OOQO'#E]'#E]OOQO'#E^'#E^OOQO'#E_'#E_OOQO'#E`'#E`OOQO'#Ea'#EaOOQO'#Eb'#EbOOQO'#Ec'#EcOOQO'#Ed'#EdOOQO'#Ee'#EeOOQO'#Ef'#EfOOQO'#Eg'#EgO(xQPO'#CyO(}QPO'#DOO%yQPO,59cO)UQQO,59cO*oQPO,59lO*oQPO,59lO*oQPO,59lO*oQPO,59lO*oQPO,59lO/cQQO,5;SO/hQQO,5;VO/pQWO,5;fOOQO,59{,59{O0RQQO,5;WO0YQQO,5;ZO1mQPO'#EuO1{QPO,5;_OOQO'#Et'#EtOOQO,5;_,5;_OOQO,5;],5;]O2TQSO'#CzOOQO,59e,59eO2]QPO,59jO2eQQO'#DPOOQO,59j,59jOOQO1G.}1G.}O(xQPO'#DTO7YQPO'#DSO7dQPO'#DSOYQPO1G/WOYQPO1G/WOYQPO1G/WOYQPO1G/WOYQPO1G/WO7nQSO1G0nOOQO1G0q1G0qO7vQQO1G0qO7{QPO'#E|OOQO'#E}'#E}OOQO1G1Q1G1QO8QQPO1G1QOOQO1G0r1G0rOOQO'#Ev'#EvO8VQPO,5;aO8[QSO1G0yOOQO1G0y1G0yOOQO'#C|'#C|O8dQPO,59fOOQO'#C{'#C{OOQO,59f,59fOYQPO,59kOOQO1G/U1G/UOOQO,59o,59oO=SQPO,59nO=ZQPO,59nO>rQQO7+$rO?PQQO7+$rO@_QQO7+$rO@uQQO7+$rOBZQQO7+$rOOQO7+&Y7+&YOBtQQO7+&`OOQO7+&]7+&]OOQO,5;h,5;hOB|QPO7+&lOOQO1G0{1G0{OOQO1G0z1G0zOOQO7+&e7+&eOCRQSO1G/QOOQO1G/Q1G/QOCZQQO1G/VOOQO1G/Y1G/YOCeQPO1G/YOOQO<<Iz<<IzOHOQPO<<IzOOQO<<JW<<JWOOQO1G/R1G/ROOQO7+$l7+$lOOQO7+$t7+$tOOQOAN?fAN?f\",\n  stateData: \"HZ~O#vOShOS~OVPOWPOXPOYPOZPO[PO]PO^PO_PO`POaPObPO!WXO#^]O#a]O#wUO#z^O#{_O#|`O#}aO$ObO$PcO$QdO$ReO$SfO$TgO$UhO$ViO$WjO$XkO$YlO$ZmO$[nO$]oO$^pO$_qO$`rO$asO$btO$cuO$dvO$ewO$fxO$gyO$hzO$i{O$j|O$k}O$l!OO$m!PO$n!QO$o!RO$p!SO$q!TO$r!UO$s!VO$t!WO$u!XO$v!YO$w!ZO$x![O$y!]O$z!^O${!_O$|!`O$}!aO%RVO%SVO%TYO~Oc!bOd!bO#w!cO~OU!lOe!iOf!jOg!iOu!fOx!fOy!fOz!fO{!gO|!gO}!hO!O!hO!P!hO!Q!hO!R!hO!S!hO#o!mO%O!kO~Oq!qO%U!tO~O%TYOU#eXe#eXf#eXg#eXu#eXx#eXy#eXz#eX{#eX|#eX}#eX!O#eX!P#eX!Q#eX!R#eX!S#eX#o#eX#t#eX%O#eX#y#eX#x#eX~O#w!vO~O#y!zO~PYOc!bOd!bOUkaekafkagkaukaxkaykazka{ka|ka}ka!Oka!Pka!Qka!Rka!Ska#oka#tka%Oka#yka#xka~OP#OOQ!|OR!|OVvPWvPXvPYvPZvP[vP]vP^vP_vP`vPavPbvP!WvP#^vP#avP#wvP#zvP#{vP#|vP#}vP$OvP$PvP$QvP$RvP$SvP$TvP$UvP$VvP$WvP$XvP$YvP$ZvP$[vP$]vP$^vP$_vP$`vP$avP$bvP$cvP$dvP$evP$fvP$gvP$hvP$ivP$jvP$kvP$lvP$mvP$nvP$ovP$pvP$qvP$rvP$svP$tvP$uvP$vvP$wvP$xvP$yvP$zvP${vP$|vP$}vP%RvP%SvP%TvP~O#]#UO~O|#WO#]#VO~O#^#ZO#r#YO#s#YO%R#XO%S#XO~O#y#]O~P&OOu!fOU#cae#caf#cag#cax#cay#caz#ca{#ca|#ca}#ca!O#ca!P#ca!Q#ca!R#ca!S#ca#o#ca#t#ca%O#ca#y#ca#x#ca~O!S#^O#k#^O#l#^O#m#^O~O#x#`O%U#aO~Oq#bO#y#eO~O#x#fO#y#gO~O#xsX#ysX~P&OOVvXWvXXvXYvXZvX[vX]vX^vX_vX`vXavXbvX!WvX#^vX#avX#wvX#zvX#{vX#|vX#}vX$OvX$PvX$QvX$RvX$SvX$TvX$UvX$VvX$WvX$XvX$YvX$ZvX$[vX$]vX$^vX$_vX$`vX$avX$bvX$cvX$dvX$evX$fvX$gvX$hvX$ivX$jvX$kvX$lvX$mvX$nvX$ovX$pvX$qvX$rvX$svX$tvX$uvX$vvX$wvX$xvX$yvX$zvX${vX$|vX$}vX%RvX%SvX%TvX~OS#iOT#iO~P2oOQ!|OR!|O~P2oO%P#pO%Q#qO~O#]#rO~O#^#sO~O#w#tO~O#a#uO~Oq!qO%U#wO~O#x#xO#y#yO~OVvaWvaXvaYvaZva[va]va^va_va`vaavabva!Wva#^va#ava#zva#{va#|va#}va$Ova$Pva$Qva$Rva$Sva$Tva$Uva$Vva$Wva$Xva$Yva$Zva$[va$]va$^va$_va$`va$ava$bva$cva$dva$eva$fva$gva$hva$iva$jva$kva$lva$mva$nva$ova$pva$qva$rva$sva$tva$uva$vva$wva$xva$yva$zva${va$|va$}va%Rva%Sva%Tva~O#w!vO~P8lOS#|OT#|O#wva~P8lOu!fOUtqetqftqgtq{tq|tq}tq!Otq!Ptq!Qtq!Rtq!Stq#otq#ttq%Otq#ytq#xtq~Oxtqytqztq~P=hOx!fOy!fOz!fO~P=hOu!fOx!fOy!fOz!fO{!gO|!gOUtqetqftqgtq#otq#ttq%Otq#ytq#xtq~O}tq!Otq!Ptq!Qtq!Rtq!Stq~P?^O}!hO!O!hO!P!hO!Q!hO!R!hO!S!hO~P?^Oe!iOg!iOu!fOx!fOy!fOz!fO{!gO|!gO}!hO!O!hO!P!hO!Q!hO!R!hO!S!hO~OUtqftq#otq#ttq%Otq#ytq#xtq~PA]O#]$OO%P#}O~O#y$PO~Oq#bO#y$RO~O#xsi#ysi~P&OO#w!vOVviWviXviYviZvi[vi]vi^vi_vi`viavibvi!Wvi#^vi#avi#zvi#{vi#|vi#}vi$Ovi$Pvi$Qvi$Rvi$Svi$Tvi$Uvi$Vvi$Wvi$Xvi$Yvi$Zvi$[vi$]vi$^vi$_vi$`vi$avi$bvi$cvi$dvi$evi$fvi$gvi$hvi$ivi$jvi$kvi$lvi$mvi$nvi$ovi$pvi$qvi$rvi$svi$tvi$uvi$vvi$wvi$xvi$yvi$zvi${vi$|vi$}vi%Rvi%Svi%Tvi~O%P$TO~O#^!W%S%R%S~\",\n  goto: \"(S#rPPPPPPPPPPPPPPPPPPPPPPPPPP#s$c$o${%R%_%bP%h%q$cP%t&TPPPPPPPPPPP$c&_&kP&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k&k$cPP$c$cP$c$c&w$c'T'a'p's'yPPP$cP'|(PQROQ!oUQ!pWQ!y!cQ#k#PQ#l#QQ#m#RQ#n#SQ#o#TR#z#fe]OUW!c#P#Q#R#S#T#feQOUW!c#P#Q#R#S#T#fQ!dQR!{!eQ!w!bQ#h!|Q#{#iR$S#|R#c!vQ#d!vR$Q#xQ!eQQ!nTR!{!dR!x!cQ#P!fQ#Q!gQ#R!hQ#S!iR#T!jY!}!f!g!h!i!jR#j#OeTOUW!c#P#Q#R#S#T#feSOUW!c#P#Q#R#S#T#feWOUW!c#P#Q#R#S#T#feZOUW!c#P#Q#R#S#T#fd[OUW!c#P#Q#R#S#T#fR!uZR!rYQ!sYR#v#`R#_!qR#Z!mR#[!m\",\n  nodeNames: \"âš  Bool Ignoring On GroupLeft GroupRight Offset Avg Bottomk Count CountValues Group Max Min Quantile Stddev Stdvar Sum Topk By Without And Or Unless LineComment PromQL Expr AggregateExpr AggregateOp AggregateModifier GroupingLabels GroupingLabelList GroupingLabel LabelName FunctionCallBody FunctionCallArgs BinaryExpr Pow BinModifiers OnOrIgnoring Mul Div Mod Add Sub Eql Gte Gtr Lte Lss Neq FunctionCall FunctionIdentifier AbsentOverTime Identifier Absent Abs AvgOverTime Ceil Changes Clamp ClampMax ClampMin CountOverTime DaysInMonth DayOfMonth DayOfWeek Delta Deriv Exp Floor HistogramQuantile HoltWinters Hour Idelta Increase Irate LabelReplace LabelJoin LastOverTime Ln Log10 Log2 MaxOverTime MinOverTime Minute Month PredictLinear QuantileOverTime Rate Resets Round Scalar Sgn Sort SortDesc Sqrt StddevOverTime StdvarOverTime SumOverTime Timestamp Time Vector Year MatrixSelector Duration NumberLiteral OffsetExpr ParenExpr StringLiteral SubqueryExpr UnaryExpr UnaryOp VectorSelector MetricIdentifier LabelMatchers LabelMatchList LabelMatcher MatchOp EqlSingle EqlRegex NeqRegex StepInvariantExpr At SignedNumber AtModifierPreprocessors Start End\",\n  maxTerm: 190,\n  skippedNodes: [0,24],\n  repeatNodeCount: 0,\n  tokenData: \"!,{~R!TX^$bpq$bqr%Vrs%jst&^uv&iwx&nxy']yz'bz{'g{|'l|}+t}!O+y!O!P(Y!P!Q,g!Q!R,l!R![-d![!]! m!^!_!!i!_!`!!v!`!a!#]!b!c!#j!c!k!#o!k!l!$V!l!p!#o!p!q!&V!q!}!#o!}#O!'g#P#Q!'l#Q#R!'q#R#S!#o#S#T!'v#T#X!#o#X#Y!(S#Y#]!#o#]#^!$V#^#b!#o#b#c!&V#c#g!#o#g#h!)v#h#o!#o#o#p!,q#q#r!,v#y#z$b$f$g$b#BY#BZ$b$IS$I_$b$I|$JO$b$JT$JU$b$KV$KW$b&FU&FV$b~$gY#v~X^$bpq$b#y#z$b$f$g$b#BY#BZ$b$IS$I_$b$I|$JO$b$JT$JU$b$KV$KW$b&FU&FV$b~%YQ!_!`%`#r#s%e~%eO!S~~%jO#m~~%oU#a~OY%jZr%jrs&Rs#O%j#O#P&W#P~%j~&WO#a~~&ZPO~%j~&cQh~OY&^Z~&^~&nOz~~&sU#a~OY&nZw&nwx&Rx#O&n#O#P'V#P~&n~'YPO~&n~'bO#w~~'gO#y~~'lOx~Z'sV{Q%SX!O!P(Y!Q!R)Y!R![)|!k!l*y!p!q+b#]#^*y#b#c+bX(]P!Q![(`X(eR#^X!Q![(`!g!h(n#X#Y(nX(qR{|(z}!O(z!Q![)QX(}P!Q![)QX)VP#^X!Q![)QX)_T#^X!O!P)n!Q![)|!g!h(n#X#Y(n#l#m*_X)sR#^X!Q![)n!g!h(n#X#Y(nX*RS#^X!O!P)n!Q![)|!g!h(n#X#Y(nX*bR!Q![*k!c!i*k#T#Z*kX*pR#^X!Q![*k!c!i*k#T#Z*kX*|Q!p!q+S#b#c+SX+VQ!h!i+]#Y#Z+]X+bO#^XX+eQ!c!d+k#T#U+kX+nQ!p!q+]#b#c+]~+yO#x~Z,QV|Q%RX!O!P(Y!Q!R)Y!R![)|!k!l*y!p!q+b#]#^*y#b#c+b~,lOy~Z,qZ#^X!O!P)n!Q![-d!g!h(n#W#X.X#X#Y(n#[#]2g#a#b4j#g#h5p#k#l6X#l#m*_#m#n>nZ-iY#^X!O!P)n!Q![-d!g!h(n#W#X.X#X#Y(n#[#]2g#a#b4j#g#h5p#k#l6X#m#n>nQ.^P#]Q!Q![.aQ.dS!Q![.a#[#].p#a#b0x#g#h2OQ.uP#]Q!Q![.xQ.{R!Q![.x#a#b/U#g#h0aQ/ZQ#]Q!Q![/a#g#h/sQ/dR!Q![/a#a#b/m#g#h/xQ/pP#g#h/sQ/xO#]QQ/}P#]Q!Q![0QQ0TQ!Q![0Q#a#b0ZQ0^P#g#h/sQ0fP#]Q!Q![0iQ0lQ!Q![0i#a#b0rQ0uP#g#h/sQ0}Q#]Q!Q![1T#g#h/sQ1WR!Q![1T#a#b1a#g#h1gQ1dP#g#h/sQ1lP#]Q!Q![1oQ1rQ!Q![1o#a#b1xQ1{P#g#h/sQ2TP#]Q!Q![2WQ2ZQ!Q![2W#a#b2aQ2dP#g#h/sQ2lP#]Q!Q![2oQ2rR!Q![2o#a#b2{#g#h4RQ3QQ#]Q!Q![3W#g#h/sQ3ZR!Q![3W#a#b3d#g#h3jQ3gP#g#h/sQ3oP#]Q!Q![3rQ3uQ!Q![3r#a#b3{Q4OP#g#h/sQ4WP#]Q!Q![4ZQ4^Q!Q![4Z#a#b4dQ4gP#g#h/sQ4oQ#]Q!Q![4u#g#h/sQ4xR!Q![4u#a#b5R#g#h5XQ5UP#g#h/sQ5^P#]Q!Q![5aQ5dQ!Q![5a#a#b5jQ5mP#g#h/sQ5uP#]Q!Q![5xQ5{Q!Q![5x#a#b6RQ6UP#g#h/sQ6^P#]Q!Q![6aQ6dT!Q![6a#W#X6s#[#]:|#a#b=P#g#h>VQ6xP#]Q!Q![6{Q7OS!Q![6{#[#]7[#a#b9_#g#h:eQ7aP#]Q!Q![7dQ7gR!Q![7d#a#b7p#g#h8vQ7uQ#]Q!Q![7{#g#h/sQ8OR!Q![7{#a#b8X#g#h8_Q8[P#g#h/sQ8dP#]Q!Q![8gQ8jQ!Q![8g#a#b8pQ8sP#g#h/sQ8{P#]Q!Q![9OQ9RQ!Q![9O#a#b9XQ9[P#g#h/sQ9dQ#]Q!Q![9j#g#h/sQ9mR!Q![9j#a#b9v#g#h9|Q9yP#g#h/sQ:RP#]Q!Q![:UQ:XQ!Q![:U#a#b:_Q:bP#g#h/sQ:jP#]Q!Q![:mQ:pQ!Q![:m#a#b:vQ:yP#g#h/sQ;RP#]Q!Q![;UQ;XR!Q![;U#a#b;b#g#h<hQ;gQ#]Q!Q![;m#g#h/sQ;pR!Q![;m#a#b;y#g#h<PQ;|P#g#h/sQ<UP#]Q!Q![<XQ<[Q!Q![<X#a#b<bQ<eP#g#h/sQ<mP#]Q!Q![<pQ<sQ!Q![<p#a#b<yQ<|P#g#h/sQ=UQ#]Q!Q![=[#g#h/sQ=_R!Q![=[#a#b=h#g#h=nQ=kP#g#h/sQ=sP#]Q!Q![=vQ=yQ!Q![=v#a#b>PQ>SP#g#h/sQ>[P#]Q!Q![>_Q>bQ!Q![>_#a#b>hQ>kP#g#h/sQ>sP#]Q!Q![>vQ>yU!Q![>v#W#X?]#[#]Cf#a#bEi#g#hFo#k#lGWQ?bP#]Q!Q![?eQ?hS!Q![?e#[#]?t#a#bAw#g#hB}Q?yP#]Q!Q![?|Q@PR!Q![?|#a#b@Y#g#hA`Q@_Q#]Q!Q![@e#g#h/sQ@hR!Q![@e#a#b@q#g#h@wQ@tP#g#h/sQ@|P#]Q!Q![APQASQ!Q![AP#a#bAYQA]P#g#h/sQAeP#]Q!Q![AhQAkQ!Q![Ah#a#bAqQAtP#g#h/sQA|Q#]Q!Q![BS#g#h/sQBVR!Q![BS#a#bB`#g#hBfQBcP#g#h/sQBkP#]Q!Q![BnQBqQ!Q![Bn#a#bBwQBzP#g#h/sQCSP#]Q!Q![CVQCYQ!Q![CV#a#bC`QCcP#g#h/sQCkP#]Q!Q![CnQCqR!Q![Cn#a#bCz#g#hEQQDPQ#]Q!Q![DV#g#h/sQDYR!Q![DV#a#bDc#g#hDiQDfP#g#h/sQDnP#]Q!Q![DqQDtQ!Q![Dq#a#bDzQD}P#g#h/sQEVP#]Q!Q![EYQE]Q!Q![EY#a#bEcQEfP#g#h/sQEnQ#]Q!Q![Et#g#h/sQEwR!Q![Et#a#bFQ#g#hFWQFTP#g#h/sQF]P#]Q!Q![F`QFcQ!Q![F`#a#bFiQFlP#g#h/sQFtP#]Q!Q![FwQFzQ!Q![Fw#a#bGQQGTP#g#h/sQG]P#]Q!Q![G`QGcT!Q![G`#W#XGr#[#]K{#a#bNO#g#h! UQGwP#]Q!Q![GzQG}S!Q![Gz#[#]HZ#a#bJ^#g#hKdQH`P#]Q!Q![HcQHfR!Q![Hc#a#bHo#g#hIuQHtQ#]Q!Q![Hz#g#h/sQH}R!Q![Hz#a#bIW#g#hI^QIZP#g#h/sQIcP#]Q!Q![IfQIiQ!Q![If#a#bIoQIrP#g#h/sQIzP#]Q!Q![I}QJQQ!Q![I}#a#bJWQJZP#g#h/sQJcQ#]Q!Q![Ji#g#h/sQJlR!Q![Ji#a#bJu#g#hJ{QJxP#g#h/sQKQP#]Q!Q![KTQKWQ!Q![KT#a#bK^QKaP#g#h/sQKiP#]Q!Q![KlQKoQ!Q![Kl#a#bKuQKxP#g#h/sQLQP#]Q!Q![LTQLWR!Q![LT#a#bLa#g#hMgQLfQ#]Q!Q![Ll#g#h/sQLoR!Q![Ll#a#bLx#g#hMOQL{P#g#h/sQMTP#]Q!Q![MWQMZQ!Q![MW#a#bMaQMdP#g#h/sQMlP#]Q!Q![MoQMrQ!Q![Mo#a#bMxQM{P#g#h/sQNTQ#]Q!Q![NZ#g#h/sQN^R!Q![NZ#a#bNg#g#hNmQNjP#g#h/sQNrP#]Q!Q![NuQNxQ!Q![Nu#a#b! OQ! RP#g#h/sQ! ZP#]Q!Q![! ^Q! aQ!Q![! ^#a#b! gQ! jP#g#h/sV! tT%QS!WR!Q![!!T![!]!!T!c!}!!T#R#S!!T#T#o!!TR!!YT!WR!Q![!!T![!]!!T!c!}!!T#R#S!!T#T#o!!T~!!nP!R~!_!`!!q~!!vO!Q~~!!{Q#kP!_!`!#R#r#s!#WQ!#WO}Q~!#]O#l~~!#bP!P~!_!`!#e~!#jO!O~~!#oO#o~V!#vTqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#o!#o_!$^XqS!WR!Q![!#o![!]!!T!c!p!#o!p!q!$y!q!}!#o#R#S!#o#T#b!#o#b#c!$y#c#o!#o_!%QXqS!WR!Q![!#o![!]!!T!c!h!#o!h!i!%m!i!}!#o#R#S!#o#T#Y!#o#Y#Z!%m#Z#o!#o_!%vTqS#^X!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#o!#o_!&^VqS!WR!Q![!#o![!]!!T!c!d!&s!d!}!#o#R#S!#o#T#U!&s#U#o!#o_!&zXqS!WR!Q![!#o![!]!!T!c!p!#o!p!q!%m!q!}!#o#R#S!#o#T#b!#o#b#c!%m#c#o!#o~!'lO%O~~!'qO%P~~!'vOu~~!'yRO#S!'v#S#T&R#T~!'v_!(ZVqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#b!#o#b#c!(p#c#o!#o_!(wVqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#W!#o#W#X!)^#X#o!#o_!)gT#sWqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#o!#o_!)}VqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#h!#o#h#i!*d#i#o!#o_!*kUqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#U!*}#U#o!#o_!+UVqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#f!#o#f#g!+k#g#o!#o_!+rVqS!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#h!#o#h#i!,X#i#o!#o_!,bTqS#rW!WR!Q![!#o![!]!!T!c!}!#o#R#S!#o#T#o!#o~!,vO%T~~!,{O%U~\",\n  tokenizers: [0, 1, 2, 3],\n  topRules: {\"PromQL\":[0,25]},\n  specialized: [{term: 54, get: (value, stack) => (specializeIdentifier(value) << 1)},{term: 54, get: (value, stack) => (extendIdentifier(value) << 1) | 1},{term: 54, get: value => spec_Identifier[value] || -1}],\n  tokenPrec: 1799\n});\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst \n  Bool$1 = 1,\n  Ignoring$1 = 2,\n  On$1 = 3,\n  GroupLeft$1 = 4,\n  GroupRight$1 = 5,\n  Offset$1 = 6,\n  Avg$1 = 7,\n  Bottomk$1 = 8,\n  Count$1 = 9,\n  CountValues$1 = 10,\n  Group$1 = 11,\n  Max$1 = 12,\n  Min$1 = 13,\n  Quantile$1 = 14,\n  Stddev$1 = 15,\n  Stdvar$1 = 16,\n  Sum$1 = 17,\n  Topk$1 = 18,\n  By$1 = 19,\n  Without$1 = 20,\n  And$1 = 21,\n  Or$1 = 22,\n  Unless$1 = 23,\n  LineComment = 24,\n  PromQL = 25,\n  Expr = 26,\n  AggregateExpr = 27,\n  AggregateOp = 28,\n  AggregateModifier = 29,\n  GroupingLabels = 30,\n  GroupingLabelList = 31,\n  GroupingLabel = 32,\n  LabelName = 33,\n  FunctionCallBody = 34,\n  FunctionCallArgs = 35,\n  BinaryExpr = 36,\n  Pow = 37,\n  BinModifiers = 38,\n  OnOrIgnoring = 39,\n  Mul = 40,\n  Div = 41,\n  Mod = 42,\n  Add = 43,\n  Sub = 44,\n  Eql = 45,\n  Gte = 46,\n  Gtr = 47,\n  Lte = 48,\n  Lss = 49,\n  Neq = 50,\n  FunctionCall = 51,\n  FunctionIdentifier = 52,\n  AbsentOverTime = 53,\n  Identifier = 54,\n  Absent = 55,\n  Abs = 56,\n  AvgOverTime = 57,\n  Ceil = 58,\n  Changes = 59,\n  Clamp = 60,\n  ClampMax = 61,\n  ClampMin = 62,\n  CountOverTime = 63,\n  DaysInMonth = 64,\n  DayOfMonth = 65,\n  DayOfWeek = 66,\n  Delta = 67,\n  Deriv = 68,\n  Exp = 69,\n  Floor = 70,\n  HistogramQuantile = 71,\n  HoltWinters = 72,\n  Hour = 73,\n  Idelta = 74,\n  Increase = 75,\n  Irate = 76,\n  LabelReplace = 77,\n  LabelJoin = 78,\n  LastOverTime = 79,\n  Ln = 80,\n  Log10 = 81,\n  Log2 = 82,\n  MaxOverTime = 83,\n  MinOverTime = 84,\n  Minute = 85,\n  Month = 86,\n  PredictLinear = 87,\n  QuantileOverTime = 88,\n  Rate = 89,\n  Resets = 90,\n  Round = 91,\n  Scalar = 92,\n  Sgn = 93,\n  Sort = 94,\n  SortDesc = 95,\n  Sqrt = 96,\n  StddevOverTime = 97,\n  StdvarOverTime = 98,\n  SumOverTime = 99,\n  Timestamp = 100,\n  Time = 101,\n  Vector = 102,\n  Year = 103,\n  MatrixSelector = 104,\n  Duration = 105,\n  NumberLiteral = 106,\n  OffsetExpr = 107,\n  ParenExpr = 108,\n  StringLiteral = 109,\n  SubqueryExpr = 110,\n  UnaryExpr = 111,\n  UnaryOp = 112,\n  VectorSelector = 113,\n  MetricIdentifier = 114,\n  LabelMatchers = 115,\n  LabelMatchList = 116,\n  LabelMatcher = 117,\n  MatchOp = 118,\n  EqlSingle = 119,\n  EqlRegex = 120,\n  NeqRegex = 121,\n  StepInvariantExpr = 122,\n  At = 123,\n  SignedNumber = 124,\n  AtModifierPreprocessors = 125,\n  Start = 126,\n  End = 127;\n\nexport { Abs, Absent, AbsentOverTime, Add, AggregateExpr, AggregateModifier, AggregateOp, And$1 as And, At, AtModifierPreprocessors, Avg$1 as Avg, AvgOverTime, BinModifiers, BinaryExpr, Bool$1 as Bool, Bottomk$1 as Bottomk, By$1 as By, Ceil, Changes, Clamp, ClampMax, ClampMin, Count$1 as Count, CountOverTime, CountValues$1 as CountValues, DayOfMonth, DayOfWeek, DaysInMonth, Delta, Deriv, Div, Duration, End, Eql, EqlRegex, EqlSingle, Exp, Expr, Floor, FunctionCall, FunctionCallArgs, FunctionCallBody, FunctionIdentifier, Group$1 as Group, GroupLeft$1 as GroupLeft, GroupRight$1 as GroupRight, GroupingLabel, GroupingLabelList, GroupingLabels, Gte, Gtr, HistogramQuantile, HoltWinters, Hour, Idelta, Identifier, Ignoring$1 as Ignoring, Increase, Irate, LabelJoin, LabelMatchList, LabelMatcher, LabelMatchers, LabelName, LabelReplace, LastOverTime, LineComment, Ln, Log10, Log2, Lss, Lte, MatchOp, MatrixSelector, Max$1 as Max, MaxOverTime, MetricIdentifier, Min$1 as Min, MinOverTime, Minute, Mod, Month, Mul, Neq, NeqRegex, NumberLiteral, Offset$1 as Offset, OffsetExpr, On$1 as On, OnOrIgnoring, Or$1 as Or, ParenExpr, Pow, PredictLinear, PromQL, Quantile$1 as Quantile, QuantileOverTime, Rate, Resets, Round, Scalar, Sgn, SignedNumber, Sort, SortDesc, Sqrt, Start, Stddev$1 as Stddev, StddevOverTime, Stdvar$1 as Stdvar, StdvarOverTime, StepInvariantExpr, StringLiteral, Sub, SubqueryExpr, Sum$1 as Sum, SumOverTime, Time, Timestamp, Topk$1 as Topk, UnaryExpr, UnaryOp, Unless$1 as Unless, Vector, VectorSelector, Without$1 as Without, Year, parser };\n"]},"metadata":{},"sourceType":"module"}