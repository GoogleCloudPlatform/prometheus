{"ast":null,"code":"\"use strict\"; // The MIT License (MIT)\n//\n// Copyright (c) 2020 The Prometheus Authors\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CachedPrometheusClient = exports.HTTPPrometheusClient = void 0;\n\nvar parser_1 = require(\"../parser\");\n\nvar lru_cache_1 = __importDefault(require(\"lru-cache\"));\n\nvar apiPrefix = '/api/v1';\nvar labelsEndpoint = apiPrefix + '/labels';\nvar labelValuesEndpoint = apiPrefix + '/label/:name/values';\nvar seriesEndpoint = apiPrefix + '/series';\nvar metricMetadataEndpoint = apiPrefix + '/metadata'; // These are status codes where the Prometheus API still returns a valid JSON body,\n// with an error encoded within the JSON.\n\nvar badRequest = 400;\nvar unprocessableEntity = 422;\nvar serviceUnavailable = 503; // HTTPPrometheusClient is the HTTP client that should be used to get some information from the different endpoint provided by prometheus.\n\nvar HTTPPrometheusClient =\n/** @class */\nfunction () {\n  function HTTPPrometheusClient(config) {\n    this.lookbackInterval = 60 * 60 * 1000 * 12; //12 hours\n    // For some reason, just assigning via \"= fetch\" here does not end up executing fetch correctly\n    // when calling it, thus the indirection via another function wrapper.\n\n    this.fetchFn = function (input, init) {\n      return fetch(input, init);\n    };\n\n    this.url = config.url;\n    this.errorHandler = config.httpErrorHandler;\n\n    if (config.lookbackInterval) {\n      this.lookbackInterval = config.lookbackInterval;\n    }\n\n    if (config.fetchFn) {\n      this.fetchFn = config.fetchFn;\n    }\n  }\n\n  HTTPPrometheusClient.prototype.labelNames = function (metricName) {\n    var _this = this;\n\n    var end = new Date();\n    var start = new Date(end.getTime() - this.lookbackInterval);\n\n    if (metricName === undefined || metricName === '') {\n      var params = new URLSearchParams({\n        start: start.toISOString(),\n        end: end.toISOString()\n      }); // See https://prometheus.io/docs/prometheus/latest/querying/api/#getting-label-names\n\n      return this.fetchAPI(labelsEndpoint + \"?\" + params).catch(function (error) {\n        if (_this.errorHandler) {\n          _this.errorHandler(error);\n        }\n\n        return [];\n      });\n    }\n\n    return this.series(metricName).then(function (series) {\n      var e_1, _a, e_2, _b;\n\n      var labelNames = new Set();\n\n      try {\n        for (var series_1 = __values(series), series_1_1 = series_1.next(); !series_1_1.done; series_1_1 = series_1.next()) {\n          var labelSet = series_1_1.value;\n\n          try {\n            for (var _c = (e_2 = void 0, __values(Object.entries(labelSet))), _d = _c.next(); !_d.done; _d = _c.next()) {\n              var _e = __read(_d.value, 1),\n                  key = _e[0];\n\n              if (key === '__name__') {\n                continue;\n              }\n\n              labelNames.add(key);\n            }\n          } catch (e_2_1) {\n            e_2 = {\n              error: e_2_1\n            };\n          } finally {\n            try {\n              if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (series_1_1 && !series_1_1.done && (_a = series_1.return)) _a.call(series_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return Array.from(labelNames);\n    });\n  }; // labelValues return a list of the value associated to the given labelName.\n  // In case a metric is provided, then the list of values is then associated to the couple <MetricName, LabelName>\n\n\n  HTTPPrometheusClient.prototype.labelValues = function (labelName, metricName, matchers) {\n    var _this = this;\n\n    var end = new Date();\n    var start = new Date(end.getTime() - this.lookbackInterval);\n\n    if (!metricName || metricName.length === 0) {\n      var params = new URLSearchParams({\n        start: start.toISOString(),\n        end: end.toISOString()\n      }); // See https://prometheus.io/docs/prometheus/latest/querying/api/#querying-label-values\n\n      return this.fetchAPI(labelValuesEndpoint.replace(/:name/gi, labelName) + \"?\" + params).catch(function (error) {\n        if (_this.errorHandler) {\n          _this.errorHandler(error);\n        }\n\n        return [];\n      });\n    }\n\n    return this.series(metricName, matchers, labelName).then(function (series) {\n      var e_3, _a, e_4, _b;\n\n      var labelValues = new Set();\n\n      try {\n        for (var series_2 = __values(series), series_2_1 = series_2.next(); !series_2_1.done; series_2_1 = series_2.next()) {\n          var labelSet = series_2_1.value;\n\n          try {\n            for (var _c = (e_4 = void 0, __values(Object.entries(labelSet))), _d = _c.next(); !_d.done; _d = _c.next()) {\n              var _e = __read(_d.value, 2),\n                  key = _e[0],\n                  value = _e[1];\n\n              if (key === '__name__') {\n                continue;\n              }\n\n              if (key === labelName) {\n                labelValues.add(value);\n              }\n            }\n          } catch (e_4_1) {\n            e_4 = {\n              error: e_4_1\n            };\n          } finally {\n            try {\n              if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            } finally {\n              if (e_4) throw e_4.error;\n            }\n          }\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (series_2_1 && !series_2_1.done && (_a = series_2.return)) _a.call(series_2);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n\n      return Array.from(labelValues);\n    });\n  };\n\n  HTTPPrometheusClient.prototype.metricMetadata = function () {\n    var _this = this;\n\n    return this.fetchAPI(metricMetadataEndpoint).catch(function (error) {\n      if (_this.errorHandler) {\n        _this.errorHandler(error);\n      }\n\n      return {};\n    });\n  };\n\n  HTTPPrometheusClient.prototype.series = function (metricName, matchers, labelName) {\n    var _this = this;\n\n    var end = new Date();\n    var start = new Date(end.getTime() - this.lookbackInterval);\n    var params = new URLSearchParams({\n      start: start.toISOString(),\n      end: end.toISOString(),\n      'match[]': parser_1.labelMatchersToString(metricName, matchers, labelName)\n    }); // See https://prometheus.io/docs/prometheus/latest/querying/api/#finding-series-by-label-matchers\n\n    return this.fetchAPI(seriesEndpoint + \"?\" + params).catch(function (error) {\n      if (_this.errorHandler) {\n        _this.errorHandler(error);\n      }\n\n      return [];\n    });\n  };\n\n  HTTPPrometheusClient.prototype.metricNames = function () {\n    return this.labelValues('__name__');\n  };\n\n  HTTPPrometheusClient.prototype.fetchAPI = function (resource) {\n    return this.fetchFn(this.url + resource).then(function (res) {\n      if (!res.ok && ![badRequest, unprocessableEntity, serviceUnavailable].includes(res.status)) {\n        throw new Error(res.statusText);\n      }\n\n      return res;\n    }).then(function (res) {\n      return res.json();\n    }).then(function (apiRes) {\n      if (apiRes.status === 'error') {\n        throw new Error(apiRes.error !== undefined ? apiRes.error : 'missing \"error\" field in response JSON');\n      }\n\n      if (apiRes.data === undefined) {\n        throw new Error('missing \"data\" field in response JSON');\n      }\n\n      return apiRes.data;\n    });\n  };\n\n  return HTTPPrometheusClient;\n}();\n\nexports.HTTPPrometheusClient = HTTPPrometheusClient;\n\nvar Cache =\n/** @class */\nfunction () {\n  function Cache(config) {\n    var maxAge = config && config.maxAge ? config.maxAge : 5 * 60 * 1000;\n    this.completeAssociation = new lru_cache_1.default(maxAge);\n    this.metricMetadata = {};\n    this.labelValues = new lru_cache_1.default(maxAge);\n    this.labelNames = [];\n\n    if (config === null || config === void 0 ? void 0 : config.initialMetricList) {\n      this.setLabelValues('__name__', config.initialMetricList);\n    }\n  }\n\n  Cache.prototype.setAssociations = function (metricName, series) {\n    var _this = this;\n\n    series.forEach(function (labelSet) {\n      var e_5, _a;\n\n      var currentAssociation = _this.completeAssociation.get(metricName);\n\n      if (!currentAssociation) {\n        currentAssociation = new Map();\n\n        _this.completeAssociation.set(metricName, currentAssociation);\n      }\n\n      try {\n        for (var _b = __values(Object.entries(labelSet)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var _d = __read(_c.value, 2),\n              key = _d[0],\n              value = _d[1];\n\n          if (key === '__name__') {\n            continue;\n          }\n\n          var labelValues = currentAssociation.get(key);\n\n          if (labelValues === undefined) {\n            currentAssociation.set(key, new Set([value]));\n          } else {\n            labelValues.add(value);\n          }\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n    });\n  };\n\n  Cache.prototype.setMetricMetadata = function (metadata) {\n    this.metricMetadata = metadata;\n  };\n\n  Cache.prototype.getMetricMetadata = function () {\n    return this.metricMetadata;\n  };\n\n  Cache.prototype.setLabelNames = function (labelNames) {\n    this.labelNames = labelNames;\n  };\n\n  Cache.prototype.getLabelNames = function (metricName) {\n    if (!metricName || metricName.length === 0) {\n      return this.labelNames;\n    }\n\n    var labelSet = this.completeAssociation.get(metricName);\n    return labelSet ? Array.from(labelSet.keys()) : [];\n  };\n\n  Cache.prototype.setLabelValues = function (labelName, labelValues) {\n    this.labelValues.set(labelName, labelValues);\n  };\n\n  Cache.prototype.getLabelValues = function (labelName, metricName) {\n    if (!metricName || metricName.length === 0) {\n      var result = this.labelValues.get(labelName);\n      return result ? result : [];\n    }\n\n    var labelSet = this.completeAssociation.get(metricName);\n\n    if (labelSet) {\n      var labelValues = labelSet.get(labelName);\n      return labelValues ? Array.from(labelValues) : [];\n    }\n\n    return [];\n  };\n\n  return Cache;\n}();\n\nvar CachedPrometheusClient =\n/** @class */\nfunction () {\n  function CachedPrometheusClient(client, config) {\n    this.client = client;\n    this.cache = new Cache(config);\n  }\n\n  CachedPrometheusClient.prototype.labelNames = function (metricName) {\n    var _this = this;\n\n    var cachedLabel = this.cache.getLabelNames(metricName);\n\n    if (cachedLabel && cachedLabel.length > 0) {\n      return Promise.resolve(cachedLabel);\n    }\n\n    if (metricName === undefined || metricName === '') {\n      return this.client.labelNames().then(function (labelNames) {\n        _this.cache.setLabelNames(labelNames);\n\n        return labelNames;\n      });\n    }\n\n    return this.series(metricName).then(function () {\n      return _this.cache.getLabelNames(metricName);\n    });\n  };\n\n  CachedPrometheusClient.prototype.labelValues = function (labelName, metricName) {\n    var _this = this;\n\n    var cachedLabel = this.cache.getLabelValues(labelName, metricName);\n\n    if (cachedLabel && cachedLabel.length > 0) {\n      return Promise.resolve(cachedLabel);\n    }\n\n    if (metricName === undefined || metricName === '') {\n      return this.client.labelValues(labelName).then(function (labelValues) {\n        _this.cache.setLabelValues(labelName, labelValues);\n\n        return labelValues;\n      });\n    }\n\n    return this.series(metricName).then(function () {\n      return _this.cache.getLabelValues(labelName, metricName);\n    });\n  };\n\n  CachedPrometheusClient.prototype.metricMetadata = function () {\n    var _this = this;\n\n    var cachedMetadata = this.cache.getMetricMetadata();\n\n    if (cachedMetadata && Object.keys(cachedMetadata).length > 0) {\n      return Promise.resolve(cachedMetadata);\n    }\n\n    return this.client.metricMetadata().then(function (metadata) {\n      _this.cache.setMetricMetadata(metadata);\n\n      return _this.cache.getMetricMetadata();\n    });\n  };\n\n  CachedPrometheusClient.prototype.series = function (metricName) {\n    var _this = this;\n\n    return this.client.series(metricName).then(function (series) {\n      _this.cache.setAssociations(metricName, series);\n\n      return series;\n    });\n  };\n\n  CachedPrometheusClient.prototype.metricNames = function () {\n    return this.labelValues('__name__');\n  };\n\n  return CachedPrometheusClient;\n}();\n\nexports.CachedPrometheusClient = CachedPrometheusClient;","map":{"version":3,"sources":["../../../src/lang-promql/client/prometheus.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2020 The Prometheus Authors\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CachedPrometheusClient = exports.HTTPPrometheusClient = void 0;\nvar parser_1 = require(\"../parser\");\nvar lru_cache_1 = __importDefault(require(\"lru-cache\"));\nvar apiPrefix = '/api/v1';\nvar labelsEndpoint = apiPrefix + '/labels';\nvar labelValuesEndpoint = apiPrefix + '/label/:name/values';\nvar seriesEndpoint = apiPrefix + '/series';\nvar metricMetadataEndpoint = apiPrefix + '/metadata';\n// These are status codes where the Prometheus API still returns a valid JSON body,\n// with an error encoded within the JSON.\nvar badRequest = 400;\nvar unprocessableEntity = 422;\nvar serviceUnavailable = 503;\n// HTTPPrometheusClient is the HTTP client that should be used to get some information from the different endpoint provided by prometheus.\nvar HTTPPrometheusClient = /** @class */ (function () {\n    function HTTPPrometheusClient(config) {\n        this.lookbackInterval = 60 * 60 * 1000 * 12; //12 hours\n        // For some reason, just assigning via \"= fetch\" here does not end up executing fetch correctly\n        // when calling it, thus the indirection via another function wrapper.\n        this.fetchFn = function (input, init) { return fetch(input, init); };\n        this.url = config.url;\n        this.errorHandler = config.httpErrorHandler;\n        if (config.lookbackInterval) {\n            this.lookbackInterval = config.lookbackInterval;\n        }\n        if (config.fetchFn) {\n            this.fetchFn = config.fetchFn;\n        }\n    }\n    HTTPPrometheusClient.prototype.labelNames = function (metricName) {\n        var _this = this;\n        var end = new Date();\n        var start = new Date(end.getTime() - this.lookbackInterval);\n        if (metricName === undefined || metricName === '') {\n            var params = new URLSearchParams({\n                start: start.toISOString(),\n                end: end.toISOString(),\n            });\n            // See https://prometheus.io/docs/prometheus/latest/querying/api/#getting-label-names\n            return this.fetchAPI(labelsEndpoint + \"?\" + params).catch(function (error) {\n                if (_this.errorHandler) {\n                    _this.errorHandler(error);\n                }\n                return [];\n            });\n        }\n        return this.series(metricName).then(function (series) {\n            var e_1, _a, e_2, _b;\n            var labelNames = new Set();\n            try {\n                for (var series_1 = __values(series), series_1_1 = series_1.next(); !series_1_1.done; series_1_1 = series_1.next()) {\n                    var labelSet = series_1_1.value;\n                    try {\n                        for (var _c = (e_2 = void 0, __values(Object.entries(labelSet))), _d = _c.next(); !_d.done; _d = _c.next()) {\n                            var _e = __read(_d.value, 1), key = _e[0];\n                            if (key === '__name__') {\n                                continue;\n                            }\n                            labelNames.add(key);\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (series_1_1 && !series_1_1.done && (_a = series_1.return)) _a.call(series_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return Array.from(labelNames);\n        });\n    };\n    // labelValues return a list of the value associated to the given labelName.\n    // In case a metric is provided, then the list of values is then associated to the couple <MetricName, LabelName>\n    HTTPPrometheusClient.prototype.labelValues = function (labelName, metricName, matchers) {\n        var _this = this;\n        var end = new Date();\n        var start = new Date(end.getTime() - this.lookbackInterval);\n        if (!metricName || metricName.length === 0) {\n            var params = new URLSearchParams({\n                start: start.toISOString(),\n                end: end.toISOString(),\n            });\n            // See https://prometheus.io/docs/prometheus/latest/querying/api/#querying-label-values\n            return this.fetchAPI(labelValuesEndpoint.replace(/:name/gi, labelName) + \"?\" + params).catch(function (error) {\n                if (_this.errorHandler) {\n                    _this.errorHandler(error);\n                }\n                return [];\n            });\n        }\n        return this.series(metricName, matchers, labelName).then(function (series) {\n            var e_3, _a, e_4, _b;\n            var labelValues = new Set();\n            try {\n                for (var series_2 = __values(series), series_2_1 = series_2.next(); !series_2_1.done; series_2_1 = series_2.next()) {\n                    var labelSet = series_2_1.value;\n                    try {\n                        for (var _c = (e_4 = void 0, __values(Object.entries(labelSet))), _d = _c.next(); !_d.done; _d = _c.next()) {\n                            var _e = __read(_d.value, 2), key = _e[0], value = _e[1];\n                            if (key === '__name__') {\n                                continue;\n                            }\n                            if (key === labelName) {\n                                labelValues.add(value);\n                            }\n                        }\n                    }\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                    finally {\n                        try {\n                            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                        }\n                        finally { if (e_4) throw e_4.error; }\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (series_2_1 && !series_2_1.done && (_a = series_2.return)) _a.call(series_2);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            return Array.from(labelValues);\n        });\n    };\n    HTTPPrometheusClient.prototype.metricMetadata = function () {\n        var _this = this;\n        return this.fetchAPI(metricMetadataEndpoint).catch(function (error) {\n            if (_this.errorHandler) {\n                _this.errorHandler(error);\n            }\n            return {};\n        });\n    };\n    HTTPPrometheusClient.prototype.series = function (metricName, matchers, labelName) {\n        var _this = this;\n        var end = new Date();\n        var start = new Date(end.getTime() - this.lookbackInterval);\n        var params = new URLSearchParams({\n            start: start.toISOString(),\n            end: end.toISOString(),\n            'match[]': parser_1.labelMatchersToString(metricName, matchers, labelName),\n        });\n        // See https://prometheus.io/docs/prometheus/latest/querying/api/#finding-series-by-label-matchers\n        return this.fetchAPI(seriesEndpoint + \"?\" + params).catch(function (error) {\n            if (_this.errorHandler) {\n                _this.errorHandler(error);\n            }\n            return [];\n        });\n    };\n    HTTPPrometheusClient.prototype.metricNames = function () {\n        return this.labelValues('__name__');\n    };\n    HTTPPrometheusClient.prototype.fetchAPI = function (resource) {\n        return this.fetchFn(this.url + resource)\n            .then(function (res) {\n            if (!res.ok && ![badRequest, unprocessableEntity, serviceUnavailable].includes(res.status)) {\n                throw new Error(res.statusText);\n            }\n            return res;\n        })\n            .then(function (res) { return res.json(); })\n            .then(function (apiRes) {\n            if (apiRes.status === 'error') {\n                throw new Error(apiRes.error !== undefined ? apiRes.error : 'missing \"error\" field in response JSON');\n            }\n            if (apiRes.data === undefined) {\n                throw new Error('missing \"data\" field in response JSON');\n            }\n            return apiRes.data;\n        });\n    };\n    return HTTPPrometheusClient;\n}());\nexports.HTTPPrometheusClient = HTTPPrometheusClient;\nvar Cache = /** @class */ (function () {\n    function Cache(config) {\n        var maxAge = config && config.maxAge ? config.maxAge : 5 * 60 * 1000;\n        this.completeAssociation = new lru_cache_1.default(maxAge);\n        this.metricMetadata = {};\n        this.labelValues = new lru_cache_1.default(maxAge);\n        this.labelNames = [];\n        if (config === null || config === void 0 ? void 0 : config.initialMetricList) {\n            this.setLabelValues('__name__', config.initialMetricList);\n        }\n    }\n    Cache.prototype.setAssociations = function (metricName, series) {\n        var _this = this;\n        series.forEach(function (labelSet) {\n            var e_5, _a;\n            var currentAssociation = _this.completeAssociation.get(metricName);\n            if (!currentAssociation) {\n                currentAssociation = new Map();\n                _this.completeAssociation.set(metricName, currentAssociation);\n            }\n            try {\n                for (var _b = __values(Object.entries(labelSet)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                    if (key === '__name__') {\n                        continue;\n                    }\n                    var labelValues = currentAssociation.get(key);\n                    if (labelValues === undefined) {\n                        currentAssociation.set(key, new Set([value]));\n                    }\n                    else {\n                        labelValues.add(value);\n                    }\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n        });\n    };\n    Cache.prototype.setMetricMetadata = function (metadata) {\n        this.metricMetadata = metadata;\n    };\n    Cache.prototype.getMetricMetadata = function () {\n        return this.metricMetadata;\n    };\n    Cache.prototype.setLabelNames = function (labelNames) {\n        this.labelNames = labelNames;\n    };\n    Cache.prototype.getLabelNames = function (metricName) {\n        if (!metricName || metricName.length === 0) {\n            return this.labelNames;\n        }\n        var labelSet = this.completeAssociation.get(metricName);\n        return labelSet ? Array.from(labelSet.keys()) : [];\n    };\n    Cache.prototype.setLabelValues = function (labelName, labelValues) {\n        this.labelValues.set(labelName, labelValues);\n    };\n    Cache.prototype.getLabelValues = function (labelName, metricName) {\n        if (!metricName || metricName.length === 0) {\n            var result = this.labelValues.get(labelName);\n            return result ? result : [];\n        }\n        var labelSet = this.completeAssociation.get(metricName);\n        if (labelSet) {\n            var labelValues = labelSet.get(labelName);\n            return labelValues ? Array.from(labelValues) : [];\n        }\n        return [];\n    };\n    return Cache;\n}());\nvar CachedPrometheusClient = /** @class */ (function () {\n    function CachedPrometheusClient(client, config) {\n        this.client = client;\n        this.cache = new Cache(config);\n    }\n    CachedPrometheusClient.prototype.labelNames = function (metricName) {\n        var _this = this;\n        var cachedLabel = this.cache.getLabelNames(metricName);\n        if (cachedLabel && cachedLabel.length > 0) {\n            return Promise.resolve(cachedLabel);\n        }\n        if (metricName === undefined || metricName === '') {\n            return this.client.labelNames().then(function (labelNames) {\n                _this.cache.setLabelNames(labelNames);\n                return labelNames;\n            });\n        }\n        return this.series(metricName).then(function () {\n            return _this.cache.getLabelNames(metricName);\n        });\n    };\n    CachedPrometheusClient.prototype.labelValues = function (labelName, metricName) {\n        var _this = this;\n        var cachedLabel = this.cache.getLabelValues(labelName, metricName);\n        if (cachedLabel && cachedLabel.length > 0) {\n            return Promise.resolve(cachedLabel);\n        }\n        if (metricName === undefined || metricName === '') {\n            return this.client.labelValues(labelName).then(function (labelValues) {\n                _this.cache.setLabelValues(labelName, labelValues);\n                return labelValues;\n            });\n        }\n        return this.series(metricName).then(function () {\n            return _this.cache.getLabelValues(labelName, metricName);\n        });\n    };\n    CachedPrometheusClient.prototype.metricMetadata = function () {\n        var _this = this;\n        var cachedMetadata = this.cache.getMetricMetadata();\n        if (cachedMetadata && Object.keys(cachedMetadata).length > 0) {\n            return Promise.resolve(cachedMetadata);\n        }\n        return this.client.metricMetadata().then(function (metadata) {\n            _this.cache.setMetricMetadata(metadata);\n            return _this.cache.getMetricMetadata();\n        });\n    };\n    CachedPrometheusClient.prototype.series = function (metricName) {\n        var _this = this;\n        return this.client.series(metricName).then(function (series) {\n            _this.cache.setAssociations(metricName, series);\n            return series;\n        });\n    };\n    CachedPrometheusClient.prototype.metricNames = function () {\n        return this.labelValues('__name__');\n    };\n    return CachedPrometheusClient;\n}());\nexports.CachedPrometheusClient = CachedPrometheusClient;\n//# sourceMappingURL=prometheus.js.map"]},"metadata":{},"sourceType":"script"}