{"ast":null,"code":"import _classCallCheck from \"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createForOfIteratorHelper from \"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport { ViewPlugin, PluginField, EditorView } from '@codemirror/view';\nimport { Facet } from '@codemirror/state';\nvar panelConfig = Facet.define({\n  combine: function combine(configs) {\n    var topContainer, bottomContainer;\n\n    var _iterator = _createForOfIteratorHelper(configs),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var c = _step.value;\n        topContainer = topContainer || c.topContainer;\n        bottomContainer = bottomContainer || c.bottomContainer;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return {\n      topContainer: topContainer,\n      bottomContainer: bottomContainer\n    };\n  }\n});\n/**\nConfigures the panel-managing extension.\n*/\n\nfunction panels(config) {\n  return config ? [panelConfig.of(config)] : [];\n}\n/**\nGet the active panel created by the given constructor, if any.\nThis can be useful when you need access to your panels' DOM\nstructure.\n*/\n\n\nfunction getPanel(view, panel) {\n  var plugin = view.plugin(panelPlugin);\n  var index = plugin ? plugin.specs.indexOf(panel) : -1;\n  return index > -1 ? plugin.panels[index] : null;\n}\n\nvar panelPlugin = ViewPlugin.fromClass( /*#__PURE__*/function () {\n  function _class(view) {\n    _classCallCheck(this, _class);\n\n    this.input = view.state.facet(showPanel);\n    this.specs = this.input.filter(function (s) {\n      return s;\n    });\n    this.panels = this.specs.map(function (spec) {\n      return spec(view);\n    });\n    var conf = view.state.facet(panelConfig);\n    this.top = new PanelGroup(view, true, conf.topContainer);\n    this.bottom = new PanelGroup(view, false, conf.bottomContainer);\n    this.top.sync(this.panels.filter(function (p) {\n      return p.top;\n    }));\n    this.bottom.sync(this.panels.filter(function (p) {\n      return !p.top;\n    }));\n\n    var _iterator2 = _createForOfIteratorHelper(this.panels),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var p = _step2.value;\n        p.dom.classList.add(\"cm-panel\"); // FIXME drop on next breaking release\n\n        if (p.class) p.dom.classList.add(p.class);\n        if (p.mount) p.mount();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  _createClass(_class, [{\n    key: \"update\",\n    value: function update(_update) {\n      var conf = _update.state.facet(panelConfig);\n\n      if (this.top.container != conf.topContainer) {\n        this.top.sync([]);\n        this.top = new PanelGroup(_update.view, true, conf.topContainer);\n      }\n\n      if (this.bottom.container != conf.bottomContainer) {\n        this.bottom.sync([]);\n        this.bottom = new PanelGroup(_update.view, false, conf.bottomContainer);\n      }\n\n      this.top.syncClasses();\n      this.bottom.syncClasses();\n\n      var input = _update.state.facet(showPanel);\n\n      if (input != this.input) {\n        var specs = input.filter(function (x) {\n          return x;\n        });\n        var _panels = [],\n            top = [],\n            bottom = [],\n            mount = [];\n\n        var _iterator3 = _createForOfIteratorHelper(specs),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var spec = _step3.value;\n            var known = this.specs.indexOf(spec),\n                panel = void 0;\n\n            if (known < 0) {\n              panel = spec(_update.view);\n              mount.push(panel);\n            } else {\n              panel = this.panels[known];\n              if (panel.update) panel.update(_update);\n            }\n\n            _panels.push(panel);\n\n            (panel.top ? top : bottom).push(panel);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        this.specs = specs;\n        this.panels = _panels;\n        this.top.sync(top);\n        this.bottom.sync(bottom);\n\n        for (var _i = 0, _mount = mount; _i < _mount.length; _i++) {\n          var p = _mount[_i];\n          p.dom.classList.add(\"cm-panel\"); // FIXME drop on next breaking release\n\n          if (p.class) p.dom.classList.add(p.class);\n          if (p.mount) p.mount();\n        }\n      } else {\n        var _iterator4 = _createForOfIteratorHelper(this.panels),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _p = _step4.value;\n            if (_p.update) _p.update(_update);\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.top.sync([]);\n      this.bottom.sync([]);\n    }\n  }]);\n\n  return _class;\n}(), {\n  provide: PluginField.scrollMargins.from(function (value) {\n    return {\n      top: value.top.scrollMargin(),\n      bottom: value.bottom.scrollMargin()\n    };\n  })\n});\n\nvar PanelGroup = /*#__PURE__*/function () {\n  function PanelGroup(view, top, container) {\n    _classCallCheck(this, PanelGroup);\n\n    this.view = view;\n    this.top = top;\n    this.container = container;\n    this.dom = undefined;\n    this.classes = \"\";\n    this.panels = [];\n    this.syncClasses();\n  }\n\n  _createClass(PanelGroup, [{\n    key: \"sync\",\n    value: function sync(panels) {\n      this.panels = panels;\n      this.syncDOM();\n    }\n  }, {\n    key: \"syncDOM\",\n    value: function syncDOM() {\n      if (this.panels.length == 0) {\n        if (this.dom) {\n          this.dom.remove();\n          this.dom = undefined;\n        }\n\n        return;\n      }\n\n      if (!this.dom) {\n        this.dom = document.createElement(\"div\");\n        this.dom.className = this.top ? \"cm-panels cm-panels-top\" : \"cm-panels cm-panels-bottom\";\n        this.dom.style[this.top ? \"top\" : \"bottom\"] = \"0\";\n        var parent = this.container || this.view.dom;\n        parent.insertBefore(this.dom, this.top ? parent.firstChild : null);\n      }\n\n      var curDOM = this.dom.firstChild;\n\n      var _iterator5 = _createForOfIteratorHelper(this.panels),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var panel = _step5.value;\n\n          if (panel.dom.parentNode == this.dom) {\n            while (curDOM != panel.dom) {\n              curDOM = rm(curDOM);\n            }\n\n            curDOM = curDOM.nextSibling;\n          } else {\n            this.dom.insertBefore(panel.dom, curDOM);\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      while (curDOM) {\n        curDOM = rm(curDOM);\n      }\n    }\n  }, {\n    key: \"scrollMargin\",\n    value: function scrollMargin() {\n      return !this.dom || this.container ? 0 : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - this.view.scrollDOM.getBoundingClientRect().top : this.view.scrollDOM.getBoundingClientRect().bottom - this.dom.getBoundingClientRect().top);\n    }\n  }, {\n    key: \"syncClasses\",\n    value: function syncClasses() {\n      if (!this.container || this.classes == this.view.themeClasses) return;\n\n      var _iterator6 = _createForOfIteratorHelper(this.classes.split(\" \")),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var cls = _step6.value;\n          if (cls) this.container.classList.remove(cls);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      var _iterator7 = _createForOfIteratorHelper((this.classes = this.view.themeClasses).split(\" \")),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _cls = _step7.value;\n          if (_cls) this.container.classList.add(_cls);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n    }\n  }]);\n\n  return PanelGroup;\n}();\n\nfunction rm(node) {\n  var next = node.nextSibling;\n  node.remove();\n  return next;\n}\n\nvar baseTheme = EditorView.baseTheme({\n  \".cm-panels\": {\n    boxSizing: \"border-box\",\n    position: \"sticky\",\n    left: 0,\n    right: 0\n  },\n  \"&light .cm-panels\": {\n    backgroundColor: \"#f5f5f5\",\n    color: \"black\"\n  },\n  \"&light .cm-panels-top\": {\n    borderBottom: \"1px solid #ddd\"\n  },\n  \"&light .cm-panels-bottom\": {\n    borderTop: \"1px solid #ddd\"\n  },\n  \"&dark .cm-panels\": {\n    backgroundColor: \"#333338\",\n    color: \"white\"\n  }\n});\n/**\nOpening a panel is done by providing a constructor function for\nthe panel through this facet. (The panel is closed again when its\nconstructor is no longer provided.) Values of `null` are ignored.\n*/\n\nvar showPanel = Facet.define({\n  enables: [panelPlugin, baseTheme]\n});\nexport { getPanel, panels, showPanel };","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/@codemirror/panel/dist/index.js"],"names":["ViewPlugin","PluginField","EditorView","Facet","panelConfig","define","combine","configs","topContainer","bottomContainer","c","panels","config","of","getPanel","view","panel","plugin","panelPlugin","index","specs","indexOf","fromClass","input","state","facet","showPanel","filter","s","map","spec","conf","top","PanelGroup","bottom","sync","p","dom","classList","add","class","mount","update","container","syncClasses","x","known","push","provide","scrollMargins","from","value","scrollMargin","undefined","classes","syncDOM","length","remove","document","createElement","className","style","parent","insertBefore","firstChild","curDOM","parentNode","rm","nextSibling","Math","max","getBoundingClientRect","scrollDOM","themeClasses","split","cls","node","next","baseTheme","boxSizing","position","left","right","backgroundColor","color","borderBottom","borderTop","enables"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,IAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC7BC,EAAAA,OAD6B,mBACrBC,OADqB,EACZ;AACb,QAAIC,YAAJ,EAAkBC,eAAlB;;AADa,+CAECF,OAFD;AAAA;;AAAA;AAEb,0DAAuB;AAAA,YAAdG,CAAc;AACnBF,QAAAA,YAAY,GAAGA,YAAY,IAAIE,CAAC,CAACF,YAAjC;AACAC,QAAAA,eAAe,GAAGA,eAAe,IAAIC,CAAC,CAACD,eAAvC;AACH;AALY;AAAA;AAAA;AAAA;AAAA;;AAMb,WAAO;AAAED,MAAAA,YAAY,EAAZA,YAAF;AAAgBC,MAAAA,eAAe,EAAfA;AAAhB,KAAP;AACH;AAR4B,CAAb,CAApB;AAUA;AACA;AACA;;AACA,SAASE,MAAT,CAAgBC,MAAhB,EAAwB;AACpB,SAAOA,MAAM,GAAG,CAACR,WAAW,CAACS,EAAZ,CAAeD,MAAf,CAAD,CAAH,GAA8B,EAA3C;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASE,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;AAC3B,MAAIC,MAAM,GAAGF,IAAI,CAACE,MAAL,CAAYC,WAAZ,CAAb;AACA,MAAIC,KAAK,GAAGF,MAAM,GAAGA,MAAM,CAACG,KAAP,CAAaC,OAAb,CAAqBL,KAArB,CAAH,GAAiC,CAAC,CAApD;AACA,SAAOG,KAAK,GAAG,CAAC,CAAT,GAAaF,MAAM,CAACN,MAAP,CAAcQ,KAAd,CAAb,GAAoC,IAA3C;AACH;;AACD,IAAMD,WAAW,GAAGlB,UAAU,CAACsB,SAAX;AAChB,kBAAYP,IAAZ,EAAkB;AAAA;;AACd,SAAKQ,KAAL,GAAaR,IAAI,CAACS,KAAL,CAAWC,KAAX,CAAiBC,SAAjB,CAAb;AACA,SAAKN,KAAL,GAAa,KAAKG,KAAL,CAAWI,MAAX,CAAkB,UAAAC,CAAC;AAAA,aAAIA,CAAJ;AAAA,KAAnB,CAAb;AACA,SAAKjB,MAAL,GAAc,KAAKS,KAAL,CAAWS,GAAX,CAAe,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACf,IAAD,CAAR;AAAA,KAAnB,CAAd;AACA,QAAIgB,IAAI,GAAGhB,IAAI,CAACS,KAAL,CAAWC,KAAX,CAAiBrB,WAAjB,CAAX;AACA,SAAK4B,GAAL,GAAW,IAAIC,UAAJ,CAAelB,IAAf,EAAqB,IAArB,EAA2BgB,IAAI,CAACvB,YAAhC,CAAX;AACA,SAAK0B,MAAL,GAAc,IAAID,UAAJ,CAAelB,IAAf,EAAqB,KAArB,EAA4BgB,IAAI,CAACtB,eAAjC,CAAd;AACA,SAAKuB,GAAL,CAASG,IAAT,CAAc,KAAKxB,MAAL,CAAYgB,MAAZ,CAAmB,UAAAS,CAAC;AAAA,aAAIA,CAAC,CAACJ,GAAN;AAAA,KAApB,CAAd;AACA,SAAKE,MAAL,CAAYC,IAAZ,CAAiB,KAAKxB,MAAL,CAAYgB,MAAZ,CAAmB,UAAAS,CAAC;AAAA,aAAI,CAACA,CAAC,CAACJ,GAAP;AAAA,KAApB,CAAjB;;AARc,gDASA,KAAKrB,MATL;AAAA;;AAAA;AASd,6DAA2B;AAAA,YAAlByB,CAAkB;AACvBA,QAAAA,CAAC,CAACC,GAAF,CAAMC,SAAN,CAAgBC,GAAhB,CAAoB,UAApB,EADuB,CAEvB;;AACA,YAAIH,CAAC,CAACI,KAAN,EACIJ,CAAC,CAACC,GAAF,CAAMC,SAAN,CAAgBC,GAAhB,CAAoBH,CAAC,CAACI,KAAtB;AACJ,YAAIJ,CAAC,CAACK,KAAN,EACIL,CAAC,CAACK,KAAF;AACP;AAhBa;AAAA;AAAA;AAAA;AAAA;AAiBjB;;AAlBe;AAAA;AAAA,WAmBhB,gBAAOC,OAAP,EAAe;AACX,UAAIX,IAAI,GAAGW,OAAM,CAAClB,KAAP,CAAaC,KAAb,CAAmBrB,WAAnB,CAAX;;AACA,UAAI,KAAK4B,GAAL,CAASW,SAAT,IAAsBZ,IAAI,CAACvB,YAA/B,EAA6C;AACzC,aAAKwB,GAAL,CAASG,IAAT,CAAc,EAAd;AACA,aAAKH,GAAL,GAAW,IAAIC,UAAJ,CAAeS,OAAM,CAAC3B,IAAtB,EAA4B,IAA5B,EAAkCgB,IAAI,CAACvB,YAAvC,CAAX;AACH;;AACD,UAAI,KAAK0B,MAAL,CAAYS,SAAZ,IAAyBZ,IAAI,CAACtB,eAAlC,EAAmD;AAC/C,aAAKyB,MAAL,CAAYC,IAAZ,CAAiB,EAAjB;AACA,aAAKD,MAAL,GAAc,IAAID,UAAJ,CAAeS,OAAM,CAAC3B,IAAtB,EAA4B,KAA5B,EAAmCgB,IAAI,CAACtB,eAAxC,CAAd;AACH;;AACD,WAAKuB,GAAL,CAASY,WAAT;AACA,WAAKV,MAAL,CAAYU,WAAZ;;AACA,UAAIrB,KAAK,GAAGmB,OAAM,CAAClB,KAAP,CAAaC,KAAb,CAAmBC,SAAnB,CAAZ;;AACA,UAAIH,KAAK,IAAI,KAAKA,KAAlB,EAAyB;AACrB,YAAIH,KAAK,GAAGG,KAAK,CAACI,MAAN,CAAa,UAAAkB,CAAC;AAAA,iBAAIA,CAAJ;AAAA,SAAd,CAAZ;AACA,YAAIlC,OAAM,GAAG,EAAb;AAAA,YAAiBqB,GAAG,GAAG,EAAvB;AAAA,YAA2BE,MAAM,GAAG,EAApC;AAAA,YAAwCO,KAAK,GAAG,EAAhD;;AAFqB,oDAGJrB,KAHI;AAAA;;AAAA;AAGrB,iEAAwB;AAAA,gBAAfU,IAAe;AACpB,gBAAIgB,KAAK,GAAG,KAAK1B,KAAL,CAAWC,OAAX,CAAmBS,IAAnB,CAAZ;AAAA,gBAAsCd,KAAK,SAA3C;;AACA,gBAAI8B,KAAK,GAAG,CAAZ,EAAe;AACX9B,cAAAA,KAAK,GAAGc,IAAI,CAACY,OAAM,CAAC3B,IAAR,CAAZ;AACA0B,cAAAA,KAAK,CAACM,IAAN,CAAW/B,KAAX;AACH,aAHD,MAIK;AACDA,cAAAA,KAAK,GAAG,KAAKL,MAAL,CAAYmC,KAAZ,CAAR;AACA,kBAAI9B,KAAK,CAAC0B,MAAV,EACI1B,KAAK,CAAC0B,MAAN,CAAaA,OAAb;AACP;;AACD/B,YAAAA,OAAM,CAACoC,IAAP,CAAY/B,KAAZ;;AACA,aAACA,KAAK,CAACgB,GAAN,GAAYA,GAAZ,GAAkBE,MAAnB,EAA2Ba,IAA3B,CAAgC/B,KAAhC;AACH;AAhBoB;AAAA;AAAA;AAAA;AAAA;;AAiBrB,aAAKI,KAAL,GAAaA,KAAb;AACA,aAAKT,MAAL,GAAcA,OAAd;AACA,aAAKqB,GAAL,CAASG,IAAT,CAAcH,GAAd;AACA,aAAKE,MAAL,CAAYC,IAAZ,CAAiBD,MAAjB;;AACA,kCAAcO,KAAd,4BAAqB;AAAhB,cAAIL,CAAC,aAAL;AACDA,UAAAA,CAAC,CAACC,GAAF,CAAMC,SAAN,CAAgBC,GAAhB,CAAoB,UAApB,EADiB,CAEjB;;AACA,cAAIH,CAAC,CAACI,KAAN,EACIJ,CAAC,CAACC,GAAF,CAAMC,SAAN,CAAgBC,GAAhB,CAAoBH,CAAC,CAACI,KAAtB;AACJ,cAAIJ,CAAC,CAACK,KAAN,EACIL,CAAC,CAACK,KAAF;AACP;AACJ,OA7BD,MA8BK;AAAA,oDACa,KAAK9B,MADlB;AAAA;;AAAA;AACD;AAAA,gBAASyB,EAAT;AACI,gBAAIA,EAAC,CAACM,MAAN,EACIN,EAAC,CAACM,MAAF,CAASA,OAAT;AAFR;AADC;AAAA;AAAA;AAAA;AAAA;AAIJ;AACJ;AAnEe;AAAA;AAAA,WAoEhB,mBAAU;AACN,WAAKV,GAAL,CAASG,IAAT,CAAc,EAAd;AACA,WAAKD,MAAL,CAAYC,IAAZ,CAAiB,EAAjB;AACH;AAvEe;;AAAA;AAAA,KAwEjB;AACCa,EAAAA,OAAO,EAAE/C,WAAW,CAACgD,aAAZ,CAA0BC,IAA1B,CAA+B,UAAAC,KAAK;AAAA,WAAK;AAAEnB,MAAAA,GAAG,EAAEmB,KAAK,CAACnB,GAAN,CAAUoB,YAAV,EAAP;AAAiClB,MAAAA,MAAM,EAAEiB,KAAK,CAACjB,MAAN,CAAakB,YAAb;AAAzC,KAAL;AAAA,GAApC;AADV,CAxEiB,CAApB;;IA2EMnB,U;AACF,sBAAYlB,IAAZ,EAAkBiB,GAAlB,EAAuBW,SAAvB,EAAkC;AAAA;;AAC9B,SAAK5B,IAAL,GAAYA,IAAZ;AACA,SAAKiB,GAAL,GAAWA,GAAX;AACA,SAAKW,SAAL,GAAiBA,SAAjB;AACA,SAAKN,GAAL,GAAWgB,SAAX;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAK3C,MAAL,GAAc,EAAd;AACA,SAAKiC,WAAL;AACH;;;;WACD,cAAKjC,MAAL,EAAa;AACT,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAK4C,OAAL;AACH;;;WACD,mBAAU;AACN,UAAI,KAAK5C,MAAL,CAAY6C,MAAZ,IAAsB,CAA1B,EAA6B;AACzB,YAAI,KAAKnB,GAAT,EAAc;AACV,eAAKA,GAAL,CAASoB,MAAT;AACA,eAAKpB,GAAL,GAAWgB,SAAX;AACH;;AACD;AACH;;AACD,UAAI,CAAC,KAAKhB,GAAV,EAAe;AACX,aAAKA,GAAL,GAAWqB,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;AACA,aAAKtB,GAAL,CAASuB,SAAT,GAAqB,KAAK5B,GAAL,GAAW,yBAAX,GAAuC,4BAA5D;AACA,aAAKK,GAAL,CAASwB,KAAT,CAAe,KAAK7B,GAAL,GAAW,KAAX,GAAmB,QAAlC,IAA8C,GAA9C;AACA,YAAI8B,MAAM,GAAG,KAAKnB,SAAL,IAAkB,KAAK5B,IAAL,CAAUsB,GAAzC;AACAyB,QAAAA,MAAM,CAACC,YAAP,CAAoB,KAAK1B,GAAzB,EAA8B,KAAKL,GAAL,GAAW8B,MAAM,CAACE,UAAlB,GAA+B,IAA7D;AACH;;AACD,UAAIC,MAAM,GAAG,KAAK5B,GAAL,CAAS2B,UAAtB;;AAfM,kDAgBY,KAAKrD,MAhBjB;AAAA;;AAAA;AAgBN,+DAA+B;AAAA,cAAtBK,KAAsB;;AAC3B,cAAIA,KAAK,CAACqB,GAAN,CAAU6B,UAAV,IAAwB,KAAK7B,GAAjC,EAAsC;AAClC,mBAAO4B,MAAM,IAAIjD,KAAK,CAACqB,GAAvB;AACI4B,cAAAA,MAAM,GAAGE,EAAE,CAACF,MAAD,CAAX;AADJ;;AAEAA,YAAAA,MAAM,GAAGA,MAAM,CAACG,WAAhB;AACH,WAJD,MAKK;AACD,iBAAK/B,GAAL,CAAS0B,YAAT,CAAsB/C,KAAK,CAACqB,GAA5B,EAAiC4B,MAAjC;AACH;AACJ;AAzBK;AAAA;AAAA;AAAA;AAAA;;AA0BN,aAAOA,MAAP;AACIA,QAAAA,MAAM,GAAGE,EAAE,CAACF,MAAD,CAAX;AADJ;AAEH;;;WACD,wBAAe;AACX,aAAO,CAAC,KAAK5B,GAAN,IAAa,KAAKM,SAAlB,GAA8B,CAA9B,GACD0B,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKtC,GAAL,GAAW,KAAKK,GAAL,CAASkC,qBAAT,GAAiCrC,MAAjC,GAA0C,KAAKnB,IAAL,CAAUyD,SAAV,CAAoBD,qBAApB,GAA4CvC,GAAjG,GACR,KAAKjB,IAAL,CAAUyD,SAAV,CAAoBD,qBAApB,GAA4CrC,MAA5C,GAAqD,KAAKG,GAAL,CAASkC,qBAAT,GAAiCvC,GAD1F,CADN;AAGH;;;WACD,uBAAc;AACV,UAAI,CAAC,KAAKW,SAAN,IAAmB,KAAKW,OAAL,IAAgB,KAAKvC,IAAL,CAAU0D,YAAjD,EACI;;AAFM,kDAGM,KAAKnB,OAAL,CAAaoB,KAAb,CAAmB,GAAnB,CAHN;AAAA;;AAAA;AAGV;AAAA,cAASC,GAAT;AACI,cAAIA,GAAJ,EACI,KAAKhC,SAAL,CAAeL,SAAf,CAAyBmB,MAAzB,CAAgCkB,GAAhC;AAFR;AAHU;AAAA;AAAA;AAAA;AAAA;;AAAA,kDAMM,CAAC,KAAKrB,OAAL,GAAe,KAAKvC,IAAL,CAAU0D,YAA1B,EAAwCC,KAAxC,CAA8C,GAA9C,CANN;AAAA;;AAAA;AAMV;AAAA,cAASC,IAAT;AACI,cAAIA,IAAJ,EACI,KAAKhC,SAAL,CAAeL,SAAf,CAAyBC,GAAzB,CAA6BoC,IAA7B;AAFR;AANU;AAAA;AAAA;AAAA;AAAA;AASb;;;;;;AAEL,SAASR,EAAT,CAAYS,IAAZ,EAAkB;AACd,MAAIC,IAAI,GAAGD,IAAI,CAACR,WAAhB;AACAQ,EAAAA,IAAI,CAACnB,MAAL;AACA,SAAOoB,IAAP;AACH;;AACD,IAAMC,SAAS,GAAG5E,UAAU,CAAC4E,SAAX,CAAqB;AACnC,gBAAc;AACVC,IAAAA,SAAS,EAAE,YADD;AAEVC,IAAAA,QAAQ,EAAE,QAFA;AAGVC,IAAAA,IAAI,EAAE,CAHI;AAIVC,IAAAA,KAAK,EAAE;AAJG,GADqB;AAOnC,uBAAqB;AACjBC,IAAAA,eAAe,EAAE,SADA;AAEjBC,IAAAA,KAAK,EAAE;AAFU,GAPc;AAWnC,2BAAyB;AACrBC,IAAAA,YAAY,EAAE;AADO,GAXU;AAcnC,8BAA4B;AACxBC,IAAAA,SAAS,EAAE;AADa,GAdO;AAiBnC,sBAAoB;AAChBH,IAAAA,eAAe,EAAE,SADD;AAEhBC,IAAAA,KAAK,EAAE;AAFS;AAjBe,CAArB,CAAlB;AAsBA;AACA;AACA;AACA;AACA;;AACA,IAAM1D,SAAS,GAAGvB,KAAK,CAACE,MAAN,CAAa;AAC3BkF,EAAAA,OAAO,EAAE,CAACrE,WAAD,EAAc4D,SAAd;AADkB,CAAb,CAAlB;AAIA,SAAShE,QAAT,EAAmBH,MAAnB,EAA2Be,SAA3B","sourcesContent":["import { ViewPlugin, PluginField, EditorView } from '@codemirror/view';\nimport { Facet } from '@codemirror/state';\n\nconst panelConfig = Facet.define({\n    combine(configs) {\n        let topContainer, bottomContainer;\n        for (let c of configs) {\n            topContainer = topContainer || c.topContainer;\n            bottomContainer = bottomContainer || c.bottomContainer;\n        }\n        return { topContainer, bottomContainer };\n    }\n});\n/**\nConfigures the panel-managing extension.\n*/\nfunction panels(config) {\n    return config ? [panelConfig.of(config)] : [];\n}\n/**\nGet the active panel created by the given constructor, if any.\nThis can be useful when you need access to your panels' DOM\nstructure.\n*/\nfunction getPanel(view, panel) {\n    let plugin = view.plugin(panelPlugin);\n    let index = plugin ? plugin.specs.indexOf(panel) : -1;\n    return index > -1 ? plugin.panels[index] : null;\n}\nconst panelPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.input = view.state.facet(showPanel);\n        this.specs = this.input.filter(s => s);\n        this.panels = this.specs.map(spec => spec(view));\n        let conf = view.state.facet(panelConfig);\n        this.top = new PanelGroup(view, true, conf.topContainer);\n        this.bottom = new PanelGroup(view, false, conf.bottomContainer);\n        this.top.sync(this.panels.filter(p => p.top));\n        this.bottom.sync(this.panels.filter(p => !p.top));\n        for (let p of this.panels) {\n            p.dom.classList.add(\"cm-panel\");\n            // FIXME drop on next breaking release\n            if (p.class)\n                p.dom.classList.add(p.class);\n            if (p.mount)\n                p.mount();\n        }\n    }\n    update(update) {\n        let conf = update.state.facet(panelConfig);\n        if (this.top.container != conf.topContainer) {\n            this.top.sync([]);\n            this.top = new PanelGroup(update.view, true, conf.topContainer);\n        }\n        if (this.bottom.container != conf.bottomContainer) {\n            this.bottom.sync([]);\n            this.bottom = new PanelGroup(update.view, false, conf.bottomContainer);\n        }\n        this.top.syncClasses();\n        this.bottom.syncClasses();\n        let input = update.state.facet(showPanel);\n        if (input != this.input) {\n            let specs = input.filter(x => x);\n            let panels = [], top = [], bottom = [], mount = [];\n            for (let spec of specs) {\n                let known = this.specs.indexOf(spec), panel;\n                if (known < 0) {\n                    panel = spec(update.view);\n                    mount.push(panel);\n                }\n                else {\n                    panel = this.panels[known];\n                    if (panel.update)\n                        panel.update(update);\n                }\n                panels.push(panel);\n                (panel.top ? top : bottom).push(panel);\n            }\n            this.specs = specs;\n            this.panels = panels;\n            this.top.sync(top);\n            this.bottom.sync(bottom);\n            for (let p of mount) {\n                p.dom.classList.add(\"cm-panel\");\n                // FIXME drop on next breaking release\n                if (p.class)\n                    p.dom.classList.add(p.class);\n                if (p.mount)\n                    p.mount();\n            }\n        }\n        else {\n            for (let p of this.panels)\n                if (p.update)\n                    p.update(update);\n        }\n    }\n    destroy() {\n        this.top.sync([]);\n        this.bottom.sync([]);\n    }\n}, {\n    provide: PluginField.scrollMargins.from(value => ({ top: value.top.scrollMargin(), bottom: value.bottom.scrollMargin() }))\n});\nclass PanelGroup {\n    constructor(view, top, container) {\n        this.view = view;\n        this.top = top;\n        this.container = container;\n        this.dom = undefined;\n        this.classes = \"\";\n        this.panels = [];\n        this.syncClasses();\n    }\n    sync(panels) {\n        this.panels = panels;\n        this.syncDOM();\n    }\n    syncDOM() {\n        if (this.panels.length == 0) {\n            if (this.dom) {\n                this.dom.remove();\n                this.dom = undefined;\n            }\n            return;\n        }\n        if (!this.dom) {\n            this.dom = document.createElement(\"div\");\n            this.dom.className = this.top ? \"cm-panels cm-panels-top\" : \"cm-panels cm-panels-bottom\";\n            this.dom.style[this.top ? \"top\" : \"bottom\"] = \"0\";\n            let parent = this.container || this.view.dom;\n            parent.insertBefore(this.dom, this.top ? parent.firstChild : null);\n        }\n        let curDOM = this.dom.firstChild;\n        for (let panel of this.panels) {\n            if (panel.dom.parentNode == this.dom) {\n                while (curDOM != panel.dom)\n                    curDOM = rm(curDOM);\n                curDOM = curDOM.nextSibling;\n            }\n            else {\n                this.dom.insertBefore(panel.dom, curDOM);\n            }\n        }\n        while (curDOM)\n            curDOM = rm(curDOM);\n    }\n    scrollMargin() {\n        return !this.dom || this.container ? 0\n            : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - this.view.scrollDOM.getBoundingClientRect().top\n                : this.view.scrollDOM.getBoundingClientRect().bottom - this.dom.getBoundingClientRect().top);\n    }\n    syncClasses() {\n        if (!this.container || this.classes == this.view.themeClasses)\n            return;\n        for (let cls of this.classes.split(\" \"))\n            if (cls)\n                this.container.classList.remove(cls);\n        for (let cls of (this.classes = this.view.themeClasses).split(\" \"))\n            if (cls)\n                this.container.classList.add(cls);\n    }\n}\nfunction rm(node) {\n    let next = node.nextSibling;\n    node.remove();\n    return next;\n}\nconst baseTheme = EditorView.baseTheme({\n    \".cm-panels\": {\n        boxSizing: \"border-box\",\n        position: \"sticky\",\n        left: 0,\n        right: 0\n    },\n    \"&light .cm-panels\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"black\"\n    },\n    \"&light .cm-panels-top\": {\n        borderBottom: \"1px solid #ddd\"\n    },\n    \"&light .cm-panels-bottom\": {\n        borderTop: \"1px solid #ddd\"\n    },\n    \"&dark .cm-panels\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    }\n});\n/**\nOpening a panel is done by providing a constructor function for\nthe panel through this facet. (The panel is closed again when its\nconstructor is no longer provided.) Values of `null` are ignored.\n*/\nconst showPanel = Facet.define({\n    enables: [panelPlugin, baseTheme]\n});\n\nexport { getPanel, panels, showPanel };\n"]},"metadata":{},"sourceType":"module"}