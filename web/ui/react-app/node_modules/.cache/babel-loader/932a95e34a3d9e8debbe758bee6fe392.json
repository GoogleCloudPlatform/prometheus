{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('url'),\n    fileURLToPath = _require.fileURLToPath,\n    pathToFileURL = _require.pathToFileURL;\n\nvar _require2 = require('path'),\n    resolve = _require2.resolve,\n    isAbsolute = _require2.isAbsolute;\n\nvar _require3 = require('source-map'),\n    SourceMapConsumer = _require3.SourceMapConsumer,\n    SourceMapGenerator = _require3.SourceMapGenerator;\n\nvar _require4 = require('nanoid/non-secure'),\n    nanoid = _require4.nanoid;\n\nvar terminalHighlight = require('./terminal-highlight');\n\nvar CssSyntaxError = require('./css-syntax-error');\n\nvar PreviousMap = require('./previous-map');\n\nvar fromOffsetCache = Symbol('fromOffset cache');\nvar sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\nvar pathAvailable = Boolean(resolve && isAbsolute);\n\nvar Input = /*#__PURE__*/function () {\n  function Input(css) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Input);\n\n    if (css === null || typeof css === 'undefined' || typeof css === 'object' && !css.toString) {\n      throw new Error(\"PostCSS received \".concat(css, \" instead of CSS string\"));\n    }\n\n    this.css = css.toString();\n\n    if (this.css[0] === \"\\uFEFF\" || this.css[0] === \"\\uFFFE\") {\n      this.hasBOM = true;\n      this.css = this.css.slice(1);\n    } else {\n      this.hasBOM = false;\n    }\n\n    if (opts.from) {\n      if (!pathAvailable || /^\\w+:\\/\\//.test(opts.from) || isAbsolute(opts.from)) {\n        this.file = opts.from;\n      } else {\n        this.file = resolve(opts.from);\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      var map = new PreviousMap(this.css, opts);\n\n      if (map.text) {\n        this.map = map;\n        var file = map.consumer().file;\n        if (!this.file && file) this.file = this.mapResolve(file);\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>';\n    }\n\n    if (this.map) this.map.file = this.from;\n  }\n\n  _createClass(Input, [{\n    key: \"fromOffset\",\n    value: function fromOffset(offset) {\n      var lastLine, lineToIndex;\n\n      if (!this[fromOffsetCache]) {\n        var lines = this.css.split('\\n');\n        lineToIndex = new Array(lines.length);\n        var prevIndex = 0;\n\n        for (var i = 0, l = lines.length; i < l; i++) {\n          lineToIndex[i] = prevIndex;\n          prevIndex += lines[i].length + 1;\n        }\n\n        this[fromOffsetCache] = lineToIndex;\n      } else {\n        lineToIndex = this[fromOffsetCache];\n      }\n\n      lastLine = lineToIndex[lineToIndex.length - 1];\n      var min = 0;\n\n      if (offset >= lastLine) {\n        min = lineToIndex.length - 1;\n      } else {\n        var max = lineToIndex.length - 2;\n        var mid;\n\n        while (min < max) {\n          mid = min + (max - min >> 1);\n\n          if (offset < lineToIndex[mid]) {\n            max = mid - 1;\n          } else if (offset >= lineToIndex[mid + 1]) {\n            min = mid + 1;\n          } else {\n            min = mid;\n            break;\n          }\n        }\n      }\n\n      return {\n        line: min + 1,\n        col: offset - lineToIndex[min] + 1\n      };\n    }\n  }, {\n    key: \"error\",\n    value: function error(message, line, column) {\n      var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var result;\n\n      if (!column) {\n        var pos = this.fromOffset(line);\n        line = pos.line;\n        column = pos.col;\n      }\n\n      var origin = this.origin(line, column);\n\n      if (origin) {\n        result = new CssSyntaxError(message, origin.line, origin.column, origin.source, origin.file, opts.plugin);\n      } else {\n        result = new CssSyntaxError(message, line, column, this.css, this.file, opts.plugin);\n      }\n\n      result.input = {\n        line: line,\n        column: column,\n        source: this.css\n      };\n\n      if (this.file) {\n        if (pathToFileURL) {\n          result.input.url = pathToFileURL(this.file).toString();\n        }\n\n        result.input.file = this.file;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"origin\",\n    value: function origin(line, column) {\n      if (!this.map) return false;\n      var consumer = this.map.consumer();\n      var from = consumer.originalPositionFor({\n        line: line,\n        column: column\n      });\n      if (!from.source) return false;\n      var fromUrl;\n\n      if (isAbsolute(from.source)) {\n        fromUrl = pathToFileURL(from.source);\n      } else {\n        fromUrl = new URL(from.source, this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile));\n      }\n\n      var result = {\n        url: fromUrl.toString(),\n        line: from.line,\n        column: from.column\n      };\n\n      if (fromUrl.protocol === 'file:') {\n        if (fileURLToPath) {\n          result.file = fileURLToPath(fromUrl);\n        } else {\n          // istanbul ignore next\n          throw new Error(\"file: protocol is not available in this PostCSS build\");\n        }\n      }\n\n      var source = consumer.sourceContentFor(from.source);\n      if (source) result.source = source;\n      return result;\n    }\n  }, {\n    key: \"mapResolve\",\n    value: function mapResolve(file) {\n      if (/^\\w+:\\/\\//.test(file)) {\n        return file;\n      }\n\n      return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file);\n    }\n  }, {\n    key: \"from\",\n    get: function get() {\n      return this.file || this.id;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = {};\n\n      for (var _i = 0, _arr = ['hasBOM', 'css', 'file', 'id']; _i < _arr.length; _i++) {\n        var name = _arr[_i];\n\n        if (this[name] != null) {\n          json[name] = this[name];\n        }\n      }\n\n      if (this.map) {\n        json.map = _objectSpread({}, this.map);\n\n        if (json.map.consumerCache) {\n          json.map.consumerCache = undefined;\n        }\n      }\n\n      return json;\n    }\n  }]);\n\n  return Input;\n}();\n\nmodule.exports = Input;\nInput.default = Input;\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input);\n}","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/sanitize-html/node_modules/postcss/lib/input.js"],"names":["require","fileURLToPath","pathToFileURL","resolve","isAbsolute","SourceMapConsumer","SourceMapGenerator","nanoid","terminalHighlight","CssSyntaxError","PreviousMap","fromOffsetCache","Symbol","sourceMapAvailable","Boolean","pathAvailable","Input","css","opts","toString","Error","hasBOM","slice","from","test","file","map","text","consumer","mapResolve","id","offset","lastLine","lineToIndex","lines","split","Array","length","prevIndex","i","l","min","max","mid","line","col","message","column","result","pos","fromOffset","origin","source","plugin","input","url","originalPositionFor","fromUrl","URL","sourceRoot","mapFile","protocol","sourceContentFor","root","json","name","consumerCache","undefined","module","exports","default","registerInput"],"mappings":"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","sourcesContent":["'use strict'\n\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { resolve, isAbsolute } = require('path')\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffset cache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      line: min + 1,\n      col: offset - lineToIndex[min] + 1\n    }\n  }\n\n  error(message, line, column, opts = {}) {\n    let result\n    if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n    let origin = this.origin(line, column)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.line,\n        origin.column,\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        line,\n        column,\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { line, column, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  origin(line, column) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ line, column })\n    if (!from.source) return false\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        // istanbul ignore next\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n"]},"metadata":{},"sourceType":"script"}