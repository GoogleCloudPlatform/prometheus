{"ast":null,"code":"import React from'react';import{Table}from'reactstrap';import{withStatusIndicator}from'../../components/withStatusIndicator';import{useFetch}from'../../hooks/useFetch';import{usePathPrefix}from'../../contexts/PathPrefixContext';import{API_PATH}from'../../constants/constants';export var FlagsContent=function FlagsContent(_ref){var _ref$data=_ref.data,data=_ref$data===void 0?{}:_ref$data;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Command-Line Flags\"),/*#__PURE__*/React.createElement(Table,{bordered:true,size:\"sm\",striped:true},/*#__PURE__*/React.createElement(\"tbody\",null,Object.keys(data).map(function(key){return/*#__PURE__*/React.createElement(\"tr\",{key:key},/*#__PURE__*/React.createElement(\"th\",null,key),/*#__PURE__*/React.createElement(\"td\",null,data[key]));}))));};var FlagsWithStatusIndicator=withStatusIndicator(FlagsContent);FlagsContent.displayName='Flags';var Flags=function Flags(){var pathPrefix=usePathPrefix();var _useFetch=useFetch(\"\".concat(pathPrefix,\"/\").concat(API_PATH,\"/status/flags\")),response=_useFetch.response,error=_useFetch.error,isLoading=_useFetch.isLoading;return/*#__PURE__*/React.createElement(FlagsWithStatusIndicator,{data:response.data,error:error,isLoading:isLoading});};export default Flags;","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/src/pages/flags/Flags.tsx"],"names":["React","Table","withStatusIndicator","useFetch","usePathPrefix","API_PATH","FlagsContent","data","Object","keys","map","key","FlagsWithStatusIndicator","displayName","Flags","pathPrefix","response","error","isLoading"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAA0B,OAA1B,CAEA,OAASC,KAAT,KAAsB,YAAtB,CACA,OAASC,mBAAT,KAAoC,sCAApC,CACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,OAASC,aAAT,KAA8B,kCAA9B,CACA,OAASC,QAAT,KAAyB,2BAAzB,CAUA,MAAO,IAAMC,CAAAA,YAA4B,CAAG,QAA/BA,CAAAA,YAA+B,MAAmB,oBAAhBC,IAAgB,CAAhBA,IAAgB,oBAAT,EAAS,WAC7D,mBACE,qDACE,mDADF,cAEE,oBAAC,KAAD,EAAO,QAAQ,KAAf,CAAgB,IAAI,CAAC,IAArB,CAA0B,OAAO,KAAjC,eACE,iCACGC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,GAAlB,CAAsB,SAAAC,GAAG,qBACxB,0BAAI,GAAG,CAAEA,GAAT,eACE,8BAAKA,GAAL,CADF,cAEE,8BAAKJ,IAAI,CAACI,GAAD,CAAT,CAFF,CADwB,EAAzB,CADH,CADF,CAFF,CADF,CAeD,CAhBM,CAiBP,GAAMC,CAAAA,wBAAwB,CAAGV,mBAAmB,CAACI,YAAD,CAApD,CAEAA,YAAY,CAACO,WAAb,CAA2B,OAA3B,CAEA,GAAMC,CAAAA,KAA8B,CAAG,QAAjCA,CAAAA,KAAiC,EAAM,CAC3C,GAAMC,CAAAA,UAAU,CAAGX,aAAa,EAAhC,CACA,cAAuCD,QAAQ,WAAaY,UAAb,aAA2BV,QAA3B,kBAA/C,CAAQW,QAAR,WAAQA,QAAR,CAAkBC,KAAlB,WAAkBA,KAAlB,CAAyBC,SAAzB,WAAyBA,SAAzB,CACA,mBAAO,oBAAC,wBAAD,EAA0B,IAAI,CAAEF,QAAQ,CAACT,IAAzC,CAA+C,KAAK,CAAEU,KAAtD,CAA6D,SAAS,CAAEC,SAAxE,EAAP,CACD,CAJD,CAMA,cAAeJ,CAAAA,KAAf","sourcesContent":["import React, { FC } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { Table } from 'reactstrap';\nimport { withStatusIndicator } from '../../components/withStatusIndicator';\nimport { useFetch } from '../../hooks/useFetch';\nimport { usePathPrefix } from '../../contexts/PathPrefixContext';\nimport { API_PATH } from '../../constants/constants';\n\ninterface FlagMap {\n  [key: string]: string;\n}\n\ninterface FlagsProps {\n  data?: FlagMap;\n}\n\nexport const FlagsContent: FC<FlagsProps> = ({ data = {} }) => {\n  return (\n    <>\n      <h2>Command-Line Flags</h2>\n      <Table bordered size=\"sm\" striped>\n        <tbody>\n          {Object.keys(data).map(key => (\n            <tr key={key}>\n              <th>{key}</th>\n              <td>{data[key]}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\nconst FlagsWithStatusIndicator = withStatusIndicator(FlagsContent);\n\nFlagsContent.displayName = 'Flags';\n\nconst Flags: FC<RouteComponentProps> = () => {\n  const pathPrefix = usePathPrefix();\n  const { response, error, isLoading } = useFetch<FlagMap>(`${pathPrefix}/${API_PATH}/status/flags`);\n  return <FlagsWithStatusIndicator data={response.data} error={error} isLoading={isLoading} />;\n};\n\nexport default Flags;\n"]},"metadata":{},"sourceType":"module"}