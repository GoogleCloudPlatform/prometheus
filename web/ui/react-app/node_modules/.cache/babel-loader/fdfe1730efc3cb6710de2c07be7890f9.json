{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prevElementSibling = exports.nextElementSibling = exports.getName = exports.hasAttrib = exports.getAttributeValue = exports.getSiblings = exports.getParent = exports.getChildren = void 0;\n\nvar domhandler_1 = require(\"domhandler\");\n\nvar emptyArray = [];\n/**\n * Get a node's children.\n *\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\n\nfunction getChildren(elem) {\n  var _a;\n\n  return (_a = elem.children) !== null && _a !== void 0 ? _a : emptyArray;\n}\n\nexports.getChildren = getChildren;\n/**\n * Get a node's parent.\n *\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node.\n */\n\nfunction getParent(elem) {\n  return elem.parent || null;\n}\n\nexports.getParent = getParent;\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first.\n * If we don't have a parent (the element is a root node),\n * we walk the element's `prev` & `next` to get all remaining nodes.\n *\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings.\n */\n\nfunction getSiblings(elem) {\n  var _a, _b;\n\n  var parent = getParent(elem);\n  if (parent != null) return getChildren(parent);\n  var siblings = [elem];\n  var prev = elem.prev,\n      next = elem.next;\n\n  while (prev != null) {\n    siblings.unshift(prev);\n    _a = prev, prev = _a.prev;\n  }\n\n  while (next != null) {\n    siblings.push(next);\n    _b = next, next = _b.next;\n  }\n\n  return siblings;\n}\n\nexports.getSiblings = getSiblings;\n/**\n * Gets an attribute from an element.\n *\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\n\nfunction getAttributeValue(elem, name) {\n  var _a;\n\n  return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n\nexports.getAttributeValue = getAttributeValue;\n/**\n * Checks whether an element has an attribute.\n *\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\n\nfunction hasAttrib(elem, name) {\n  return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n}\n\nexports.hasAttrib = hasAttrib;\n/**\n * Get the tag name of an element.\n *\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\n\nfunction getName(elem) {\n  return elem.name;\n}\n\nexports.getName = getName;\n/**\n * Returns the next element sibling of a node.\n *\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag.\n */\n\nfunction nextElementSibling(elem) {\n  var _a;\n\n  var next = elem.next;\n\n  while (next !== null && !domhandler_1.isTag(next)) {\n    _a = next, next = _a.next;\n  }\n\n  return next;\n}\n\nexports.nextElementSibling = nextElementSibling;\n/**\n * Returns the previous element sibling of a node.\n *\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag.\n */\n\nfunction prevElementSibling(elem) {\n  var _a;\n\n  var prev = elem.prev;\n\n  while (prev !== null && !domhandler_1.isTag(prev)) {\n    _a = prev, prev = _a.prev;\n  }\n\n  return prev;\n}\n\nexports.prevElementSibling = prevElementSibling;","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/domutils/lib/traversal.js"],"names":["Object","defineProperty","exports","value","prevElementSibling","nextElementSibling","getName","hasAttrib","getAttributeValue","getSiblings","getParent","getChildren","domhandler_1","require","emptyArray","elem","_a","children","parent","_b","siblings","prev","next","unshift","push","name","attribs","prototype","hasOwnProperty","call","isTag"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prevElementSibling = exports.nextElementSibling = exports.getName = exports.hasAttrib = exports.getAttributeValue = exports.getSiblings = exports.getParent = exports.getChildren = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar emptyArray = [];\n/**\n * Get a node's children.\n *\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nfunction getChildren(elem) {\n    var _a;\n    return (_a = elem.children) !== null && _a !== void 0 ? _a : emptyArray;\n}\nexports.getChildren = getChildren;\n/**\n * Get a node's parent.\n *\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node.\n */\nfunction getParent(elem) {\n    return elem.parent || null;\n}\nexports.getParent = getParent;\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first.\n * If we don't have a parent (the element is a root node),\n * we walk the element's `prev` & `next` to get all remaining nodes.\n *\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings.\n */\nfunction getSiblings(elem) {\n    var _a, _b;\n    var parent = getParent(elem);\n    if (parent != null)\n        return getChildren(parent);\n    var siblings = [elem];\n    var prev = elem.prev, next = elem.next;\n    while (prev != null) {\n        siblings.unshift(prev);\n        (_a = prev, prev = _a.prev);\n    }\n    while (next != null) {\n        siblings.push(next);\n        (_b = next, next = _b.next);\n    }\n    return siblings;\n}\nexports.getSiblings = getSiblings;\n/**\n * Gets an attribute from an element.\n *\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nfunction getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\nexports.getAttributeValue = getAttributeValue;\n/**\n * Checks whether an element has an attribute.\n *\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nfunction hasAttrib(elem, name) {\n    return (elem.attribs != null &&\n        Object.prototype.hasOwnProperty.call(elem.attribs, name) &&\n        elem.attribs[name] != null);\n}\nexports.hasAttrib = hasAttrib;\n/**\n * Get the tag name of an element.\n *\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nfunction getName(elem) {\n    return elem.name;\n}\nexports.getName = getName;\n/**\n * Returns the next element sibling of a node.\n *\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag.\n */\nfunction nextElementSibling(elem) {\n    var _a;\n    var next = elem.next;\n    while (next !== null && !domhandler_1.isTag(next))\n        (_a = next, next = _a.next);\n    return next;\n}\nexports.nextElementSibling = nextElementSibling;\n/**\n * Returns the previous element sibling of a node.\n *\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag.\n */\nfunction prevElementSibling(elem) {\n    var _a;\n    var prev = elem.prev;\n    while (prev !== null && !domhandler_1.isTag(prev))\n        (_a = prev, prev = _a.prev);\n    return prev;\n}\nexports.prevElementSibling = prevElementSibling;\n"]},"metadata":{},"sourceType":"script"}