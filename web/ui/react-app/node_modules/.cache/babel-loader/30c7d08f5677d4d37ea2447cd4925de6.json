{"ast":null,"code":"import _classCallCheck from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import $ from'jquery';import React,{PureComponent}from'react';import ReactResizeDetector from'react-resize-detector';import{Legend}from'./Legend';import{isPresent}from'../../utils';import{normalizeData,getOptions,toHoverColor}from'./GraphHelpers';require('../../vendor/flot/jquery.flot');require('../../vendor/flot/jquery.flot.stack');require('../../vendor/flot/jquery.flot.time');require('../../vendor/flot/jquery.flot.crosshair');require('jquery.flot.tooltip');var Graph=/*#__PURE__*/function(_PureComponent){_inherits(Graph,_PureComponent);var _super=_createSuper(Graph);function Graph(){var _this;_classCallCheck(this,Graph);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.chartRef=React.createRef();_this.$chart=void 0;_this.rafID=0;_this.selectedSeriesIndexes=[];_this.state={chartData:normalizeData(_this.props)};_this.plot=function(){var data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_this.state.chartData;if(!_this.chartRef.current){return;}_this.destroyPlot();_this.$chart=$.plot($(_this.chartRef.current),data,getOptions(_this.props.stacked,_this.props.useLocalTime));};_this.destroyPlot=function(){if(isPresent(_this.$chart)){_this.$chart.destroy();}};_this.handleSeriesSelect=function(selected,selectedIndex){var chartData=_this.state.chartData;_this.plot(_this.selectedSeriesIndexes.length===1&&_this.selectedSeriesIndexes.includes(selectedIndex)?chartData.map(toHoverColor(selectedIndex,_this.props.stacked)):chartData.filter(function(_,i){return selected.includes(i);})// draw only selected\n);_this.selectedSeriesIndexes=selected;};_this.handleSeriesHover=function(index){return function(){if(_this.rafID){cancelAnimationFrame(_this.rafID);}_this.rafID=requestAnimationFrame(function(){_this.plotSetAndDraw(_this.state.chartData.map(toHoverColor(index,_this.props.stacked)));});};};_this.handleLegendMouseOut=function(){cancelAnimationFrame(_this.rafID);_this.plotSetAndDraw();};_this.handleResize=function(){if(isPresent(_this.$chart)){_this.plot(_this.$chart.getData());}};return _this;}_createClass(Graph,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this2=this;var _this$props=this.props,data=_this$props.data,stacked=_this$props.stacked,useLocalTime=_this$props.useLocalTime;if(prevProps.data!==data){this.selectedSeriesIndexes=[];this.setState({chartData:normalizeData(this.props)},this.plot);}else if(prevProps.stacked!==stacked){this.setState({chartData:normalizeData(this.props)},function(){if(_this2.selectedSeriesIndexes.length===0){_this2.plot();}else{_this2.plot(_this2.state.chartData.filter(function(_,i){return _this2.selectedSeriesIndexes.includes(i);}));}});}if(prevProps.useLocalTime!==useLocalTime){this.plot();}}},{key:\"componentDidMount\",value:function componentDidMount(){this.plot();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.destroyPlot();}},{key:\"plotSetAndDraw\",value:function plotSetAndDraw(){var data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.state.chartData;if(isPresent(this.$chart)){this.$chart.setData(data);this.$chart.draw();}}},{key:\"render\",value:function render(){var chartData=this.state.chartData;return/*#__PURE__*/React.createElement(\"div\",{className:\"graph\"},/*#__PURE__*/React.createElement(ReactResizeDetector,{handleWidth:true,onResize:this.handleResize,skipOnMount:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"graph-chart\",ref:this.chartRef}),/*#__PURE__*/React.createElement(Legend,{shouldReset:this.selectedSeriesIndexes.length===0,chartData:chartData,onHover:this.handleSeriesHover,onLegendMouseOut:this.handleLegendMouseOut,onSeriesToggle:this.handleSeriesSelect}));}}]);return Graph;}(PureComponent);export default Graph;","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/src/pages/graph/Graph.tsx"],"names":["$","React","PureComponent","ReactResizeDetector","Legend","isPresent","normalizeData","getOptions","toHoverColor","require","Graph","chartRef","createRef","$chart","rafID","selectedSeriesIndexes","state","chartData","props","plot","data","current","destroyPlot","stacked","useLocalTime","destroy","handleSeriesSelect","selected","selectedIndex","length","includes","map","filter","_","i","handleSeriesHover","index","cancelAnimationFrame","requestAnimationFrame","plotSetAndDraw","handleLegendMouseOut","handleResize","getData","prevProps","setState","setData","draw"],"mappings":"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","sourcesContent":["import $ from 'jquery';\nimport React, { PureComponent } from 'react';\nimport ReactResizeDetector from 'react-resize-detector';\n\nimport { Legend } from './Legend';\nimport { Metric, QueryParams } from '../../types/types';\nimport { isPresent } from '../../utils';\nimport { normalizeData, getOptions, toHoverColor } from './GraphHelpers';\n\nrequire('../../vendor/flot/jquery.flot');\nrequire('../../vendor/flot/jquery.flot.stack');\nrequire('../../vendor/flot/jquery.flot.time');\nrequire('../../vendor/flot/jquery.flot.crosshair');\nrequire('jquery.flot.tooltip');\n\nexport interface GraphProps {\n  data: {\n    resultType: string;\n    result: Array<{ metric: Metric; values: [number, string][] }>;\n  };\n  stacked: boolean;\n  useLocalTime: boolean;\n  queryParams: QueryParams | null;\n}\n\nexport interface GraphSeries {\n  labels: { [key: string]: string };\n  color: string;\n  data: (number | null)[][]; // [x,y][]\n  index: number;\n}\n\ninterface GraphState {\n  chartData: GraphSeries[];\n}\n\nclass Graph extends PureComponent<GraphProps, GraphState> {\n  private chartRef = React.createRef<HTMLDivElement>();\n  private $chart?: jquery.flot.plot;\n  private rafID = 0;\n  private selectedSeriesIndexes: number[] = [];\n\n  state = {\n    chartData: normalizeData(this.props),\n  };\n\n  componentDidUpdate(prevProps: GraphProps) {\n    const { data, stacked, useLocalTime } = this.props;\n    if (prevProps.data !== data) {\n      this.selectedSeriesIndexes = [];\n      this.setState({ chartData: normalizeData(this.props) }, this.plot);\n    } else if (prevProps.stacked !== stacked) {\n      this.setState({ chartData: normalizeData(this.props) }, () => {\n        if (this.selectedSeriesIndexes.length === 0) {\n          this.plot();\n        } else {\n          this.plot(this.state.chartData.filter((_, i) => this.selectedSeriesIndexes.includes(i)));\n        }\n      });\n    }\n\n    if (prevProps.useLocalTime !== useLocalTime) {\n      this.plot();\n    }\n  }\n\n  componentDidMount() {\n    this.plot();\n  }\n\n  componentWillUnmount() {\n    this.destroyPlot();\n  }\n\n  plot = (data: GraphSeries[] = this.state.chartData) => {\n    if (!this.chartRef.current) {\n      return;\n    }\n    this.destroyPlot();\n\n    this.$chart = $.plot($(this.chartRef.current), data, getOptions(this.props.stacked, this.props.useLocalTime));\n  };\n\n  destroyPlot = () => {\n    if (isPresent(this.$chart)) {\n      this.$chart.destroy();\n    }\n  };\n\n  plotSetAndDraw(data: GraphSeries[] = this.state.chartData) {\n    if (isPresent(this.$chart)) {\n      this.$chart.setData(data);\n      this.$chart.draw();\n    }\n  }\n\n  handleSeriesSelect = (selected: number[], selectedIndex: number) => {\n    const { chartData } = this.state;\n    this.plot(\n      this.selectedSeriesIndexes.length === 1 && this.selectedSeriesIndexes.includes(selectedIndex)\n        ? chartData.map(toHoverColor(selectedIndex, this.props.stacked))\n        : chartData.filter((_, i) => selected.includes(i)) // draw only selected\n    );\n    this.selectedSeriesIndexes = selected;\n  };\n\n  handleSeriesHover = (index: number) => () => {\n    if (this.rafID) {\n      cancelAnimationFrame(this.rafID);\n    }\n    this.rafID = requestAnimationFrame(() => {\n      this.plotSetAndDraw(this.state.chartData.map(toHoverColor(index, this.props.stacked)));\n    });\n  };\n\n  handleLegendMouseOut = () => {\n    cancelAnimationFrame(this.rafID);\n    this.plotSetAndDraw();\n  };\n\n  handleResize = () => {\n    if (isPresent(this.$chart)) {\n      this.plot(this.$chart.getData() as GraphSeries[]);\n    }\n  };\n\n  render() {\n    const { chartData } = this.state;\n    return (\n      <div className=\"graph\">\n        <ReactResizeDetector handleWidth onResize={this.handleResize} skipOnMount />\n        <div className=\"graph-chart\" ref={this.chartRef} />\n        <Legend\n          shouldReset={this.selectedSeriesIndexes.length === 0}\n          chartData={chartData}\n          onHover={this.handleSeriesHover}\n          onLegendMouseOut={this.handleLegendMouseOut}\n          onSeriesToggle={this.handleSeriesSelect}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}