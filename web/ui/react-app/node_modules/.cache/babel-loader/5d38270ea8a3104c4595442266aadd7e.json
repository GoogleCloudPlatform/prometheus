{"ast":null,"code":"\"use strict\"; // The MIT License (MIT)\n//\n// Copyright (c) 2020 The Prometheus Authors\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Matcher = void 0;\n\nvar lezer_promql_1 = require(\"lezer-promql\");\n\nvar Matcher =\n/** @class */\nfunction () {\n  function Matcher(type, name, value) {\n    this.type = type;\n    this.name = name;\n    this.value = value;\n  }\n\n  Matcher.prototype.matchesEmpty = function () {\n    switch (this.type) {\n      case lezer_promql_1.EqlSingle:\n        return this.value === '';\n\n      case lezer_promql_1.Neq:\n        return this.value !== '';\n\n      default:\n        return false;\n    }\n  };\n\n  return Matcher;\n}();\n\nexports.Matcher = Matcher;","map":{"version":3,"sources":["../../../src/lang-promql/types/matcher.ts"],"names":[],"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA,IAAA,cAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAEA,IAAA,OAAA;AAAA;AAAA,YAAA;AAKE,WAAA,OAAA,CAAY,IAAZ,EAA0B,IAA1B,EAAwC,KAAxC,EAAqD;AACnD,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,KAAL,GAAa,KAAb;AACD;;AAED,EAAA,OAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACE,YAAQ,KAAK,IAAb;AACE,WAAK,cAAA,CAAA,SAAL;AACE,eAAO,KAAK,KAAL,KAAe,EAAtB;;AACF,WAAK,cAAA,CAAA,GAAL;AACE,eAAO,KAAK,KAAL,KAAe,EAAtB;;AACF;AACE,eAAO,KAAP;AANJ;AAQD,GATD;;AAUF,SAAA,OAAA;AAAC,CArBD,EAAA;;AAAa,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2020 The Prometheus Authors\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Matcher = void 0;\nvar lezer_promql_1 = require(\"lezer-promql\");\nvar Matcher = /** @class */ (function () {\n    function Matcher(type, name, value) {\n        this.type = type;\n        this.name = name;\n        this.value = value;\n    }\n    Matcher.prototype.matchesEmpty = function () {\n        switch (this.type) {\n            case lezer_promql_1.EqlSingle:\n                return this.value === '';\n            case lezer_promql_1.Neq:\n                return this.value !== '';\n            default:\n                return false;\n        }\n    };\n    return Matcher;\n}());\nexports.Matcher = Matcher;\n//# sourceMappingURL=matcher.js.map"]},"metadata":{},"sourceType":"script"}