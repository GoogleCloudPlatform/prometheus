{"ast":null,"code":"import _defineProperty from \"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _promqlFunctions;\n\n// The MIT License (MIT)\n//\n// Copyright (c) 2020 The Prometheus Authors\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport { Abs, Absent, AbsentOverTime, AvgOverTime, Ceil, Changes, Clamp, ClampMax, ClampMin, CountOverTime, DayOfMonth, DayOfWeek, DaysInMonth, Delta, Deriv, Exp, Floor, HistogramQuantile, HoltWinters, Hour, Idelta, Increase, Irate, LabelJoin, LabelReplace, LastOverTime, Ln, Log10, Log2, MaxOverTime, MinOverTime, Minute, Month, PredictLinear, QuantileOverTime, Rate, Resets, Round, Scalar, Sgn, Sort, SortDesc, Sqrt, StddevOverTime, StdvarOverTime, SumOverTime, Time, Timestamp, Vector, Year } from 'lezer-promql';\nexport var ValueType;\n\n(function (ValueType) {\n  ValueType[\"none\"] = \"none\";\n  ValueType[\"vector\"] = \"vector\";\n  ValueType[\"scalar\"] = \"scalar\";\n  ValueType[\"matrix\"] = \"matrix\";\n  ValueType[\"string\"] = \"string\";\n})(ValueType || (ValueType = {})); // promqlFunctions is a list of all functions supported by PromQL, including their types.\n// Based on https://github.com/prometheus/prometheus/blob/master/promql/parser/functions.go#L26\n\n\nvar promqlFunctions = (_promqlFunctions = {}, _defineProperty(_promqlFunctions, Abs, {\n  name: 'abs',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Absent, {\n  name: 'absent',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, AbsentOverTime, {\n  name: 'absent_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, AvgOverTime, {\n  name: 'avg_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Ceil, {\n  name: 'ceil',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Changes, {\n  name: 'changes',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Clamp, {\n  name: 'clamp',\n  argTypes: [ValueType.vector, ValueType.scalar, ValueType.scalar],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, ClampMax, {\n  name: 'clamp_max',\n  argTypes: [ValueType.vector, ValueType.scalar],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, ClampMin, {\n  name: 'clamp_min',\n  argTypes: [ValueType.vector, ValueType.scalar],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, CountOverTime, {\n  name: 'count_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, DaysInMonth, {\n  name: 'days_in_month',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, DayOfMonth, {\n  name: 'day_of_month',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, DayOfWeek, {\n  name: 'day_of_week',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Delta, {\n  name: 'delta',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Deriv, {\n  name: 'deriv',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Exp, {\n  name: 'exp',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Floor, {\n  name: 'floor',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, HistogramQuantile, {\n  name: 'histogram_quantile',\n  argTypes: [ValueType.scalar, ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, HoltWinters, {\n  name: 'holt_winters',\n  argTypes: [ValueType.matrix, ValueType.scalar, ValueType.scalar],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Hour, {\n  name: 'hour',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Idelta, {\n  name: 'idelta',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Increase, {\n  name: 'increase',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Irate, {\n  name: 'irate',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, LabelReplace, {\n  name: 'label_replace',\n  argTypes: [ValueType.vector, ValueType.string, ValueType.string, ValueType.string, ValueType.string],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, LabelJoin, {\n  name: 'label_join',\n  argTypes: [ValueType.vector, ValueType.string, ValueType.string, ValueType.string],\n  variadic: -1,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, LastOverTime, {\n  name: 'last_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Ln, {\n  name: 'ln',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Log10, {\n  name: 'log10',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Log2, {\n  name: 'log2',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, MaxOverTime, {\n  name: 'max_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, MinOverTime, {\n  name: 'min_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Minute, {\n  name: 'minute',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Month, {\n  name: 'month',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, PredictLinear, {\n  name: 'predict_linear',\n  argTypes: [ValueType.matrix, ValueType.scalar],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, QuantileOverTime, {\n  name: 'quantile_over_time',\n  argTypes: [ValueType.scalar, ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Rate, {\n  name: 'rate',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Resets, {\n  name: 'resets',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Round, {\n  name: 'round',\n  argTypes: [ValueType.vector, ValueType.scalar],\n  variadic: 1,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Scalar, {\n  name: 'scalar',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.scalar\n}), _defineProperty(_promqlFunctions, Sgn, {\n  name: 'sgn',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Sort, {\n  name: 'sort',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, SortDesc, {\n  name: 'sort_desc',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Sqrt, {\n  name: 'sqrt',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, StddevOverTime, {\n  name: 'stddev_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, StdvarOverTime, {\n  name: 'stdvar_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, SumOverTime, {\n  name: 'sum_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Time, {\n  name: 'time',\n  argTypes: [],\n  variadic: 0,\n  returnType: ValueType.scalar\n}), _defineProperty(_promqlFunctions, Timestamp, {\n  name: 'timestamp',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Vector, {\n  name: 'vector',\n  argTypes: [ValueType.scalar],\n  variadic: 0,\n  returnType: ValueType.vector\n}), _defineProperty(_promqlFunctions, Year, {\n  name: 'year',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}), _promqlFunctions);\nexport function getFunction(id) {\n  return promqlFunctions[id];\n}","map":{"version":3,"sources":["../../../src/lang-promql/types/function.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["// The MIT License (MIT)\n//\n// Copyright (c) 2020 The Prometheus Authors\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport { Abs, Absent, AbsentOverTime, AvgOverTime, Ceil, Changes, Clamp, ClampMax, ClampMin, CountOverTime, DayOfMonth, DayOfWeek, DaysInMonth, Delta, Deriv, Exp, Floor, HistogramQuantile, HoltWinters, Hour, Idelta, Increase, Irate, LabelJoin, LabelReplace, LastOverTime, Ln, Log10, Log2, MaxOverTime, MinOverTime, Minute, Month, PredictLinear, QuantileOverTime, Rate, Resets, Round, Scalar, Sgn, Sort, SortDesc, Sqrt, StddevOverTime, StdvarOverTime, SumOverTime, Time, Timestamp, Vector, Year, } from 'lezer-promql';\nexport var ValueType;\n(function (ValueType) {\n    ValueType[\"none\"] = \"none\";\n    ValueType[\"vector\"] = \"vector\";\n    ValueType[\"scalar\"] = \"scalar\";\n    ValueType[\"matrix\"] = \"matrix\";\n    ValueType[\"string\"] = \"string\";\n})(ValueType || (ValueType = {}));\n// promqlFunctions is a list of all functions supported by PromQL, including their types.\n// Based on https://github.com/prometheus/prometheus/blob/master/promql/parser/functions.go#L26\nconst promqlFunctions = {\n    [Abs]: {\n        name: 'abs',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Absent]: {\n        name: 'absent',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [AbsentOverTime]: {\n        name: 'absent_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [AvgOverTime]: {\n        name: 'avg_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Ceil]: {\n        name: 'ceil',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Changes]: {\n        name: 'changes',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Clamp]: {\n        name: 'clamp',\n        argTypes: [ValueType.vector, ValueType.scalar, ValueType.scalar],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [ClampMax]: {\n        name: 'clamp_max',\n        argTypes: [ValueType.vector, ValueType.scalar],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [ClampMin]: {\n        name: 'clamp_min',\n        argTypes: [ValueType.vector, ValueType.scalar],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [CountOverTime]: {\n        name: 'count_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [DaysInMonth]: {\n        name: 'days_in_month',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    [DayOfMonth]: {\n        name: 'day_of_month',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    [DayOfWeek]: {\n        name: 'day_of_week',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    [Delta]: {\n        name: 'delta',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Deriv]: {\n        name: 'deriv',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Exp]: {\n        name: 'exp',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Floor]: {\n        name: 'floor',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [HistogramQuantile]: {\n        name: 'histogram_quantile',\n        argTypes: [ValueType.scalar, ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [HoltWinters]: {\n        name: 'holt_winters',\n        argTypes: [ValueType.matrix, ValueType.scalar, ValueType.scalar],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Hour]: {\n        name: 'hour',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    [Idelta]: {\n        name: 'idelta',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Increase]: {\n        name: 'increase',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Irate]: {\n        name: 'irate',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [LabelReplace]: {\n        name: 'label_replace',\n        argTypes: [ValueType.vector, ValueType.string, ValueType.string, ValueType.string, ValueType.string],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [LabelJoin]: {\n        name: 'label_join',\n        argTypes: [ValueType.vector, ValueType.string, ValueType.string, ValueType.string],\n        variadic: -1,\n        returnType: ValueType.vector,\n    },\n    [LastOverTime]: {\n        name: 'last_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Ln]: {\n        name: 'ln',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Log10]: {\n        name: 'log10',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Log2]: {\n        name: 'log2',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [MaxOverTime]: {\n        name: 'max_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [MinOverTime]: {\n        name: 'min_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Minute]: {\n        name: 'minute',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    [Month]: {\n        name: 'month',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    [PredictLinear]: {\n        name: 'predict_linear',\n        argTypes: [ValueType.matrix, ValueType.scalar],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [QuantileOverTime]: {\n        name: 'quantile_over_time',\n        argTypes: [ValueType.scalar, ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Rate]: {\n        name: 'rate',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Resets]: {\n        name: 'resets',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Round]: {\n        name: 'round',\n        argTypes: [ValueType.vector, ValueType.scalar],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    [Scalar]: {\n        name: 'scalar',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.scalar,\n    },\n    [Sgn]: {\n        name: 'sgn',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Sort]: {\n        name: 'sort',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [SortDesc]: {\n        name: 'sort_desc',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Sqrt]: {\n        name: 'sqrt',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [StddevOverTime]: {\n        name: 'stddev_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [StdvarOverTime]: {\n        name: 'stdvar_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [SumOverTime]: {\n        name: 'sum_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Time]: {\n        name: 'time',\n        argTypes: [],\n        variadic: 0,\n        returnType: ValueType.scalar,\n    },\n    [Timestamp]: {\n        name: 'timestamp',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Vector]: {\n        name: 'vector',\n        argTypes: [ValueType.scalar],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    [Year]: {\n        name: 'year',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n};\nexport function getFunction(id) {\n    return promqlFunctions[id];\n}\n//# sourceMappingURL=function.js.map"]},"metadata":{},"sourceType":"module"}