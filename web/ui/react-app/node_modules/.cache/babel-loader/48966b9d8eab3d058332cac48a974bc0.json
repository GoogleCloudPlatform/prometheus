{"ast":null,"code":"import _toConsumableArray from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Button,InputGroup,InputGroupAddon,InputGroupText,Input}from'reactstrap';import Downshift from'downshift';import fuzzy from'fuzzy';import sanitizeHTML from'sanitize-html';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSearch,faSpinner,faGlobeEurope}from'@fortawesome/free-solid-svg-icons';import MetricsExplorer from'./MetricsExplorer';var ExpressionInput=/*#__PURE__*/function(_Component){_inherits(ExpressionInput,_Component);var _super=_createSuper(ExpressionInput);function ExpressionInput(props){var _this;_classCallCheck(this,ExpressionInput);_this=_super.call(this,props);_this.exprInputRef=React.createRef();_this.setHeight=function(){var _ref=_this.exprInputRef.current,offsetHeight=_ref.offsetHeight,clientHeight=_ref.clientHeight,scrollHeight=_ref.scrollHeight;var offset=offsetHeight-clientHeight;// Needed in order for the height to be more accurate.\n_this.setState({height:scrollHeight+offset});};_this.handleInput=function(){_this.setValue(_this.exprInputRef.current.value);};_this.setValue=function(value){var onExpressionChange=_this.props.onExpressionChange;onExpressionChange(value);_this.setState({height:'auto'},_this.setHeight);};_this.handleKeyPress=function(event){var executeQuery=_this.props.executeQuery;if(event.key==='Enter'&&!event.shiftKey){executeQuery();event.preventDefault();}};_this.getSearchMatches=function(input,expressions){return fuzzy.filter(input.replace(/ /g,''),expressions,{pre:'<strong>',post:'</strong>'});};_this.createAutocompleteSection=function(downshift){var _downshift$inputValue=downshift.inputValue,inputValue=_downshift$inputValue===void 0?'':_downshift$inputValue,closeMenu=downshift.closeMenu,highlightedIndex=downshift.highlightedIndex;var autocompleteSections={'Query History':_this.props.queryHistory,'Metric Names':_this.props.metricNames};var index=0;var sections=inputValue.length&&_this.props.enableAutocomplete?Object.entries(autocompleteSections).reduce(function(acc,_ref2){var _ref3=_slicedToArray(_ref2,2),title=_ref3[0],items=_ref3[1];var matches=_this.getSearchMatches(inputValue,items);return!matches.length?acc:[].concat(_toConsumableArray(acc),[/*#__PURE__*/React.createElement(\"ul\",{className:\"autosuggest-dropdown-list\",key:title},/*#__PURE__*/React.createElement(\"li\",{className:\"autosuggest-dropdown-header\"},title),matches.slice(0,100)// Limit DOM rendering to 100 results, as DOM rendering is sloooow.\n.map(function(_ref4){var original=_ref4.original,text=_ref4.string;var itemProps=downshift.getItemProps({key:original,index:index,item:original,style:{backgroundColor:highlightedIndex===index++?'lightgray':'white'}});return/*#__PURE__*/React.createElement(\"li\",Object.assign({key:title},itemProps,{dangerouslySetInnerHTML:{__html:sanitizeHTML(text,{allowedTags:['strong']})}}));}))]);},[]):[];if(!sections.length){// This is ugly but is needed in order to sync state updates.\n// This way we force downshift to wait React render call to complete before closeMenu to be triggered.\nsetTimeout(closeMenu);return null;}return/*#__PURE__*/React.createElement(\"div\",Object.assign({},downshift.getMenuProps(),{className:\"autosuggest-dropdown\"}),sections);};_this.openMetricsExplorer=function(){_this.setState({showMetricsExplorer:true});};_this.updateShowMetricsExplorer=function(show){_this.setState({showMetricsExplorer:show});};_this.insertAtCursor=function(value){if(!_this.exprInputRef.current)return;var startPosition=_this.exprInputRef.current.selectionStart;var endPosition=_this.exprInputRef.current.selectionEnd;var previousValue=_this.exprInputRef.current.value;var newValue;if(startPosition&&endPosition){newValue=previousValue.substring(0,startPosition)+value+previousValue.substring(endPosition,previousValue.length);}else{newValue=previousValue+value;}_this.setValue(newValue);};_this.state={height:'auto',showMetricsExplorer:false};return _this;}_createClass(ExpressionInput,[{key:\"componentDidMount\",value:function componentDidMount(){this.setHeight();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var value=this.props.value;if(value!==prevProps.value){this.setValue(value);}}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,executeQuery=_this$props.executeQuery,value=_this$props.value;var height=this.state.height;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Downshift,{onSelect:this.setValue},function(downshift){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(InputGroup,{className:\"expression-input\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,_this2.props.loading?/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSpinner,spin:true}):/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSearch}))),/*#__PURE__*/React.createElement(Input,Object.assign({onInput:_this2.handleInput,style:{height:height},autoFocus:true,type:\"textarea\",rows:\"1\",onKeyPress:_this2.handleKeyPress,placeholder:\"Expression (press Shift+Enter for newlines)\",innerRef:_this2.exprInputRef},downshift.getInputProps({onKeyDown:function onKeyDown(event){switch(event.key){case'Home':case'End':// We want to be able to jump to the beginning/end of the input field.\n// By default, Downshift otherwise jumps to the first/last suggestion item instead.\nevent.nativeEvent.preventDownshiftDefault=true;break;case'ArrowUp':case'ArrowDown':if(!downshift.isOpen){event.nativeEvent.preventDownshiftDefault=true;}break;case'Enter':downshift.closeMenu();break;case'Escape':if(!downshift.isOpen){_this2.exprInputRef.current.blur();}break;default:}}}),{value:value})),/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"append\"},/*#__PURE__*/React.createElement(Button,{className:\"metrics-explorer-btn\",title:\"Open metrics explorer\",onClick:_this2.openMetricsExplorer},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faGlobeEurope}))),/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"append\"},/*#__PURE__*/React.createElement(Button,{className:\"execute-btn\",color:\"primary\",onClick:executeQuery},\"Execute\"))),downshift.isOpen&&_this2.createAutocompleteSection(downshift));}),/*#__PURE__*/React.createElement(MetricsExplorer,{show:this.state.showMetricsExplorer,updateShow:this.updateShowMetricsExplorer,metrics:this.props.metricNames,insertAtCursor:this.insertAtCursor}));}}]);return ExpressionInput;}(Component);export default ExpressionInput;","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/src/pages/graph/ExpressionInput.tsx"],"names":["React","Component","Button","InputGroup","InputGroupAddon","InputGroupText","Input","Downshift","fuzzy","sanitizeHTML","FontAwesomeIcon","faSearch","faSpinner","faGlobeEurope","MetricsExplorer","ExpressionInput","props","exprInputRef","createRef","setHeight","current","offsetHeight","clientHeight","scrollHeight","offset","setState","height","handleInput","setValue","value","onExpressionChange","handleKeyPress","event","executeQuery","key","shiftKey","preventDefault","getSearchMatches","input","expressions","filter","replace","pre","post","createAutocompleteSection","downshift","inputValue","closeMenu","highlightedIndex","autocompleteSections","queryHistory","metricNames","index","sections","length","enableAutocomplete","Object","entries","reduce","acc","title","items","matches","slice","map","original","text","string","itemProps","getItemProps","item","style","backgroundColor","__html","allowedTags","setTimeout","getMenuProps","openMetricsExplorer","showMetricsExplorer","updateShowMetricsExplorer","show","insertAtCursor","startPosition","selectionStart","endPosition","selectionEnd","previousValue","newValue","substring","state","prevProps","loading","getInputProps","onKeyDown","nativeEvent","preventDownshiftDefault","isOpen","blur"],"mappings":"o0CAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,MAAT,CAAiBC,UAAjB,CAA6BC,eAA7B,CAA8CC,cAA9C,CAA8DC,KAA9D,KAA2E,YAA3E,CAEA,MAAOC,CAAAA,SAAP,KAAqD,WAArD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,CAEA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,aAA9B,KAAmD,mCAAnD,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,C,GAiBMC,CAAAA,e,kHAGJ,yBAAYC,KAAZ,CAAyC,iDACvC,uBAAMA,KAAN,EADuC,MAFjCC,YAEiC,CAFlBjB,KAAK,CAACkB,SAAN,EAEkB,OAYzCC,SAZyC,CAY7B,UAAM,CAChB,SAAqD,MAAKF,YAAL,CAAkBG,OAAvE,CAAQC,YAAR,MAAQA,YAAR,CAAsBC,YAAtB,MAAsBA,YAAtB,CAAoCC,YAApC,MAAoCA,YAApC,CACA,GAAMC,CAAAA,MAAM,CAAGH,YAAY,CAAGC,YAA9B,CAA4C;AAC5C,MAAKG,QAAL,CAAc,CAAEC,MAAM,CAAEH,YAAY,CAAGC,MAAzB,CAAd,EACD,CAhBwC,OAkBzCG,WAlByC,CAkB3B,UAAM,CAClB,MAAKC,QAAL,CAAc,MAAKX,YAAL,CAAkBG,OAAlB,CAA2BS,KAAzC,EACD,CApBwC,OAsBzCD,QAtByC,CAsB9B,SAACC,KAAD,CAAmB,CAC5B,GAAQC,CAAAA,kBAAR,CAA+B,MAAKd,KAApC,CAAQc,kBAAR,CACAA,kBAAkB,CAACD,KAAD,CAAlB,CACA,MAAKJ,QAAL,CAAc,CAAEC,MAAM,CAAE,MAAV,CAAd,CAAkC,MAAKP,SAAvC,EACD,CA1BwC,OAmCzCY,cAnCyC,CAmCxB,SAACC,KAAD,CAAkD,CACjE,GAAQC,CAAAA,YAAR,CAAyB,MAAKjB,KAA9B,CAAQiB,YAAR,CACA,GAAID,KAAK,CAACE,GAAN,GAAc,OAAd,EAAyB,CAACF,KAAK,CAACG,QAApC,CAA8C,CAC5CF,YAAY,GACZD,KAAK,CAACI,cAAN,GACD,CACF,CAzCwC,OA2CzCC,gBA3CyC,CA2CtB,SAACC,KAAD,CAAgBC,WAAhB,CAA0C,CAC3D,MAAO/B,CAAAA,KAAK,CAACgC,MAAN,CAAaF,KAAK,CAACG,OAAN,CAAc,IAAd,CAAoB,EAApB,CAAb,CAAsCF,WAAtC,CAAmD,CACxDG,GAAG,CAAE,UADmD,CAExDC,IAAI,CAAE,WAFkD,CAAnD,CAAP,CAID,CAhDwC,OAkDzCC,yBAlDyC,CAkDb,SAACC,SAAD,CAA+C,CACzE,0BAAyDA,SAAzD,CAAQC,UAAR,CAAQA,UAAR,gCAAqB,EAArB,uBAAyBC,SAAzB,CAAyDF,SAAzD,CAAyBE,SAAzB,CAAoCC,gBAApC,CAAyDH,SAAzD,CAAoCG,gBAApC,CACA,GAAMC,CAAAA,oBAAoB,CAAG,CAC3B,gBAAiB,MAAKjC,KAAL,CAAWkC,YADD,CAE3B,eAAgB,MAAKlC,KAAL,CAAWmC,WAFA,CAA7B,CAIA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAMC,CAAAA,QAAQ,CACZP,UAAU,CAAEQ,MAAZ,EAAsB,MAAKtC,KAAL,CAAWuC,kBAAjC,CACIC,MAAM,CAACC,OAAP,CAAeR,oBAAf,EAAqCS,MAArC,CAA4C,SAACC,GAAD,OAAyB,mCAAlBC,KAAkB,UAAXC,KAAW,UACnE,GAAMC,CAAAA,OAAO,CAAG,MAAKzB,gBAAL,CAAsBS,UAAtB,CAAmCe,KAAnC,CAAhB,CACA,MAAO,CAACC,OAAO,CAACR,MAAT,CACHK,GADG,8BAGEA,GAHF,gBAID,0BAAI,SAAS,CAAC,2BAAd,CAA0C,GAAG,CAAEC,KAA/C,eACE,0BAAI,SAAS,CAAC,6BAAd,EAA6CA,KAA7C,CADF,CAEGE,OAAO,CACLC,KADF,CACQ,CADR,CACW,GADX,CACgB;AADhB,CAEEC,GAFF,CAEM,eAAgC,IAA7BC,CAAAA,QAA6B,OAA7BA,QAA6B,CAAXC,IAAW,OAAnBC,MAAmB,CACnC,GAAMC,CAAAA,SAAS,CAAGvB,SAAS,CAACwB,YAAV,CAAuB,CACvCnC,GAAG,CAAE+B,QADkC,CAEvCb,KAAK,CAALA,KAFuC,CAGvCkB,IAAI,CAAEL,QAHiC,CAIvCM,KAAK,CAAE,CACLC,eAAe,CAAExB,gBAAgB,GAAKI,KAAK,EAA1B,CAA+B,WAA/B,CAA6C,OADzD,CAJgC,CAAvB,CAAlB,CAQA,mBACE,wCACE,GAAG,CAAEQ,KADP,EAEMQ,SAFN,EAGE,uBAAuB,CAAE,CAAEK,MAAM,CAAEhE,YAAY,CAACyD,IAAD,CAAO,CAAEQ,WAAW,CAAE,CAAC,QAAD,CAAf,CAAP,CAAtB,CAH3B,GADF,CAOD,CAlBF,CAFH,CAJC,EAAP,CA2BD,CA7BD,CA6BG,EA7BH,CADJ,CA+BI,EAhCN,CAkCA,GAAI,CAACrB,QAAQ,CAACC,MAAd,CAAsB,CACpB;AACA;AACAqB,UAAU,CAAC5B,SAAD,CAAV,CACA,MAAO,KAAP,CACD,CAED,mBACE,2CAASF,SAAS,CAAC+B,YAAV,EAAT,EAAmC,SAAS,CAAC,sBAA7C,GACGvB,QADH,CADF,CAKD,CAvGwC,OAyGzCwB,mBAzGyC,CAyGnB,UAAM,CAC1B,MAAKpD,QAAL,CAAc,CACZqD,mBAAmB,CAAE,IADT,CAAd,EAGD,CA7GwC,OA+GzCC,yBA/GyC,CA+Gb,SAACC,IAAD,CAAmB,CAC7C,MAAKvD,QAAL,CAAc,CACZqD,mBAAmB,CAAEE,IADT,CAAd,EAGD,CAnHwC,OAqHzCC,cArHyC,CAqHxB,SAACpD,KAAD,CAAmB,CAClC,GAAI,CAAC,MAAKZ,YAAL,CAAkBG,OAAvB,CAAgC,OAEhC,GAAM8D,CAAAA,aAAa,CAAG,MAAKjE,YAAL,CAAkBG,OAAlB,CAA0B+D,cAAhD,CACA,GAAMC,CAAAA,WAAW,CAAG,MAAKnE,YAAL,CAAkBG,OAAlB,CAA0BiE,YAA9C,CAEA,GAAMC,CAAAA,aAAa,CAAG,MAAKrE,YAAL,CAAkBG,OAAlB,CAA0BS,KAAhD,CACA,GAAI0D,CAAAA,QAAJ,CACA,GAAIL,aAAa,EAAIE,WAArB,CAAkC,CAChCG,QAAQ,CACND,aAAa,CAACE,SAAd,CAAwB,CAAxB,CAA2BN,aAA3B,EAA4CrD,KAA5C,CAAoDyD,aAAa,CAACE,SAAd,CAAwBJ,WAAxB,CAAqCE,aAAa,CAAChC,MAAnD,CADtD,CAED,CAHD,IAGO,CACLiC,QAAQ,CAAGD,aAAa,CAAGzD,KAA3B,CACD,CAED,MAAKD,QAAL,CAAc2D,QAAd,EACD,CArIwC,CAEvC,MAAKE,KAAL,CAAa,CACX/D,MAAM,CAAE,MADG,CAEXoD,mBAAmB,CAAE,KAFV,CAAb,CAFuC,aAMxC,C,6DAED,4BAAoB,CAClB,KAAK3D,SAAL,GACD,C,kCAkBD,4BAAmBuE,SAAnB,CAAoD,CAClD,GAAQ7D,CAAAA,KAAR,CAAkB,KAAKb,KAAvB,CAAQa,KAAR,CACA,GAAIA,KAAK,GAAK6D,SAAS,CAAC7D,KAAxB,CAA+B,CAC7B,KAAKD,QAAL,CAAcC,KAAd,EACD,CACF,C,sBAsGD,iBAAS,iBACP,gBAAgC,KAAKb,KAArC,CAAQiB,YAAR,aAAQA,YAAR,CAAsBJ,KAAtB,aAAsBA,KAAtB,CACA,GAAQH,CAAAA,MAAR,CAAmB,KAAK+D,KAAxB,CAAQ/D,MAAR,CACA,mBACE,qDACE,oBAAC,SAAD,EAAW,QAAQ,CAAE,KAAKE,QAA1B,EACG,SAAAiB,SAAS,qBACR,4CACE,oBAAC,UAAD,EAAY,SAAS,CAAC,kBAAtB,eACE,oBAAC,eAAD,EAAiB,SAAS,CAAC,SAA3B,eACE,oBAAC,cAAD,MACG,MAAI,CAAC7B,KAAL,CAAW2E,OAAX,cAAqB,oBAAC,eAAD,EAAiB,IAAI,CAAE/E,SAAvB,CAAkC,IAAI,KAAtC,EAArB,cAAiE,oBAAC,eAAD,EAAiB,IAAI,CAAED,QAAvB,EADpE,CADF,CADF,cAME,oBAAC,KAAD,gBACE,OAAO,CAAE,MAAI,CAACgB,WADhB,CAEE,KAAK,CAAE,CAAED,MAAM,CAANA,MAAF,CAFT,CAGE,SAAS,KAHX,CAIE,IAAI,CAAC,UAJP,CAKE,IAAI,CAAC,GALP,CAME,UAAU,CAAE,MAAI,CAACK,cANnB,CAOE,WAAW,CAAC,6CAPd,CAQE,QAAQ,CAAE,MAAI,CAACd,YARjB,EASM4B,SAAS,CAAC+C,aAAV,CAAwB,CAC1BC,SAAS,CAAE,mBAAC7D,KAAD,CAAsC,CAC/C,OAAQA,KAAK,CAACE,GAAd,EACE,IAAK,MAAL,CACA,IAAK,KAAL,CACE;AACA;AACCF,KAAK,CAAC8D,WAAP,CAA2BC,uBAA3B,CAAqD,IAArD,CACA,MACF,IAAK,SAAL,CACA,IAAK,WAAL,CACE,GAAI,CAAClD,SAAS,CAACmD,MAAf,CAAuB,CACpBhE,KAAK,CAAC8D,WAAP,CAA2BC,uBAA3B,CAAqD,IAArD,CACD,CACD,MACF,IAAK,OAAL,CACElD,SAAS,CAACE,SAAV,GACA,MACF,IAAK,QAAL,CACE,GAAI,CAACF,SAAS,CAACmD,MAAf,CAAuB,CACrB,MAAI,CAAC/E,YAAL,CAAkBG,OAAlB,CAA2B6E,IAA3B,GACD,CACD,MACF,QArBF,CAuBD,CAzByB,CAAxB,CATN,EAoCE,KAAK,CAAEpE,KApCT,GANF,cA4CE,oBAAC,eAAD,EAAiB,SAAS,CAAC,QAA3B,eACE,oBAAC,MAAD,EAAQ,SAAS,CAAC,sBAAlB,CAAyC,KAAK,CAAC,uBAA/C,CAAuE,OAAO,CAAE,MAAI,CAACgD,mBAArF,eACE,oBAAC,eAAD,EAAiB,IAAI,CAAEhE,aAAvB,EADF,CADF,CA5CF,cAiDE,oBAAC,eAAD,EAAiB,SAAS,CAAC,QAA3B,eACE,oBAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,CAAgC,KAAK,CAAC,SAAtC,CAAgD,OAAO,CAAEoB,YAAzD,YADF,CAjDF,CADF,CAwDGY,SAAS,CAACmD,MAAV,EAAoB,MAAI,CAACpD,yBAAL,CAA+BC,SAA/B,CAxDvB,CADQ,EADZ,CADF,cAgEE,oBAAC,eAAD,EACE,IAAI,CAAE,KAAK4C,KAAL,CAAWX,mBADnB,CAEE,UAAU,CAAE,KAAKC,yBAFnB,CAGE,OAAO,CAAE,KAAK/D,KAAL,CAAWmC,WAHtB,CAIE,cAAc,CAAE,KAAK8B,cAJvB,EAhEF,CADF,CAyED,C,6BAtN2BhF,S,EAyN9B,cAAec,CAAAA,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\n\nimport Downshift, { ControllerStateAndHelpers } from 'downshift';\nimport fuzzy from 'fuzzy';\nimport sanitizeHTML from 'sanitize-html';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faSpinner, faGlobeEurope } from '@fortawesome/free-solid-svg-icons';\nimport MetricsExplorer from './MetricsExplorer';\n\ninterface ExpressionInputProps {\n  value: string;\n  onExpressionChange: (expr: string) => void;\n  queryHistory: string[];\n  metricNames: string[];\n  executeQuery: () => void;\n  loading: boolean;\n  enableAutocomplete: boolean;\n}\n\ninterface ExpressionInputState {\n  height: number | string;\n  showMetricsExplorer: boolean;\n}\n\nclass ExpressionInput extends Component<ExpressionInputProps, ExpressionInputState> {\n  private exprInputRef = React.createRef<HTMLInputElement>();\n\n  constructor(props: ExpressionInputProps) {\n    super(props);\n    this.state = {\n      height: 'auto',\n      showMetricsExplorer: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setHeight();\n  }\n\n  setHeight = () => {\n    const { offsetHeight, clientHeight, scrollHeight } = this.exprInputRef.current!;\n    const offset = offsetHeight - clientHeight; // Needed in order for the height to be more accurate.\n    this.setState({ height: scrollHeight + offset });\n  };\n\n  handleInput = () => {\n    this.setValue(this.exprInputRef.current!.value);\n  };\n\n  setValue = (value: string) => {\n    const { onExpressionChange } = this.props;\n    onExpressionChange(value);\n    this.setState({ height: 'auto' }, this.setHeight);\n  };\n\n  componentDidUpdate(prevProps: ExpressionInputProps) {\n    const { value } = this.props;\n    if (value !== prevProps.value) {\n      this.setValue(value);\n    }\n  }\n\n  handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const { executeQuery } = this.props;\n    if (event.key === 'Enter' && !event.shiftKey) {\n      executeQuery();\n      event.preventDefault();\n    }\n  };\n\n  getSearchMatches = (input: string, expressions: string[]) => {\n    return fuzzy.filter(input.replace(/ /g, ''), expressions, {\n      pre: '<strong>',\n      post: '</strong>',\n    });\n  };\n\n  createAutocompleteSection = (downshift: ControllerStateAndHelpers<any>) => {\n    const { inputValue = '', closeMenu, highlightedIndex } = downshift;\n    const autocompleteSections = {\n      'Query History': this.props.queryHistory,\n      'Metric Names': this.props.metricNames,\n    };\n    let index = 0;\n    const sections =\n      inputValue!.length && this.props.enableAutocomplete\n        ? Object.entries(autocompleteSections).reduce((acc, [title, items]) => {\n            const matches = this.getSearchMatches(inputValue!, items);\n            return !matches.length\n              ? acc\n              : [\n                  ...acc,\n                  <ul className=\"autosuggest-dropdown-list\" key={title}>\n                    <li className=\"autosuggest-dropdown-header\">{title}</li>\n                    {matches\n                      .slice(0, 100) // Limit DOM rendering to 100 results, as DOM rendering is sloooow.\n                      .map(({ original, string: text }) => {\n                        const itemProps = downshift.getItemProps({\n                          key: original,\n                          index,\n                          item: original,\n                          style: {\n                            backgroundColor: highlightedIndex === index++ ? 'lightgray' : 'white',\n                          },\n                        });\n                        return (\n                          <li\n                            key={title}\n                            {...itemProps}\n                            dangerouslySetInnerHTML={{ __html: sanitizeHTML(text, { allowedTags: ['strong'] }) }}\n                          />\n                        );\n                      })}\n                  </ul>,\n                ];\n          }, [] as JSX.Element[])\n        : [];\n\n    if (!sections.length) {\n      // This is ugly but is needed in order to sync state updates.\n      // This way we force downshift to wait React render call to complete before closeMenu to be triggered.\n      setTimeout(closeMenu);\n      return null;\n    }\n\n    return (\n      <div {...downshift.getMenuProps()} className=\"autosuggest-dropdown\">\n        {sections}\n      </div>\n    );\n  };\n\n  openMetricsExplorer = () => {\n    this.setState({\n      showMetricsExplorer: true,\n    });\n  };\n\n  updateShowMetricsExplorer = (show: boolean) => {\n    this.setState({\n      showMetricsExplorer: show,\n    });\n  };\n\n  insertAtCursor = (value: string) => {\n    if (!this.exprInputRef.current) return;\n\n    const startPosition = this.exprInputRef.current.selectionStart;\n    const endPosition = this.exprInputRef.current.selectionEnd;\n\n    const previousValue = this.exprInputRef.current.value;\n    let newValue: string;\n    if (startPosition && endPosition) {\n      newValue =\n        previousValue.substring(0, startPosition) + value + previousValue.substring(endPosition, previousValue.length);\n    } else {\n      newValue = previousValue + value;\n    }\n\n    this.setValue(newValue);\n  };\n\n  render() {\n    const { executeQuery, value } = this.props;\n    const { height } = this.state;\n    return (\n      <>\n        <Downshift onSelect={this.setValue}>\n          {downshift => (\n            <div>\n              <InputGroup className=\"expression-input\">\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    {this.props.loading ? <FontAwesomeIcon icon={faSpinner} spin /> : <FontAwesomeIcon icon={faSearch} />}\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  onInput={this.handleInput}\n                  style={{ height }}\n                  autoFocus\n                  type=\"textarea\"\n                  rows=\"1\"\n                  onKeyPress={this.handleKeyPress}\n                  placeholder=\"Expression (press Shift+Enter for newlines)\"\n                  innerRef={this.exprInputRef}\n                  {...downshift.getInputProps({\n                    onKeyDown: (event: React.KeyboardEvent): void => {\n                      switch (event.key) {\n                        case 'Home':\n                        case 'End':\n                          // We want to be able to jump to the beginning/end of the input field.\n                          // By default, Downshift otherwise jumps to the first/last suggestion item instead.\n                          (event.nativeEvent as any).preventDownshiftDefault = true;\n                          break;\n                        case 'ArrowUp':\n                        case 'ArrowDown':\n                          if (!downshift.isOpen) {\n                            (event.nativeEvent as any).preventDownshiftDefault = true;\n                          }\n                          break;\n                        case 'Enter':\n                          downshift.closeMenu();\n                          break;\n                        case 'Escape':\n                          if (!downshift.isOpen) {\n                            this.exprInputRef.current!.blur();\n                          }\n                          break;\n                        default:\n                      }\n                    },\n                  } as any)}\n                  value={value}\n                />\n                <InputGroupAddon addonType=\"append\">\n                  <Button className=\"metrics-explorer-btn\" title=\"Open metrics explorer\" onClick={this.openMetricsExplorer}>\n                    <FontAwesomeIcon icon={faGlobeEurope} />\n                  </Button>\n                </InputGroupAddon>\n                <InputGroupAddon addonType=\"append\">\n                  <Button className=\"execute-btn\" color=\"primary\" onClick={executeQuery}>\n                    Execute\n                  </Button>\n                </InputGroupAddon>\n              </InputGroup>\n              {downshift.isOpen && this.createAutocompleteSection(downshift)}\n            </div>\n          )}\n        </Downshift>\n\n        <MetricsExplorer\n          show={this.state.showMetricsExplorer}\n          updateShow={this.updateShowMetricsExplorer}\n          metrics={this.props.metricNames}\n          insertAtCursor={this.insertAtCursor}\n        />\n      </>\n    );\n  }\n}\n\nexport default ExpressionInput;\n"]},"metadata":{},"sourceType":"module"}