{"ast":null,"code":"import _slicedToArray from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment}from'react';import{Link}from'@reach/router';import{Alert,Collapse,Table,Badge}from'reactstrap';import{faChevronDown,faChevronRight}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{createExpressionLink,parsePrometheusFloat,formatDuration}from'../../utils/index';var alertColors={firing:'danger',pending:'warning',inactive:'success'};var CollapsibleAlertPanel=function CollapsibleAlertPanel(_ref){var rule=_ref.rule,showAnnotations=_ref.showAnnotations;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],toggle=_useState2[1];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Alert,{fade:false,onClick:function onClick(){return toggle(!open);},color:alertColors[rule.state],style:{cursor:'pointer'}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:open?faChevronDown:faChevronRight,fixedWidth:true}),/*#__PURE__*/React.createElement(\"strong\",null,rule.name),\" (\",\"\".concat(rule.alerts.length,\" active\"),\")\"),/*#__PURE__*/React.createElement(Collapse,{isOpen:open,className:\"mb-2\"},/*#__PURE__*/React.createElement(\"pre\",{className:\"alert-cell\"},/*#__PURE__*/React.createElement(\"code\",null,/*#__PURE__*/React.createElement(\"div\",null,\"name: \",/*#__PURE__*/React.createElement(Link,{to:createExpressionLink(\"ALERTS{alertname=\\\"\".concat(rule.name,\"\\\"}\"))},rule.name)),/*#__PURE__*/React.createElement(\"div\",null,\"expr: \",/*#__PURE__*/React.createElement(Link,{to:createExpressionLink(rule.query)},rule.query)),rule.duration>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"for: \",formatDuration(rule.duration*1000))),rule.labels&&Object.keys(rule.labels).length>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"labels:\"),Object.entries(rule.labels).map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],value=_ref3[1];return/*#__PURE__*/React.createElement(\"div\",{className:\"ml-4\",key:key},key,\": \",value);})),rule.annotations&&Object.keys(rule.annotations).length>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"annotations:\"),Object.entries(rule.annotations).map(function(_ref4){var _ref5=_slicedToArray(_ref4,2),key=_ref5[0],value=_ref5[1];return/*#__PURE__*/React.createElement(\"div\",{className:\"ml-4\",key:key},key,\": \",value);})))),rule.alerts.length>0&&/*#__PURE__*/React.createElement(Table,{bordered:true,size:\"sm\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Labels\"),/*#__PURE__*/React.createElement(\"th\",null,\"State\"),/*#__PURE__*/React.createElement(\"th\",null,\"Active Since\"),/*#__PURE__*/React.createElement(\"th\",null,\"Value\"))),/*#__PURE__*/React.createElement(\"tbody\",null,rule.alerts.map(function(alert,i){return/*#__PURE__*/React.createElement(Fragment,{key:i},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{style:{verticalAlign:'middle'}},Object.entries(alert.labels).map(function(_ref6,j){var _ref7=_slicedToArray(_ref6,2),k=_ref7[0],v=_ref7[1];return/*#__PURE__*/React.createElement(Badge,{key:j,color:\"primary\",className:\"mr-1\"},k,\"=\",v);})),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"h5\",{className:\"m-0\"},/*#__PURE__*/React.createElement(Badge,{color:alertColors[alert.state]+' text-uppercase',className:\"px-3\"},alert.state))),/*#__PURE__*/React.createElement(\"td\",null,alert.activeAt),/*#__PURE__*/React.createElement(\"td\",null,parsePrometheusFloat(alert.value))),showAnnotations&&/*#__PURE__*/React.createElement(Annotations,{annotations:alert.annotations}));})))));};export var Annotations=function Annotations(_ref8){var annotations=_ref8.annotations;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{colSpan:4},/*#__PURE__*/React.createElement(\"h5\",{className:\"font-weight-bold\"},\"Annotations\"))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{colSpan:4},Object.entries(annotations).map(function(_ref9,i){var _ref10=_slicedToArray(_ref9,2),k=_ref10[0],v=_ref10[1];return/*#__PURE__*/React.createElement(\"div\",{key:i},/*#__PURE__*/React.createElement(\"strong\",null,k),/*#__PURE__*/React.createElement(\"div\",null,v));}))));};export default CollapsibleAlertPanel;","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/src/pages/alerts/CollapsibleAlertPanel.tsx"],"names":["React","useState","Fragment","Link","Alert","Collapse","Table","Badge","faChevronDown","faChevronRight","FontAwesomeIcon","createExpressionLink","parsePrometheusFloat","formatDuration","alertColors","firing","pending","inactive","CollapsibleAlertPanel","rule","showAnnotations","open","toggle","state","cursor","name","alerts","length","query","duration","labels","Object","keys","entries","map","key","value","annotations","alert","i","verticalAlign","j","k","v","activeAt","Annotations"],"mappings":"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","sourcesContent":["import React, { FC, useState, Fragment } from 'react';\nimport { Link } from '@reach/router';\nimport { Alert, Collapse, Table, Badge } from 'reactstrap';\nimport { RuleStatus } from './AlertContents';\nimport { Rule } from '../../types/types';\nimport { faChevronDown, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { createExpressionLink, parsePrometheusFloat, formatDuration } from '../../utils/index';\n\ninterface CollapsibleAlertPanelProps {\n  rule: Rule;\n  showAnnotations: boolean;\n}\n\nconst alertColors: RuleStatus<string> = {\n  firing: 'danger',\n  pending: 'warning',\n  inactive: 'success',\n};\n\nconst CollapsibleAlertPanel: FC<CollapsibleAlertPanelProps> = ({ rule, showAnnotations }) => {\n  const [open, toggle] = useState(false);\n\n  return (\n    <>\n      <Alert fade={false} onClick={() => toggle(!open)} color={alertColors[rule.state]} style={{ cursor: 'pointer' }}>\n        <FontAwesomeIcon icon={open ? faChevronDown : faChevronRight} fixedWidth />\n        <strong>{rule.name}</strong> ({`${rule.alerts.length} active`})\n      </Alert>\n      <Collapse isOpen={open} className=\"mb-2\">\n        <pre className=\"alert-cell\">\n          <code>\n            <div>\n              name: <Link to={createExpressionLink(`ALERTS{alertname=\"${rule.name}\"}`)}>{rule.name}</Link>\n            </div>\n            <div>\n              expr: <Link to={createExpressionLink(rule.query)}>{rule.query}</Link>\n            </div>\n            {rule.duration > 0 && (\n              <div>\n                <div>for: {formatDuration(rule.duration * 1000)}</div>\n              </div>\n            )}\n            {rule.labels && Object.keys(rule.labels).length > 0 && (\n              <div>\n                <div>labels:</div>\n                {Object.entries(rule.labels).map(([key, value]) => (\n                  <div className=\"ml-4\" key={key}>\n                    {key}: {value}\n                  </div>\n                ))}\n              </div>\n            )}\n            {rule.annotations && Object.keys(rule.annotations).length > 0 && (\n              <div>\n                <div>annotations:</div>\n                {Object.entries(rule.annotations).map(([key, value]) => (\n                  <div className=\"ml-4\" key={key}>\n                    {key}: {value}\n                  </div>\n                ))}\n              </div>\n            )}\n          </code>\n        </pre>\n        {rule.alerts.length > 0 && (\n          <Table bordered size=\"sm\">\n            <thead>\n              <tr>\n                <th>Labels</th>\n                <th>State</th>\n                <th>Active Since</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {rule.alerts.map((alert, i) => {\n                return (\n                  <Fragment key={i}>\n                    <tr>\n                      <td style={{ verticalAlign: 'middle' }}>\n                        {Object.entries(alert.labels).map(([k, v], j) => {\n                          return (\n                            <Badge key={j} color=\"primary\" className=\"mr-1\">\n                              {k}={v}\n                            </Badge>\n                          );\n                        })}\n                      </td>\n                      <td>\n                        <h5 className=\"m-0\">\n                          <Badge color={alertColors[alert.state] + ' text-uppercase'} className=\"px-3\">\n                            {alert.state}\n                          </Badge>\n                        </h5>\n                      </td>\n                      <td>{alert.activeAt}</td>\n                      <td>{parsePrometheusFloat(alert.value)}</td>\n                    </tr>\n                    {showAnnotations && <Annotations annotations={alert.annotations} />}\n                  </Fragment>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </Collapse>\n    </>\n  );\n};\n\ninterface AnnotationsProps {\n  annotations: Record<string, string>;\n}\n\nexport const Annotations: FC<AnnotationsProps> = ({ annotations }) => {\n  return (\n    <Fragment>\n      <tr>\n        <td colSpan={4}>\n          <h5 className=\"font-weight-bold\">Annotations</h5>\n        </td>\n      </tr>\n      <tr>\n        <td colSpan={4}>\n          {Object.entries(annotations).map(([k, v], i) => {\n            return (\n              <div key={i}>\n                <strong>{k}</strong>\n                <div>{v}</div>\n              </div>\n            );\n          })}\n        </td>\n      </tr>\n    </Fragment>\n  );\n};\n\nexport default CollapsibleAlertPanel;\n"]},"metadata":{},"sourceType":"module"}