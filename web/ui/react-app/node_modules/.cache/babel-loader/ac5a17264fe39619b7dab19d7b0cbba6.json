{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _createForOfIteratorHelper = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar CssSyntaxError = require('./css-syntax-error');\n\nvar Stringifier = require('./stringifier');\n\nvar _require = require('./symbols'),\n    isClean = _require.isClean;\n\nvar stringify = require('./stringify');\n\nfunction cloneNode(obj, parent) {\n  var cloned = new obj.constructor();\n\n  for (var i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      // istanbul ignore next\n      continue;\n    }\n\n    if (i === 'proxyCache') continue;\n    var value = obj[i];\n    var type = typeof value;\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent;\n    } else if (i === 'source') {\n      cloned[i] = value;\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(function (j) {\n        return cloneNode(j, cloned);\n      });\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value);\n      cloned[i] = value;\n    }\n  }\n\n  return cloned;\n}\n\nvar Node = /*#__PURE__*/function () {\n  function Node() {\n    var defaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Node);\n\n    this.raws = {};\n    this[isClean] = false;\n\n    for (var name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = [];\n\n        var _iterator = _createForOfIteratorHelper(defaults[name]),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var node = _step.value;\n\n            if (typeof node.clone === 'function') {\n              this.append(node.clone());\n            } else {\n              this.append(node);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        this[name] = defaults[name];\n      }\n    }\n  }\n\n  _createClass(Node, [{\n    key: \"error\",\n    value: function error(message) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (this.source) {\n        var pos = this.positionBy(opts);\n        return this.source.input.error(message, pos.line, pos.column, opts);\n      }\n\n      return new CssSyntaxError(message);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(result, text, opts) {\n      var data = {\n        node: this\n      };\n\n      for (var i in opts) {\n        data[i] = opts[i];\n      }\n\n      return result.warn(text, data);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.parent) {\n        this.parent.removeChild(this);\n      }\n\n      this.parent = undefined;\n      return this;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var stringifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stringify;\n      if (stringifier.stringify) stringifier = stringifier.stringify;\n      var result = '';\n      stringifier(this, function (i) {\n        result += i;\n      });\n      return result;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var cloned = cloneNode(this);\n\n      for (var name in overrides) {\n        cloned[name] = overrides[name];\n      }\n\n      return cloned;\n    }\n  }, {\n    key: \"cloneBefore\",\n    value: function cloneBefore() {\n      var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var cloned = this.clone(overrides);\n      this.parent.insertBefore(this, cloned);\n      return cloned;\n    }\n  }, {\n    key: \"cloneAfter\",\n    value: function cloneAfter() {\n      var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var cloned = this.clone(overrides);\n      this.parent.insertAfter(this, cloned);\n      return cloned;\n    }\n  }, {\n    key: \"replaceWith\",\n    value: function replaceWith() {\n      if (this.parent) {\n        var bookmark = this;\n        var foundSelf = false;\n\n        for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {\n          nodes[_key] = arguments[_key];\n        }\n\n        for (var _i = 0, _nodes = nodes; _i < _nodes.length; _i++) {\n          var node = _nodes[_i];\n\n          if (node === this) {\n            foundSelf = true;\n          } else if (foundSelf) {\n            this.parent.insertAfter(bookmark, node);\n            bookmark = node;\n          } else {\n            this.parent.insertBefore(bookmark, node);\n          }\n        }\n\n        if (!foundSelf) {\n          this.remove();\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (!this.parent) return undefined;\n      var index = this.parent.index(this);\n      return this.parent.nodes[index + 1];\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      if (!this.parent) return undefined;\n      var index = this.parent.index(this);\n      return this.parent.nodes[index - 1];\n    }\n  }, {\n    key: \"before\",\n    value: function before(add) {\n      this.parent.insertBefore(this, add);\n      return this;\n    }\n  }, {\n    key: \"after\",\n    value: function after(add) {\n      this.parent.insertAfter(this, add);\n      return this;\n    }\n  }, {\n    key: \"root\",\n    value: function root() {\n      var result = this;\n\n      while (result.parent) {\n        result = result.parent;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"raw\",\n    value: function raw(prop, defaultType) {\n      var str = new Stringifier();\n      return str.raw(this, prop, defaultType);\n    }\n  }, {\n    key: \"cleanRaws\",\n    value: function cleanRaws(keepBetween) {\n      delete this.raws.before;\n      delete this.raws.after;\n      if (!keepBetween) delete this.raws.between;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, inputs) {\n      var fixed = {};\n      var emitInputs = inputs == null;\n      inputs = inputs || new Map();\n      var inputsNextIndex = 0;\n\n      for (var name in this) {\n        if (!Object.prototype.hasOwnProperty.call(this, name)) {\n          // istanbul ignore next\n          continue;\n        }\n\n        if (name === 'parent' || name === 'proxyCache') continue;\n        var value = this[name];\n\n        if (Array.isArray(value)) {\n          fixed[name] = value.map(function (i) {\n            if (typeof i === 'object' && i.toJSON) {\n              return i.toJSON(null, inputs);\n            } else {\n              return i;\n            }\n          });\n        } else if (typeof value === 'object' && value.toJSON) {\n          fixed[name] = value.toJSON(null, inputs);\n        } else if (name === 'source') {\n          var inputId = inputs.get(value.input);\n\n          if (inputId == null) {\n            inputId = inputsNextIndex;\n            inputs.set(value.input, inputsNextIndex);\n            inputsNextIndex++;\n          }\n\n          fixed[name] = {\n            inputId: inputId,\n            start: value.start,\n            end: value.end\n          };\n        } else {\n          fixed[name] = value;\n        }\n      }\n\n      if (emitInputs) {\n        fixed.inputs = _toConsumableArray(inputs.keys()).map(function (input) {\n          return input.toJSON();\n        });\n      }\n\n      return fixed;\n    }\n  }, {\n    key: \"positionInside\",\n    value: function positionInside(index) {\n      var string = this.toString();\n      var column = this.source.start.column;\n      var line = this.source.start.line;\n\n      for (var i = 0; i < index; i++) {\n        if (string[i] === '\\n') {\n          column = 1;\n          line += 1;\n        } else {\n          column += 1;\n        }\n      }\n\n      return {\n        line: line,\n        column: column\n      };\n    }\n  }, {\n    key: \"positionBy\",\n    value: function positionBy(opts) {\n      var pos = this.source.start;\n\n      if (opts.index) {\n        pos = this.positionInside(opts.index);\n      } else if (opts.word) {\n        var index = this.toString().indexOf(opts.word);\n        if (index !== -1) pos = this.positionInside(index);\n      }\n\n      return pos;\n    }\n  }, {\n    key: \"getProxyProcessor\",\n    value: function getProxyProcessor() {\n      return {\n        set: function set(node, prop, value) {\n          if (node[prop] === value) return true;\n          node[prop] = value;\n\n          if (prop === 'prop' || prop === 'value' || prop === 'name' || prop === 'params' || prop === 'important' || prop === 'text') {\n            node.markDirty();\n          }\n\n          return true;\n        },\n        get: function get(node, prop) {\n          if (prop === 'proxyOf') {\n            return node;\n          } else if (prop === 'root') {\n            return function () {\n              return node.root().toProxy();\n            };\n          } else {\n            return node[prop];\n          }\n        }\n      };\n    }\n  }, {\n    key: \"toProxy\",\n    value: function toProxy() {\n      if (!this.proxyCache) {\n        this.proxyCache = new Proxy(this, this.getProxyProcessor());\n      }\n\n      return this.proxyCache;\n    }\n  }, {\n    key: \"addToError\",\n    value: function addToError(error) {\n      error.postcssNode = this;\n\n      if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n        var s = this.source;\n        error.stack = error.stack.replace(/\\n\\s{4}at /, \"$&\".concat(s.input.from, \":\").concat(s.start.line, \":\").concat(s.start.column, \"$&\"));\n      }\n\n      return error;\n    }\n  }, {\n    key: \"markDirty\",\n    value: function markDirty() {\n      if (this[isClean]) {\n        this[isClean] = false;\n        var next = this;\n\n        while (next = next.parent) {\n          next[isClean] = false;\n        }\n      }\n    }\n  }, {\n    key: \"proxyOf\",\n    get: function get() {\n      return this;\n    }\n  }]);\n\n  return Node;\n}();\n\nmodule.exports = Node;\nNode.default = Node;","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/sanitize-html/node_modules/postcss/lib/node.js"],"names":["CssSyntaxError","require","Stringifier","isClean","stringify","cloneNode","obj","parent","cloned","constructor","i","Object","prototype","hasOwnProperty","call","value","type","Array","isArray","map","j","Node","defaults","raws","name","nodes","node","clone","append","message","opts","source","pos","positionBy","input","error","line","column","result","text","data","warn","removeChild","undefined","stringifier","overrides","insertBefore","insertAfter","bookmark","foundSelf","remove","index","add","prop","defaultType","str","raw","keepBetween","before","after","between","_","inputs","fixed","emitInputs","Map","inputsNextIndex","toJSON","inputId","get","set","start","end","keys","string","toString","positionInside","word","indexOf","markDirty","root","toProxy","proxyCache","Proxy","getProxyProcessor","postcssNode","stack","test","s","replace","from","next","module","exports","default"],"mappings":"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","sourcesContent":["'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet { isClean } = require('./symbols')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      // istanbul ignore next\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let pos = this.positionBy(opts)\n      return this.source.input.error(message, pos.line, pos.column, opts)\n    }\n    return new CssSyntaxError(message)\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent) result = result.parent\n    return result\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        // istanbul ignore next\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          inputId,\n          start: value.start,\n          end: value.end\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  positionInside(index) {\n    let string = this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { line, column }\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n"]},"metadata":{},"sourceType":"script"}