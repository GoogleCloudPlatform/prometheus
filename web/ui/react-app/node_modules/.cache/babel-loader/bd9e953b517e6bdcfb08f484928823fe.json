{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _slicedToArray = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _objectSpread = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar MapGenerator = require('./map-generator');\n\nvar _require = require('./symbols'),\n    isClean = _require.isClean;\n\nvar _stringify = require('./stringify');\n\nvar warnOnce = require('./warn-once');\n\nvar Result = require('./result');\n\nvar parse = require('./parse');\n\nvar Root = require('./root');\n\nvar TYPE_TO_CLASS_NAME = {\n  root: 'Root',\n  atrule: 'AtRule',\n  rule: 'Rule',\n  decl: 'Declaration',\n  comment: 'Comment'\n};\nvar PLUGIN_PROPS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true,\n  Root: true,\n  Declaration: true,\n  Rule: true,\n  AtRule: true,\n  Comment: true,\n  DeclarationExit: true,\n  RuleExit: true,\n  AtRuleExit: true,\n  CommentExit: true,\n  RootExit: true,\n  OnceExit: true\n};\nvar NOT_VISITORS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true\n};\nvar CHILDREN = 0;\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function';\n}\n\nfunction getEvents(node) {\n  var key = false;\n  var type = TYPE_TO_CLASS_NAME[node.type];\n\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase();\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase();\n  }\n\n  if (key && node.append) {\n    return [type, type + '-' + key, CHILDREN, type + 'Exit', type + 'Exit-' + key];\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key];\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit'];\n  } else {\n    return [type, type + 'Exit'];\n  }\n}\n\nfunction toStack(node) {\n  var events;\n\n  if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit'];\n  } else {\n    events = getEvents(node);\n  }\n\n  return {\n    node: node,\n    events: events,\n    eventIndex: 0,\n    visitors: [],\n    visitorIndex: 0,\n    iterator: 0\n  };\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false;\n  if (node.nodes) node.nodes.forEach(function (i) {\n    return cleanMarks(i);\n  });\n  return node;\n}\n\nvar postcss = {};\n\nvar LazyResult = /*#__PURE__*/function () {\n  function LazyResult(processor, css, opts) {\n    var _this = this;\n\n    _classCallCheck(this, LazyResult);\n\n    this.stringified = false;\n    this.processed = false;\n    var root;\n\n    if (typeof css === 'object' && css !== null && css.type === 'root') {\n      root = cleanMarks(css);\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root);\n\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {};\n        if (!opts.map.inline) opts.map.inline = false;\n        opts.map.prev = css.map;\n      }\n    } else {\n      var parser = parse;\n      if (opts.syntax) parser = opts.syntax.parse;\n      if (opts.parser) parser = opts.parser;\n      if (parser.parse) parser = parser.parse;\n\n      try {\n        root = parser(css, opts);\n      } catch (error) {\n        this.processed = true;\n        this.error = error;\n      }\n    }\n\n    this.result = new Result(processor, root, opts);\n    this.helpers = _objectSpread(_objectSpread({}, postcss), {}, {\n      result: this.result,\n      postcss: postcss\n    });\n    this.plugins = this.processor.plugins.map(function (plugin) {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return _objectSpread(_objectSpread({}, plugin), plugin.prepare(_this.result));\n      } else {\n        return plugin;\n      }\n    });\n  }\n\n  _createClass(LazyResult, [{\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'LazyResult';\n    }\n  }, {\n    key: \"processor\",\n    get: function get() {\n      return this.result.processor;\n    }\n  }, {\n    key: \"opts\",\n    get: function get() {\n      return this.result.opts;\n    }\n  }, {\n    key: \"css\",\n    get: function get() {\n      return this.stringify().css;\n    }\n  }, {\n    key: \"content\",\n    get: function get() {\n      return this.stringify().content;\n    }\n  }, {\n    key: \"map\",\n    get: function get() {\n      return this.stringify().map;\n    }\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.sync().root;\n    }\n  }, {\n    key: \"messages\",\n    get: function get() {\n      return this.sync().messages;\n    }\n  }, {\n    key: \"warnings\",\n    value: function warnings() {\n      return this.sync().warnings();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.css;\n    }\n  }, {\n    key: \"then\",\n    value: function then(onFulfilled, onRejected) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!('from' in this.opts)) {\n          warnOnce('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');\n        }\n      }\n\n      return this.async().then(onFulfilled, onRejected);\n    }\n  }, {\n    key: \"catch\",\n    value: function _catch(onRejected) {\n      return this.async().catch(onRejected);\n    }\n  }, {\n    key: \"finally\",\n    value: function _finally(onFinally) {\n      return this.async().then(onFinally, onFinally);\n    }\n  }, {\n    key: \"async\",\n    value: function async() {\n      if (this.error) return Promise.reject(this.error);\n      if (this.processed) return Promise.resolve(this.result);\n\n      if (!this.processing) {\n        this.processing = this.runAsync();\n      }\n\n      return this.processing;\n    }\n  }, {\n    key: \"sync\",\n    value: function sync() {\n      if (this.error) throw this.error;\n      if (this.processed) return this.result;\n      this.processed = true;\n\n      if (this.processing) {\n        throw this.getAsyncError();\n      }\n\n      var _iterator = _createForOfIteratorHelper(this.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var plugin = _step.value;\n          var promise = this.runOnRoot(plugin);\n\n          if (isPromise(promise)) {\n            throw this.getAsyncError();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.prepareVisitors();\n\n      if (this.hasListener) {\n        var root = this.result.root;\n\n        while (!root[isClean]) {\n          root[isClean] = true;\n          this.walkSync(root);\n        }\n\n        if (this.listeners.OnceExit) {\n          this.visitSync(this.listeners.OnceExit, root);\n        }\n      }\n\n      return this.result;\n    }\n  }, {\n    key: \"stringify\",\n    value: function stringify() {\n      if (this.error) throw this.error;\n      if (this.stringified) return this.result;\n      this.stringified = true;\n      this.sync();\n      var opts = this.result.opts;\n      var str = _stringify;\n      if (opts.syntax) str = opts.syntax.stringify;\n      if (opts.stringifier) str = opts.stringifier;\n      if (str.stringify) str = str.stringify;\n      var map = new MapGenerator(str, this.result.root, this.result.opts);\n      var data = map.generate();\n      this.result.css = data[0];\n      this.result.map = data[1];\n      return this.result;\n    }\n  }, {\n    key: \"walkSync\",\n    value: function walkSync(node) {\n      var _this2 = this;\n\n      node[isClean] = true;\n      var events = getEvents(node);\n\n      var _iterator2 = _createForOfIteratorHelper(events),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var event = _step2.value;\n\n          if (event === CHILDREN) {\n            if (node.nodes) {\n              node.each(function (child) {\n                if (!child[isClean]) _this2.walkSync(child);\n              });\n            }\n          } else {\n            var visitors = this.listeners[event];\n\n            if (visitors) {\n              if (this.visitSync(visitors, node.toProxy())) return;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"visitSync\",\n    value: function visitSync(visitors, node) {\n      var _iterator3 = _createForOfIteratorHelper(visitors),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              plugin = _step3$value[0],\n              visitor = _step3$value[1];\n\n          this.result.lastPlugin = plugin;\n          var promise = void 0;\n\n          try {\n            promise = visitor(node, this.helpers);\n          } catch (e) {\n            throw this.handleError(e, node.proxyOf);\n          }\n\n          if (node.type !== 'root' && !node.parent) return true;\n\n          if (isPromise(promise)) {\n            throw this.getAsyncError();\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"runOnRoot\",\n    value: function runOnRoot(plugin) {\n      this.result.lastPlugin = plugin;\n\n      try {\n        if (typeof plugin === 'object' && plugin.Once) {\n          return plugin.Once(this.result.root, this.helpers);\n        } else if (typeof plugin === 'function') {\n          return plugin(this.result.root, this.result);\n        }\n      } catch (error) {\n        throw this.handleError(error);\n      }\n    }\n  }, {\n    key: \"getAsyncError\",\n    value: function getAsyncError() {\n      throw new Error('Use process(css).then(cb) to work with async plugins');\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(error, node) {\n      var plugin = this.result.lastPlugin;\n\n      try {\n        if (node) node.addToError(error);\n        this.error = error;\n\n        if (error.name === 'CssSyntaxError' && !error.plugin) {\n          error.plugin = plugin.postcssPlugin;\n          error.setMessage();\n        } else if (plugin.postcssVersion) {\n          if (process.env.NODE_ENV !== 'production') {\n            var pluginName = plugin.postcssPlugin;\n            var pluginVer = plugin.postcssVersion;\n            var runtimeVer = this.result.processor.version;\n            var a = pluginVer.split('.');\n            var b = runtimeVer.split('.');\n\n            if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n              console.error('Unknown error from PostCSS plugin. Your current PostCSS ' + 'version is ' + runtimeVer + ', but ' + pluginName + ' uses ' + pluginVer + '. Perhaps this is the source of the error below.');\n            }\n          }\n        }\n      } catch (err) {\n        // istanbul ignore next\n        if (console && console.error) console.error(err);\n      }\n\n      return error;\n    }\n  }, {\n    key: \"runAsync\",\n    value: function () {\n      var _runAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var i, plugin, promise, root, stack, _promise, node, _iterator4, _step4, _step4$value, _plugin, visitor;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.plugin = 0;\n                i = 0;\n\n              case 2:\n                if (!(i < this.plugins.length)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                plugin = this.plugins[i];\n                promise = this.runOnRoot(plugin);\n\n                if (!isPromise(promise)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.prev = 6;\n                _context.next = 9;\n                return promise;\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](6);\n                throw this.handleError(_context.t0);\n\n              case 14:\n                i++;\n                _context.next = 2;\n                break;\n\n              case 17:\n                this.prepareVisitors();\n\n                if (!this.hasListener) {\n                  _context.next = 64;\n                  break;\n                }\n\n                root = this.result.root;\n\n              case 20:\n                if (root[isClean]) {\n                  _context.next = 39;\n                  break;\n                }\n\n                root[isClean] = true;\n                stack = [toStack(root)];\n\n              case 23:\n                if (!(stack.length > 0)) {\n                  _context.next = 37;\n                  break;\n                }\n\n                _promise = this.visitTick(stack);\n\n                if (!isPromise(_promise)) {\n                  _context.next = 35;\n                  break;\n                }\n\n                _context.prev = 26;\n                _context.next = 29;\n                return _promise;\n\n              case 29:\n                _context.next = 35;\n                break;\n\n              case 31:\n                _context.prev = 31;\n                _context.t1 = _context[\"catch\"](26);\n                node = stack[stack.length - 1].node;\n                throw this.handleError(_context.t1, node);\n\n              case 35:\n                _context.next = 23;\n                break;\n\n              case 37:\n                _context.next = 20;\n                break;\n\n              case 39:\n                if (!this.listeners.OnceExit) {\n                  _context.next = 64;\n                  break;\n                }\n\n                _iterator4 = _createForOfIteratorHelper(this.listeners.OnceExit);\n                _context.prev = 41;\n\n                _iterator4.s();\n\n              case 43:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context.next = 56;\n                  break;\n                }\n\n                _step4$value = _slicedToArray(_step4.value, 2), _plugin = _step4$value[0], visitor = _step4$value[1];\n                this.result.lastPlugin = _plugin;\n                _context.prev = 46;\n                _context.next = 49;\n                return visitor(root, this.helpers);\n\n              case 49:\n                _context.next = 54;\n                break;\n\n              case 51:\n                _context.prev = 51;\n                _context.t2 = _context[\"catch\"](46);\n                throw this.handleError(_context.t2);\n\n              case 54:\n                _context.next = 43;\n                break;\n\n              case 56:\n                _context.next = 61;\n                break;\n\n              case 58:\n                _context.prev = 58;\n                _context.t3 = _context[\"catch\"](41);\n\n                _iterator4.e(_context.t3);\n\n              case 61:\n                _context.prev = 61;\n\n                _iterator4.f();\n\n                return _context.finish(61);\n\n              case 64:\n                this.processed = true;\n                return _context.abrupt(\"return\", this.stringify());\n\n              case 66:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 11], [26, 31], [41, 58, 61, 64], [46, 51]]);\n      }));\n\n      function runAsync() {\n        return _runAsync.apply(this, arguments);\n      }\n\n      return runAsync;\n    }()\n  }, {\n    key: \"prepareVisitors\",\n    value: function prepareVisitors() {\n      var _this3 = this;\n\n      this.listeners = {};\n\n      var add = function add(plugin, type, cb) {\n        if (!_this3.listeners[type]) _this3.listeners[type] = [];\n\n        _this3.listeners[type].push([plugin, cb]);\n      };\n\n      var _iterator5 = _createForOfIteratorHelper(this.plugins),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var plugin = _step5.value;\n\n          if (typeof plugin === 'object') {\n            for (var event in plugin) {\n              if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n                throw new Error(\"Unknown event \".concat(event, \" in \").concat(plugin.postcssPlugin, \". \") + \"Try to update PostCSS (\".concat(this.processor.version, \" now).\"));\n              }\n\n              if (!NOT_VISITORS[event]) {\n                if (typeof plugin[event] === 'object') {\n                  for (var filter in plugin[event]) {\n                    if (filter === '*') {\n                      add(plugin, event, plugin[event][filter]);\n                    } else {\n                      add(plugin, event + '-' + filter.toLowerCase(), plugin[event][filter]);\n                    }\n                  }\n                } else if (typeof plugin[event] === 'function') {\n                  add(plugin, event, plugin[event]);\n                }\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.hasListener = Object.keys(this.listeners).length > 0;\n    }\n  }, {\n    key: \"visitTick\",\n    value: function visitTick(stack) {\n      var visit = stack[stack.length - 1];\n      var node = visit.node,\n          visitors = visit.visitors;\n\n      if (node.type !== 'root' && !node.parent) {\n        stack.pop();\n        return;\n      }\n\n      if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n        var _visitors$visit$visit = _slicedToArray(visitors[visit.visitorIndex], 2),\n            plugin = _visitors$visit$visit[0],\n            visitor = _visitors$visit$visit[1];\n\n        visit.visitorIndex += 1;\n\n        if (visit.visitorIndex === visitors.length) {\n          visit.visitors = [];\n          visit.visitorIndex = 0;\n        }\n\n        this.result.lastPlugin = plugin;\n\n        try {\n          return visitor(node.toProxy(), this.helpers);\n        } catch (e) {\n          throw this.handleError(e, node);\n        }\n      }\n\n      if (visit.iterator !== 0) {\n        var iterator = visit.iterator;\n        var child;\n\n        while (child = node.nodes[node.indexes[iterator]]) {\n          node.indexes[iterator] += 1;\n\n          if (!child[isClean]) {\n            child[isClean] = true;\n            stack.push(toStack(child));\n            return;\n          }\n        }\n\n        visit.iterator = 0;\n        delete node.indexes[iterator];\n      }\n\n      var events = visit.events;\n\n      while (visit.eventIndex < events.length) {\n        var event = events[visit.eventIndex];\n        visit.eventIndex += 1;\n\n        if (event === CHILDREN) {\n          if (node.nodes && node.nodes.length) {\n            node[isClean] = true;\n            visit.iterator = node.getIterator();\n          }\n\n          return;\n        } else if (this.listeners[event]) {\n          visit.visitors = this.listeners[event];\n          return;\n        }\n      }\n\n      stack.pop();\n    }\n  }]);\n\n  return LazyResult;\n}();\n\nLazyResult.registerPostcss = function (dependant) {\n  postcss = dependant;\n};\n\nmodule.exports = LazyResult;\nLazyResult.default = LazyResult;\nRoot.registerLazyResult(LazyResult);","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/sanitize-html/node_modules/postcss/lib/lazy-result.js"],"names":["MapGenerator","require","isClean","stringify","warnOnce","Result","parse","Root","TYPE_TO_CLASS_NAME","root","atrule","rule","decl","comment","PLUGIN_PROPS","postcssPlugin","prepare","Once","Declaration","Rule","AtRule","Comment","DeclarationExit","RuleExit","AtRuleExit","CommentExit","RootExit","OnceExit","NOT_VISITORS","CHILDREN","isPromise","obj","then","getEvents","node","key","type","prop","toLowerCase","name","append","toStack","events","eventIndex","visitors","visitorIndex","iterator","cleanMarks","nodes","forEach","i","postcss","LazyResult","processor","css","opts","stringified","processed","map","inline","prev","parser","syntax","error","result","helpers","plugins","plugin","Symbol","toStringTag","content","sync","messages","warnings","onFulfilled","onRejected","process","env","NODE_ENV","async","catch","onFinally","Promise","reject","resolve","processing","runAsync","getAsyncError","promise","runOnRoot","prepareVisitors","hasListener","walkSync","listeners","visitSync","str","stringifier","data","generate","event","each","child","toProxy","visitor","lastPlugin","e","handleError","proxyOf","parent","Error","addToError","setMessage","postcssVersion","pluginName","pluginVer","runtimeVer","version","a","split","b","parseInt","console","err","length","stack","visitTick","add","cb","push","test","filter","Object","keys","visit","pop","indexes","getIterator","registerPostcss","dependant","module","exports","default","registerLazyResult"],"mappings":"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","sourcesContent":["'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet { isClean } = require('./symbols')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  root: 'Root',\n  atrule: 'AtRule',\n  rule: 'Rule',\n  decl: 'Declaration',\n  comment: 'Comment'\n}\n\nconst PLUGIN_PROPS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true,\n  Root: true,\n  Declaration: true,\n  Rule: true,\n  AtRule: true,\n  Comment: true,\n  DeclarationExit: true,\n  RuleExit: true,\n  AtRuleExit: true,\n  CommentExit: true,\n  RootExit: true,\n  OnceExit: true\n}\n\nconst NOT_VISITORS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    node,\n    events,\n    eventIndex: 0,\n    visitors: [],\n    visitorIndex: 0,\n    iterator: 0\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (typeof css === 'object' && css !== null && css.type === 'root') {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, result: this.result, postcss }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  toString() {\n    return this.css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        this.visitSync(this.listeners.OnceExit, root)\n      }\n    }\n\n    return this.result\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && !node.parent) return true\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      // istanbul ignore next\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            await visitor(root, this.helpers)\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\n"]},"metadata":{},"sourceType":"script"}