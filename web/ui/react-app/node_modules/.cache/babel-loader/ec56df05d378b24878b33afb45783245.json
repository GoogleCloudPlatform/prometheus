{"ast":null,"code":"import React,{useEffect}from'react';import{Form,Button,ButtonGroup}from'reactstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faMoon,faSun,faAdjust}from'@fortawesome/free-solid-svg-icons';import{useTheme}from'./contexts/ThemeContext';export var themeLocalStorageKey='user-prefers-color-scheme';export var Theme=function Theme(){var _useTheme=useTheme(),theme=_useTheme.theme;useEffect(function(){document.body.classList.toggle('bootstrap-dark',theme==='dark');document.body.classList.toggle('bootstrap',theme==='light');},[theme]);return null;};export var ThemeToggle=function ThemeToggle(){var _useTheme2=useTheme(),userPreference=_useTheme2.userPreference,setTheme=_useTheme2.setTheme;return/*#__PURE__*/React.createElement(Form,{className:\"ml-auto\",inline:true},/*#__PURE__*/React.createElement(ButtonGroup,{size:\"sm\"},/*#__PURE__*/React.createElement(Button,{color:\"secondary\",title:\"Use light theme\",active:userPreference==='light',onClick:function onClick(){return setTheme('light');}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSun,className:userPreference==='light'?'text-white':'text-dark'})),/*#__PURE__*/React.createElement(Button,{color:\"secondary\",title:\"Use dark theme\",active:userPreference==='dark',onClick:function onClick(){return setTheme('dark');}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faMoon,className:userPreference==='dark'?'text-white':'text-dark'})),/*#__PURE__*/React.createElement(Button,{color:\"secondary\",title:\"Use browser-preferred theme\",active:userPreference==='auto',onClick:function onClick(){return setTheme('auto');}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faAdjust,className:userPreference==='auto'?'text-white':'text-dark'}))));};","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/src/Theme.tsx"],"names":["React","useEffect","Form","Button","ButtonGroup","FontAwesomeIcon","faMoon","faSun","faAdjust","useTheme","themeLocalStorageKey","Theme","theme","document","body","classList","toggle","ThemeToggle","userPreference","setTheme"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAoBC,SAApB,KAAqC,OAArC,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,WAAvB,KAA0C,YAA1C,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,QAAxB,KAAwC,mCAAxC,CACA,OAASC,QAAT,KAAyB,yBAAzB,CAEA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,2BAA7B,CAEP,MAAO,IAAMC,CAAAA,KAAS,CAAG,QAAZA,CAAAA,KAAY,EAAM,CAC7B,cAAkBF,QAAQ,EAA1B,CAAQG,KAAR,WAAQA,KAAR,CAEAX,SAAS,CAAC,UAAM,CACdY,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,gBAA/B,CAAiDJ,KAAK,GAAK,MAA3D,EACAC,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,WAA/B,CAA4CJ,KAAK,GAAK,OAAtD,EACD,CAHQ,CAGN,CAACA,KAAD,CAHM,CAAT,CAKA,MAAO,KAAP,CACD,CATM,CAWP,MAAO,IAAMK,CAAAA,WAAe,CAAG,QAAlBA,CAAAA,WAAkB,EAAM,CACnC,eAAqCR,QAAQ,EAA7C,CAAQS,cAAR,YAAQA,cAAR,CAAwBC,QAAxB,YAAwBA,QAAxB,CAEA,mBACE,oBAAC,IAAD,EAAM,SAAS,CAAC,SAAhB,CAA0B,MAAM,KAAhC,eACE,oBAAC,WAAD,EAAa,IAAI,CAAC,IAAlB,eACE,oBAAC,MAAD,EACE,KAAK,CAAC,WADR,CAEE,KAAK,CAAC,iBAFR,CAGE,MAAM,CAAED,cAAc,GAAK,OAH7B,CAIE,OAAO,CAAE,yBAAMC,CAAAA,QAAQ,CAAC,OAAD,CAAd,EAJX,eAME,oBAAC,eAAD,EAAiB,IAAI,CAAEZ,KAAvB,CAA8B,SAAS,CAAEW,cAAc,GAAK,OAAnB,CAA6B,YAA7B,CAA4C,WAArF,EANF,CADF,cASE,oBAAC,MAAD,EAAQ,KAAK,CAAC,WAAd,CAA0B,KAAK,CAAC,gBAAhC,CAAiD,MAAM,CAAEA,cAAc,GAAK,MAA5E,CAAoF,OAAO,CAAE,yBAAMC,CAAAA,QAAQ,CAAC,MAAD,CAAd,EAA7F,eACE,oBAAC,eAAD,EAAiB,IAAI,CAAEb,MAAvB,CAA+B,SAAS,CAAEY,cAAc,GAAK,MAAnB,CAA4B,YAA5B,CAA2C,WAArF,EADF,CATF,cAYE,oBAAC,MAAD,EACE,KAAK,CAAC,WADR,CAEE,KAAK,CAAC,6BAFR,CAGE,MAAM,CAAEA,cAAc,GAAK,MAH7B,CAIE,OAAO,CAAE,yBAAMC,CAAAA,QAAQ,CAAC,MAAD,CAAd,EAJX,eAME,oBAAC,eAAD,EAAiB,IAAI,CAAEX,QAAvB,CAAiC,SAAS,CAAEU,cAAc,GAAK,MAAnB,CAA4B,YAA5B,CAA2C,WAAvF,EANF,CAZF,CADF,CADF,CAyBD,CA5BM","sourcesContent":["import React, { FC, useEffect } from 'react';\nimport { Form, Button, ButtonGroup } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMoon, faSun, faAdjust } from '@fortawesome/free-solid-svg-icons';\nimport { useTheme } from './contexts/ThemeContext';\n\nexport const themeLocalStorageKey = 'user-prefers-color-scheme';\n\nexport const Theme: FC = () => {\n  const { theme } = useTheme();\n\n  useEffect(() => {\n    document.body.classList.toggle('bootstrap-dark', theme === 'dark');\n    document.body.classList.toggle('bootstrap', theme === 'light');\n  }, [theme]);\n\n  return null;\n};\n\nexport const ThemeToggle: FC = () => {\n  const { userPreference, setTheme } = useTheme();\n\n  return (\n    <Form className=\"ml-auto\" inline>\n      <ButtonGroup size=\"sm\">\n        <Button\n          color=\"secondary\"\n          title=\"Use light theme\"\n          active={userPreference === 'light'}\n          onClick={() => setTheme('light')}\n        >\n          <FontAwesomeIcon icon={faSun} className={userPreference === 'light' ? 'text-white' : 'text-dark'} />\n        </Button>\n        <Button color=\"secondary\" title=\"Use dark theme\" active={userPreference === 'dark'} onClick={() => setTheme('dark')}>\n          <FontAwesomeIcon icon={faMoon} className={userPreference === 'dark' ? 'text-white' : 'text-dark'} />\n        </Button>\n        <Button\n          color=\"secondary\"\n          title=\"Use browser-preferred theme\"\n          active={userPreference === 'auto'}\n          onClick={() => setTheme('auto')}\n        >\n          <FontAwesomeIcon icon={faAdjust} className={userPreference === 'auto' ? 'text-white' : 'text-dark'} />\n        </Button>\n      </ButtonGroup>\n    </Form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}