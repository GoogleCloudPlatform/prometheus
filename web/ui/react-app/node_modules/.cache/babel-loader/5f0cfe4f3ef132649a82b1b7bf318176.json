{"ast":null,"code":"/**\n *\n * THIS FILE WAS COPIED INTO PROMETHEUS FROM GRAFANA'S VENDORED FORK OF FLOT\n * (LIVING AT https://github.com/grafana/grafana/tree/master/public/vendor/flot),\n * WHICH CONTAINS FIXES FOR DISPLAYING NULL VALUES IN STACKED GRAPHS. THE ORIGINAL\n * FLOT CODE WAS LICENSED UNDER THE MIT LICENSE AS STATED BELOW. ADDITIONAL\n * CHANGES HAVE BEEN CONTRIBUTED TO THE GRAFANA FORK UNDER AN APACHE 2 LICENSE, SEE\n * https://github.com/grafana/grafana/blob/master/license.\n *\n */ /* eslint-disable prefer-rest-params */ /* eslint-disable no-useless-concat */ /* eslint-disable default-case */ /* eslint-disable prefer-spread */ /* eslint-disable no-loop-func */ /* eslint-disable @typescript-eslint/no-this-alias */ /* eslint-disable no-redeclare */ /* eslint-disable no-useless-escape */ /* eslint-disable prefer-const */ /* eslint-disable @typescript-eslint/explicit-function-return-type */ /* eslint-disable @typescript-eslint/no-use-before-define */ /* eslint-disable eqeqeq */ /* eslint-disable no-var */ /* Pretty handling of time axes.\n\nCopyright (c) 2007-2013 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\nAPI.txt for details.\n\n*/(function($){var options={xaxis:{timezone:null,// \"browser\" for local to the client or timezone for timezone-js\ntimeformat:null,// format string to use\ntwelveHourClock:false,// 12 or 24 time in time mode\nmonthNames:null// list of names of months\n}};// round to nearby lower multiple of base\nfunction floorInBase(n,base){return base*Math.floor(n/base);}// Returns a string with the date d formatted according to fmt.\n// A subset of the Open Group's strftime format is supported.\nfunction formatDate(d,fmt,monthNames,dayNames){if(typeof d.strftime=='function'){return d.strftime(fmt);}var leftPad=function leftPad(n,pad){n=''+n;pad=''+(pad==null?'0':pad);return n.length==1?pad+n:n;};var r=[];var escape=false;var hours=d.getHours();var isAM=hours<12;if(monthNames==null){monthNames=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];}if(dayNames==null){dayNames=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];}var hours12;if(hours>12){hours12=hours-12;}else if(hours==0){hours12=12;}else{hours12=hours;}for(var i=0;i<fmt.length;++i){var c=fmt.charAt(i);if(escape){switch(c){case'a':c=''+dayNames[d.getDay()];break;case'b':c=''+monthNames[d.getMonth()];break;case'd':c=leftPad(d.getDate(),'');break;case'e':c=leftPad(d.getDate(),' ');break;case'h':// For back-compat with 0.7; remove in 1.0\ncase'H':c=leftPad(hours);break;case'I':c=leftPad(hours12);break;case'l':c=leftPad(hours12,' ');break;case'm':c=leftPad(d.getMonth()+1,'');break;case'M':c=leftPad(d.getMinutes());break;// quarters not in Open Group's strftime specification\ncase'q':c=''+(Math.floor(d.getMonth()/3)+1);break;case'S':c=leftPad(d.getSeconds());break;case'y':c=leftPad(d.getFullYear()%100);break;case'Y':c=''+d.getFullYear();break;case'p':c=isAM?''+'am':''+'pm';break;case'P':c=isAM?''+'AM':''+'PM';break;case'w':c=''+d.getDay();break;}r.push(c);escape=false;}else{if(c=='%'){escape=true;}else{r.push(c);}}}return r.join('');}// To have a consistent view of time-based data independent of which time\n// zone the client happens to be in we need a date-like object independent\n// of time zones.  This is done through a wrapper that only calls the UTC\n// versions of the accessor methods.\nfunction makeUtcWrapper(d){function addProxyMethod(sourceObj,sourceMethod,targetObj,targetMethod){sourceObj[sourceMethod]=function(){return targetObj[targetMethod].apply(targetObj,arguments);};}var utc={date:d};// support strftime, if found\nif(d.strftime!=undefined){addProxyMethod(utc,'strftime',d,'strftime');}addProxyMethod(utc,'getTime',d,'getTime');addProxyMethod(utc,'setTime',d,'setTime');var props=['Date','Day','FullYear','Hours','Milliseconds','Minutes','Month','Seconds'];for(var p=0;p<props.length;p++){addProxyMethod(utc,'get'+props[p],d,'getUTC'+props[p]);addProxyMethod(utc,'set'+props[p],d,'setUTC'+props[p]);}return utc;}// select time zone strategy.  This returns a date-like object tied to the\n// desired timezone\nfunction dateGenerator(ts,opts){if(opts.timezone=='browser'){return new Date(ts);}else if(!opts.timezone||opts.timezone=='utc'){return makeUtcWrapper(new Date(ts));}// } else if (typeof timezoneJS != 'undefined' && typeof timezoneJS.Date != 'undefined') {\n//   const d = new timezoneJS.Date();\n//   // timezone-js is fickle, so be sure to set the time zone before\n//   // setting the time.\n//   d.setTimezone(opts.timezone);\n//   d.setTime(ts);\n//   return d;\n// }\nreturn makeUtcWrapper(new Date(ts));}// map of app. size of time units in milliseconds\nvar timeUnitSize={second:1000,minute:60*1000,hour:60*60*1000,day:24*60*60*1000,month:30*24*60*60*1000,quarter:3*30*24*60*60*1000,year:365.2425*24*60*60*1000};// the allowed tick sizes, after 1 year we use\n// an integer algorithm\nvar baseSpec=[[1,'second'],[2,'second'],[5,'second'],[10,'second'],[30,'second'],[1,'minute'],[2,'minute'],[5,'minute'],[10,'minute'],[30,'minute'],[1,'hour'],[2,'hour'],[4,'hour'],[8,'hour'],[12,'hour'],[1,'day'],[2,'day'],[3,'day'],[0.25,'month'],[0.5,'month'],[1,'month'],[2,'month']];// we don't know which variant(s) we'll need yet, but generating both is\n// cheap\nvar specMonths=baseSpec.concat([[3,'month'],[6,'month'],[1,'year']]);var specQuarters=baseSpec.concat([[1,'quarter'],[2,'quarter'],[1,'year']]);function init(plot){plot.hooks.processOptions.push(function(plot){$.each(plot.getAxes(),function(axisName,axis){var opts=axis.options;if(opts.mode=='time'){axis.tickGenerator=function(axis){var ticks=[];var d=dateGenerator(axis.min,opts);var minSize=0;// make quarter use a possibility if quarters are\n// mentioned in either of these options\nvar spec=opts.tickSize&&opts.tickSize[1]==='quarter'||opts.minTickSize&&opts.minTickSize[1]==='quarter'?specQuarters:specMonths;if(opts.minTickSize!=null){if(typeof opts.tickSize=='number'){minSize=opts.tickSize;}else{minSize=opts.minTickSize[0]*timeUnitSize[opts.minTickSize[1]];}}for(var i=0;i<spec.length-1;++i){if(axis.delta<(spec[i][0]*timeUnitSize[spec[i][1]]+spec[i+1][0]*timeUnitSize[spec[i+1][1]])/2&&spec[i][0]*timeUnitSize[spec[i][1]]>=minSize){break;}}var size=spec[i][0];var unit=spec[i][1];// special-case the possibility of several years\nif(unit=='year'){// if given a minTickSize in years, just use it,\n// ensuring that it's an integer\nif(opts.minTickSize!=null&&opts.minTickSize[1]=='year'){size=Math.floor(opts.minTickSize[0]);}else{var magn=Math.pow(10,Math.floor(Math.log(axis.delta/timeUnitSize.year)/Math.LN10));var norm=axis.delta/timeUnitSize.year/magn;if(norm<1.5){size=1;}else if(norm<3){size=2;}else if(norm<7.5){size=5;}else{size=10;}size*=magn;}// minimum size for years is 1\nif(size<1){size=1;}}axis.tickSize=opts.tickSize||[size,unit];var tickSize=axis.tickSize[0];unit=axis.tickSize[1];var step=tickSize*timeUnitSize[unit];if(unit=='second'){d.setSeconds(floorInBase(d.getSeconds(),tickSize));}else if(unit=='minute'){d.setMinutes(floorInBase(d.getMinutes(),tickSize));}else if(unit=='hour'){d.setHours(floorInBase(d.getHours(),tickSize));}else if(unit=='month'){d.setMonth(floorInBase(d.getMonth(),tickSize));}else if(unit=='quarter'){d.setMonth(3*floorInBase(d.getMonth()/3,tickSize));}else if(unit=='year'){d.setFullYear(floorInBase(d.getFullYear(),tickSize));}// reset smaller components\nd.setMilliseconds(0);if(step>=timeUnitSize.minute){d.setSeconds(0);}if(step>=timeUnitSize.hour){d.setMinutes(0);}if(step>=timeUnitSize.day){d.setHours(0);}if(step>=timeUnitSize.day*4){d.setDate(1);}if(step>=timeUnitSize.month*2){d.setMonth(floorInBase(d.getMonth(),3));}if(step>=timeUnitSize.quarter*2){d.setMonth(floorInBase(d.getMonth(),6));}if(step>=timeUnitSize.year){d.setMonth(0);}var carry=0;var v=Number.NaN;var prev;do{prev=v;v=d.getTime();ticks.push(v);if(unit=='month'||unit=='quarter'){if(tickSize<1){// a bit complicated - we'll divide the\n// month/quarter up but we need to take\n// care of fractions so we don't end up in\n// the middle of a day\nd.setDate(1);var start=d.getTime();d.setMonth(d.getMonth()+(unit=='quarter'?3:1));var end=d.getTime();d.setTime(v+carry*timeUnitSize.hour+(end-start)*tickSize);carry=d.getHours();d.setHours(0);}else{d.setMonth(d.getMonth()+tickSize*(unit=='quarter'?3:1));}}else if(unit=='year'){d.setFullYear(d.getFullYear()+tickSize);}else{d.setTime(v+step);}}while(v<axis.max&&v!=prev);return ticks;};axis.tickFormatter=function(v,axis){var d=dateGenerator(v,axis.options);// first check global format\nif(opts.timeformat!=null){return formatDate(d,opts.timeformat,opts.monthNames,opts.dayNames);}// possibly use quarters if quarters are mentioned in\n// any of these places\nvar useQuarters=axis.options.tickSize&&axis.options.tickSize[1]=='quarter'||axis.options.minTickSize&&axis.options.minTickSize[1]=='quarter';var t=axis.tickSize[0]*timeUnitSize[axis.tickSize[1]];var span=axis.max-axis.min;var suffix=opts.twelveHourClock?' %p':'';var hourCode=opts.twelveHourClock?'%I':'%H';var fmt;if(t<timeUnitSize.minute){fmt=hourCode+':%M:%S'+suffix;}else if(t<timeUnitSize.day){if(span<2*timeUnitSize.day){fmt=hourCode+':%M'+suffix;}else{fmt='%b %d '+hourCode+':%M'+suffix;}}else if(t<timeUnitSize.month){fmt='%b %d';}else if(useQuarters&&t<timeUnitSize.quarter||!useQuarters&&t<timeUnitSize.year){if(span<timeUnitSize.year){fmt='%b';}else{fmt='%b %Y';}}else if(useQuarters&&t<timeUnitSize.year){if(span<timeUnitSize.year){fmt='Q%q';}else{fmt='Q%q %Y';}}else{fmt='%Y';}var rt=formatDate(d,fmt,opts.monthNames,opts.dayNames);return rt;};}});});}$.plot.plugins.push({init:init,options:options,name:'time',version:'1.0'});// Time-axis support used to be in Flot core, which exposed the\n// formatDate function on the plot object.  Various plugins depend\n// on the function, so we need to re-expose it here.\n$.plot.formatDate=formatDate;})(window.jQuery);","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/src/vendor/flot/jquery.flot.time.js"],"names":["$","options","xaxis","timezone","timeformat","twelveHourClock","monthNames","floorInBase","n","base","Math","floor","formatDate","d","fmt","dayNames","strftime","leftPad","pad","length","r","escape","hours","getHours","isAM","hours12","i","c","charAt","getDay","getMonth","getDate","getMinutes","getSeconds","getFullYear","push","join","makeUtcWrapper","addProxyMethod","sourceObj","sourceMethod","targetObj","targetMethod","apply","arguments","utc","date","undefined","props","p","dateGenerator","ts","opts","Date","timeUnitSize","second","minute","hour","day","month","quarter","year","baseSpec","specMonths","concat","specQuarters","init","plot","hooks","processOptions","each","getAxes","axisName","axis","mode","tickGenerator","ticks","min","minSize","spec","tickSize","minTickSize","delta","size","unit","magn","pow","log","LN10","norm","step","setSeconds","setMinutes","setHours","setMonth","setFullYear","setMilliseconds","setDate","carry","v","Number","NaN","prev","getTime","start","end","setTime","max","tickFormatter","useQuarters","t","span","suffix","hourCode","rt","plugins","name","version","window","jQuery"],"mappings":"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","sourcesContent":["/**\n *\n * THIS FILE WAS COPIED INTO PROMETHEUS FROM GRAFANA'S VENDORED FORK OF FLOT\n * (LIVING AT https://github.com/grafana/grafana/tree/master/public/vendor/flot),\n * WHICH CONTAINS FIXES FOR DISPLAYING NULL VALUES IN STACKED GRAPHS. THE ORIGINAL\n * FLOT CODE WAS LICENSED UNDER THE MIT LICENSE AS STATED BELOW. ADDITIONAL\n * CHANGES HAVE BEEN CONTRIBUTED TO THE GRAFANA FORK UNDER AN APACHE 2 LICENSE, SEE\n * https://github.com/grafana/grafana/blob/master/license.\n *\n */\n\n/* eslint-disable prefer-rest-params */\n/* eslint-disable no-useless-concat */\n/* eslint-disable default-case */\n/* eslint-disable prefer-spread */\n/* eslint-disable no-loop-func */\n/* eslint-disable @typescript-eslint/no-this-alias */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-useless-escape */\n/* eslint-disable prefer-const */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-var */\n\n/* Pretty handling of time axes.\n\nCopyright (c) 2007-2013 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\nAPI.txt for details.\n\n*/\n\n(function($) {\n  const options = {\n    xaxis: {\n      timezone: null, // \"browser\" for local to the client or timezone for timezone-js\n      timeformat: null, // format string to use\n      twelveHourClock: false, // 12 or 24 time in time mode\n      monthNames: null, // list of names of months\n    },\n  };\n\n  // round to nearby lower multiple of base\n\n  function floorInBase(n, base) {\n    return base * Math.floor(n / base);\n  }\n\n  // Returns a string with the date d formatted according to fmt.\n  // A subset of the Open Group's strftime format is supported.\n\n  function formatDate(d, fmt, monthNames, dayNames) {\n    if (typeof d.strftime == 'function') {\n      return d.strftime(fmt);\n    }\n\n    const leftPad = function(n, pad) {\n      n = '' + n;\n      pad = '' + (pad == null ? '0' : pad);\n      return n.length == 1 ? pad + n : n;\n    };\n\n    const r = [];\n    let escape = false;\n    const hours = d.getHours();\n    const isAM = hours < 12;\n\n    if (monthNames == null) {\n      monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    }\n\n    if (dayNames == null) {\n      dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    }\n\n    let hours12;\n\n    if (hours > 12) {\n      hours12 = hours - 12;\n    } else if (hours == 0) {\n      hours12 = 12;\n    } else {\n      hours12 = hours;\n    }\n\n    for (let i = 0; i < fmt.length; ++i) {\n      let c = fmt.charAt(i);\n\n      if (escape) {\n        switch (c) {\n          case 'a':\n            c = '' + dayNames[d.getDay()];\n            break;\n          case 'b':\n            c = '' + monthNames[d.getMonth()];\n            break;\n          case 'd':\n            c = leftPad(d.getDate(), '');\n            break;\n          case 'e':\n            c = leftPad(d.getDate(), ' ');\n            break;\n          case 'h': // For back-compat with 0.7; remove in 1.0\n          case 'H':\n            c = leftPad(hours);\n            break;\n          case 'I':\n            c = leftPad(hours12);\n            break;\n          case 'l':\n            c = leftPad(hours12, ' ');\n            break;\n          case 'm':\n            c = leftPad(d.getMonth() + 1, '');\n            break;\n          case 'M':\n            c = leftPad(d.getMinutes());\n            break;\n          // quarters not in Open Group's strftime specification\n          case 'q':\n            c = '' + (Math.floor(d.getMonth() / 3) + 1);\n            break;\n          case 'S':\n            c = leftPad(d.getSeconds());\n            break;\n          case 'y':\n            c = leftPad(d.getFullYear() % 100);\n            break;\n          case 'Y':\n            c = '' + d.getFullYear();\n            break;\n          case 'p':\n            c = isAM ? '' + 'am' : '' + 'pm';\n            break;\n          case 'P':\n            c = isAM ? '' + 'AM' : '' + 'PM';\n            break;\n          case 'w':\n            c = '' + d.getDay();\n            break;\n        }\n        r.push(c);\n        escape = false;\n      } else {\n        if (c == '%') {\n          escape = true;\n        } else {\n          r.push(c);\n        }\n      }\n    }\n\n    return r.join('');\n  }\n\n  // To have a consistent view of time-based data independent of which time\n  // zone the client happens to be in we need a date-like object independent\n  // of time zones.  This is done through a wrapper that only calls the UTC\n  // versions of the accessor methods.\n\n  function makeUtcWrapper(d) {\n    function addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n      sourceObj[sourceMethod] = function() {\n        return targetObj[targetMethod].apply(targetObj, arguments);\n      };\n    }\n\n    const utc = {\n      date: d,\n    };\n\n    // support strftime, if found\n\n    if (d.strftime != undefined) {\n      addProxyMethod(utc, 'strftime', d, 'strftime');\n    }\n\n    addProxyMethod(utc, 'getTime', d, 'getTime');\n    addProxyMethod(utc, 'setTime', d, 'setTime');\n\n    const props = ['Date', 'Day', 'FullYear', 'Hours', 'Milliseconds', 'Minutes', 'Month', 'Seconds'];\n\n    for (let p = 0; p < props.length; p++) {\n      addProxyMethod(utc, 'get' + props[p], d, 'getUTC' + props[p]);\n      addProxyMethod(utc, 'set' + props[p], d, 'setUTC' + props[p]);\n    }\n\n    return utc;\n  }\n\n  // select time zone strategy.  This returns a date-like object tied to the\n  // desired timezone\n\n  function dateGenerator(ts, opts) {\n    if (opts.timezone == 'browser') {\n      return new Date(ts);\n    } else if (!opts.timezone || opts.timezone == 'utc') {\n      return makeUtcWrapper(new Date(ts));\n    }\n    // } else if (typeof timezoneJS != 'undefined' && typeof timezoneJS.Date != 'undefined') {\n    //   const d = new timezoneJS.Date();\n    //   // timezone-js is fickle, so be sure to set the time zone before\n    //   // setting the time.\n    //   d.setTimezone(opts.timezone);\n    //   d.setTime(ts);\n    //   return d;\n    // }\n    return makeUtcWrapper(new Date(ts));\n  }\n\n  // map of app. size of time units in milliseconds\n\n  const timeUnitSize = {\n    second: 1000,\n    minute: 60 * 1000,\n    hour: 60 * 60 * 1000,\n    day: 24 * 60 * 60 * 1000,\n    month: 30 * 24 * 60 * 60 * 1000,\n    quarter: 3 * 30 * 24 * 60 * 60 * 1000,\n    year: 365.2425 * 24 * 60 * 60 * 1000,\n  };\n\n  // the allowed tick sizes, after 1 year we use\n  // an integer algorithm\n\n  const baseSpec = [\n    [1, 'second'],\n    [2, 'second'],\n    [5, 'second'],\n    [10, 'second'],\n    [30, 'second'],\n    [1, 'minute'],\n    [2, 'minute'],\n    [5, 'minute'],\n    [10, 'minute'],\n    [30, 'minute'],\n    [1, 'hour'],\n    [2, 'hour'],\n    [4, 'hour'],\n    [8, 'hour'],\n    [12, 'hour'],\n    [1, 'day'],\n    [2, 'day'],\n    [3, 'day'],\n    [0.25, 'month'],\n    [0.5, 'month'],\n    [1, 'month'],\n    [2, 'month'],\n  ];\n\n  // we don't know which variant(s) we'll need yet, but generating both is\n  // cheap\n\n  const specMonths = baseSpec.concat([[3, 'month'], [6, 'month'], [1, 'year']]);\n  const specQuarters = baseSpec.concat([[1, 'quarter'], [2, 'quarter'], [1, 'year']]);\n\n  function init(plot) {\n    plot.hooks.processOptions.push(function(plot) {\n      $.each(plot.getAxes(), function(axisName, axis) {\n        const opts = axis.options;\n\n        if (opts.mode == 'time') {\n          axis.tickGenerator = function(axis) {\n            const ticks = [];\n            const d = dateGenerator(axis.min, opts);\n            let minSize = 0;\n\n            // make quarter use a possibility if quarters are\n            // mentioned in either of these options\n\n            const spec =\n              (opts.tickSize && opts.tickSize[1] === 'quarter') || (opts.minTickSize && opts.minTickSize[1] === 'quarter')\n                ? specQuarters\n                : specMonths;\n\n            if (opts.minTickSize != null) {\n              if (typeof opts.tickSize == 'number') {\n                minSize = opts.tickSize;\n              } else {\n                minSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n              }\n            }\n\n            for (var i = 0; i < spec.length - 1; ++i) {\n              if (\n                axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]] + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2 &&\n                spec[i][0] * timeUnitSize[spec[i][1]] >= minSize\n              ) {\n                break;\n              }\n            }\n\n            let size = spec[i][0];\n            let unit = spec[i][1];\n\n            // special-case the possibility of several years\n\n            if (unit == 'year') {\n              // if given a minTickSize in years, just use it,\n              // ensuring that it's an integer\n\n              if (opts.minTickSize != null && opts.minTickSize[1] == 'year') {\n                size = Math.floor(opts.minTickSize[0]);\n              } else {\n                const magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\n                const norm = axis.delta / timeUnitSize.year / magn;\n\n                if (norm < 1.5) {\n                  size = 1;\n                } else if (norm < 3) {\n                  size = 2;\n                } else if (norm < 7.5) {\n                  size = 5;\n                } else {\n                  size = 10;\n                }\n\n                size *= magn;\n              }\n\n              // minimum size for years is 1\n\n              if (size < 1) {\n                size = 1;\n              }\n            }\n\n            axis.tickSize = opts.tickSize || [size, unit];\n            const tickSize = axis.tickSize[0];\n            unit = axis.tickSize[1];\n\n            const step = tickSize * timeUnitSize[unit];\n\n            if (unit == 'second') {\n              d.setSeconds(floorInBase(d.getSeconds(), tickSize));\n            } else if (unit == 'minute') {\n              d.setMinutes(floorInBase(d.getMinutes(), tickSize));\n            } else if (unit == 'hour') {\n              d.setHours(floorInBase(d.getHours(), tickSize));\n            } else if (unit == 'month') {\n              d.setMonth(floorInBase(d.getMonth(), tickSize));\n            } else if (unit == 'quarter') {\n              d.setMonth(3 * floorInBase(d.getMonth() / 3, tickSize));\n            } else if (unit == 'year') {\n              d.setFullYear(floorInBase(d.getFullYear(), tickSize));\n            }\n\n            // reset smaller components\n\n            d.setMilliseconds(0);\n\n            if (step >= timeUnitSize.minute) {\n              d.setSeconds(0);\n            }\n            if (step >= timeUnitSize.hour) {\n              d.setMinutes(0);\n            }\n            if (step >= timeUnitSize.day) {\n              d.setHours(0);\n            }\n            if (step >= timeUnitSize.day * 4) {\n              d.setDate(1);\n            }\n            if (step >= timeUnitSize.month * 2) {\n              d.setMonth(floorInBase(d.getMonth(), 3));\n            }\n            if (step >= timeUnitSize.quarter * 2) {\n              d.setMonth(floorInBase(d.getMonth(), 6));\n            }\n            if (step >= timeUnitSize.year) {\n              d.setMonth(0);\n            }\n\n            let carry = 0;\n            let v = Number.NaN;\n            let prev;\n\n            do {\n              prev = v;\n              v = d.getTime();\n              ticks.push(v);\n\n              if (unit == 'month' || unit == 'quarter') {\n                if (tickSize < 1) {\n                  // a bit complicated - we'll divide the\n                  // month/quarter up but we need to take\n                  // care of fractions so we don't end up in\n                  // the middle of a day\n\n                  d.setDate(1);\n                  const start = d.getTime();\n                  d.setMonth(d.getMonth() + (unit == 'quarter' ? 3 : 1));\n                  const end = d.getTime();\n                  d.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n                  carry = d.getHours();\n                  d.setHours(0);\n                } else {\n                  d.setMonth(d.getMonth() + tickSize * (unit == 'quarter' ? 3 : 1));\n                }\n              } else if (unit == 'year') {\n                d.setFullYear(d.getFullYear() + tickSize);\n              } else {\n                d.setTime(v + step);\n              }\n            } while (v < axis.max && v != prev);\n\n            return ticks;\n          };\n\n          axis.tickFormatter = function(v, axis) {\n            const d = dateGenerator(v, axis.options);\n\n            // first check global format\n\n            if (opts.timeformat != null) {\n              return formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n            }\n\n            // possibly use quarters if quarters are mentioned in\n            // any of these places\n\n            const useQuarters =\n              (axis.options.tickSize && axis.options.tickSize[1] == 'quarter') ||\n              (axis.options.minTickSize && axis.options.minTickSize[1] == 'quarter');\n\n            const t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n            const span = axis.max - axis.min;\n            const suffix = opts.twelveHourClock ? ' %p' : '';\n            const hourCode = opts.twelveHourClock ? '%I' : '%H';\n            let fmt;\n\n            if (t < timeUnitSize.minute) {\n              fmt = hourCode + ':%M:%S' + suffix;\n            } else if (t < timeUnitSize.day) {\n              if (span < 2 * timeUnitSize.day) {\n                fmt = hourCode + ':%M' + suffix;\n              } else {\n                fmt = '%b %d ' + hourCode + ':%M' + suffix;\n              }\n            } else if (t < timeUnitSize.month) {\n              fmt = '%b %d';\n            } else if ((useQuarters && t < timeUnitSize.quarter) || (!useQuarters && t < timeUnitSize.year)) {\n              if (span < timeUnitSize.year) {\n                fmt = '%b';\n              } else {\n                fmt = '%b %Y';\n              }\n            } else if (useQuarters && t < timeUnitSize.year) {\n              if (span < timeUnitSize.year) {\n                fmt = 'Q%q';\n              } else {\n                fmt = 'Q%q %Y';\n              }\n            } else {\n              fmt = '%Y';\n            }\n\n            const rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\n            return rt;\n          };\n        }\n      });\n    });\n  }\n\n  $.plot.plugins.push({\n    init: init,\n    options: options,\n    name: 'time',\n    version: '1.0',\n  });\n\n  // Time-axis support used to be in Flot core, which exposed the\n  // formatDate function on the plot object.  Various plugins depend\n  // on the function, so we need to re-expose it here.\n\n  $.plot.formatDate = formatDate;\n})(window.jQuery);\n"]},"metadata":{},"sourceType":"module"}