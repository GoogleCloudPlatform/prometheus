{"ast":null,"code":"import _slicedToArray from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Badge,Alert}from'reactstrap';var EndpointLink=function EndpointLink(_ref){var endpoint=_ref.endpoint,globalUrl=_ref.globalUrl;var url;try{url=new URL(endpoint);}catch(e){return/*#__PURE__*/React.createElement(Alert,{color:\"danger\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Error:\"),\" \",e.message);}var _url=url,host=_url.host,pathname=_url.pathname,protocol=_url.protocol,searchParams=_url.searchParams;var params=Array.from(searchParams.entries());return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"a\",{href:globalUrl},\"\".concat(protocol,\"//\").concat(host).concat(pathname)),params.length>0?/*#__PURE__*/React.createElement(\"br\",null):null,params.map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),labelName=_ref3[0],labelValue=_ref3[1];return/*#__PURE__*/React.createElement(Badge,{color:\"primary\",className:\"mr-1\",key:\"\".concat(labelName,\"/\").concat(labelValue)},\"\".concat(labelName,\"=\\\"\").concat(labelValue,\"\\\"\"));}));};export default EndpointLink;","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/src/pages/targets/EndpointLink.tsx"],"names":["React","Badge","Alert","EndpointLink","endpoint","globalUrl","url","URL","e","message","host","pathname","protocol","searchParams","params","Array","from","entries","length","map","labelName","labelValue"],"mappings":"kOAAA,MAAOA,CAAAA,KAAP,KAA0B,OAA1B,CACA,OAASC,KAAT,CAAgBC,KAAhB,KAA6B,YAA7B,CAOA,GAAMC,CAAAA,YAAmC,CAAG,QAAtCA,CAAAA,YAAsC,MAA6B,IAA1BC,CAAAA,QAA0B,MAA1BA,QAA0B,CAAhBC,SAAgB,MAAhBA,SAAgB,CACvE,GAAIC,CAAAA,GAAJ,CACA,GAAI,CACFA,GAAG,CAAG,GAAIC,CAAAA,GAAJ,CAAQH,QAAR,CAAN,CACD,CAAC,MAAOI,CAAP,CAAU,CACV,mBACE,oBAAC,KAAD,EAAO,KAAK,CAAC,QAAb,eACE,2CADF,KAC2BA,CAAC,CAACC,OAD7B,CADF,CAKD,CAED,SAAwDH,GAAxD,CAAQI,IAAR,MAAQA,IAAR,CAAcC,QAAd,MAAcA,QAAd,CAAwBC,QAAxB,MAAwBA,QAAxB,CAAkCC,YAAlC,MAAkCA,YAAlC,CACA,GAAMC,CAAAA,MAAM,CAAGC,KAAK,CAACC,IAAN,CAAWH,YAAY,CAACI,OAAb,EAAX,CAAf,CAEA,mBACE,qDACE,yBAAG,IAAI,CAAEZ,SAAT,YAAwBO,QAAxB,cAAqCF,IAArC,SAA4CC,QAA5C,EADF,CAEGG,MAAM,CAACI,MAAP,CAAgB,CAAhB,cAAoB,8BAApB,CAA6B,IAFhC,CAGGJ,MAAM,CAACK,GAAP,CAAW,eAA+C,mCAA7CC,SAA6C,UAAlCC,UAAkC,UACzD,mBACE,oBAAC,KAAD,EAAO,KAAK,CAAC,SAAb,CAAuB,SAAS,CAAC,MAAjC,CAAwC,GAAG,WAAKD,SAAL,aAAkBC,UAAlB,CAA3C,YACMD,SADN,eACoBC,UADpB,OADF,CAKD,CANA,CAHH,CADF,CAaD,CA5BD,CA8BA,cAAelB,CAAAA,YAAf","sourcesContent":["import React, { FC } from 'react';\nimport { Badge, Alert } from 'reactstrap';\n\nexport interface EndpointLinkProps {\n  endpoint: string;\n  globalUrl: string;\n}\n\nconst EndpointLink: FC<EndpointLinkProps> = ({ endpoint, globalUrl }) => {\n  let url: URL;\n  try {\n    url = new URL(endpoint);\n  } catch (e) {\n    return (\n      <Alert color=\"danger\">\n        <strong>Error:</strong> {e.message}\n      </Alert>\n    );\n  }\n\n  const { host, pathname, protocol, searchParams }: URL = url;\n  const params = Array.from(searchParams.entries());\n\n  return (\n    <>\n      <a href={globalUrl}>{`${protocol}//${host}${pathname}`}</a>\n      {params.length > 0 ? <br /> : null}\n      {params.map(([labelName, labelValue]: [string, string]) => {\n        return (\n          <Badge color=\"primary\" className=\"mr-1\" key={`${labelName}/${labelValue}`}>\n            {`${labelName}=\"${labelValue}\"`}\n          </Badge>\n        );\n      })}\n    </>\n  );\n};\n\nexport default EndpointLink;\n"]},"metadata":{},"sourceType":"module"}