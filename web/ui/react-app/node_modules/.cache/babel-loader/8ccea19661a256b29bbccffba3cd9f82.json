{"ast":null,"code":"'use strict';\n\nvar Container = require('./container');\n\nvar Parser = require('./parser');\n\nvar Input = require('./input');\n\nfunction parse(css, opts) {\n  var input = new Input(css, opts);\n  var parser = new Parser(input);\n\n  try {\n    parser.parse();\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse SCSS with ' + 'the standard CSS parser; ' + 'try again with the postcss-scss parser';\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Sass with ' + 'the standard CSS parser; ' + 'try again with the postcss-sass parser';\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Less with ' + 'the standard CSS parser; ' + 'try again with the postcss-less parser';\n        }\n      }\n    }\n\n    throw e;\n  }\n\n  return parser.root;\n}\n\nmodule.exports = parse;\nparse.default = parse;\nContainer.registerParse(parse);","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/sanitize-html/node_modules/postcss/lib/parse.js"],"names":["Container","require","Parser","Input","parse","css","opts","input","parser","e","process","env","NODE_ENV","name","from","test","message","root","module","exports","default","registerParse"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB;;AAEA,SAASG,KAAT,CAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACxB,MAAIC,KAAK,GAAG,IAAIJ,KAAJ,CAAUE,GAAV,EAAeC,IAAf,CAAZ;AACA,MAAIE,MAAM,GAAG,IAAIN,MAAJ,CAAWK,KAAX,CAAb;;AACA,MAAI;AACFC,IAAAA,MAAM,CAACJ,KAAP;AACD,GAFD,CAEE,OAAOK,CAAP,EAAU;AACV,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAIH,CAAC,CAACI,IAAF,KAAW,gBAAX,IAA+BP,IAA/B,IAAuCA,IAAI,CAACQ,IAAhD,EAAsD;AACpD,YAAI,WAAWC,IAAX,CAAgBT,IAAI,CAACQ,IAArB,CAAJ,EAAgC;AAC9BL,UAAAA,CAAC,CAACO,OAAF,IACE,oCACA,2BADA,GAEA,wCAHF;AAID,SALD,MAKO,IAAI,UAAUD,IAAV,CAAeT,IAAI,CAACQ,IAApB,CAAJ,EAA+B;AACpCL,UAAAA,CAAC,CAACO,OAAF,IACE,oCACA,2BADA,GAEA,wCAHF;AAID,SALM,MAKA,IAAI,WAAWD,IAAX,CAAgBT,IAAI,CAACQ,IAArB,CAAJ,EAAgC;AACrCL,UAAAA,CAAC,CAACO,OAAF,IACE,oCACA,2BADA,GAEA,wCAHF;AAID;AACF;AACF;;AACD,UAAMP,CAAN;AACD;;AAED,SAAOD,MAAM,CAACS,IAAd;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBf,KAAjB;AACAA,KAAK,CAACgB,OAAN,GAAgBhB,KAAhB;AAEAJ,SAAS,CAACqB,aAAV,CAAwBjB,KAAxB","sourcesContent":["'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n"]},"metadata":{},"sourceType":"script"}