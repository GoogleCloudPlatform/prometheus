{"ast":null,"code":"\"use strict\"; // The MIT License (MIT)\n//\n// Copyright (c) 2020 The Prometheus Authors\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFunction = exports.ValueType = void 0;\n\nvar lezer_promql_1 = require(\"lezer-promql\");\n\nvar ValueType;\n\n(function (ValueType) {\n  ValueType[\"none\"] = \"none\";\n  ValueType[\"vector\"] = \"vector\";\n  ValueType[\"scalar\"] = \"scalar\";\n  ValueType[\"matrix\"] = \"matrix\";\n  ValueType[\"string\"] = \"string\";\n})(ValueType = exports.ValueType || (exports.ValueType = {})); // promqlFunctions is a list of all functions supported by PromQL, including their types.\n// Based on https://github.com/prometheus/prometheus/blob/master/promql/parser/functions.go#L26\n\n\nvar promqlFunctions = (_a = {}, _a[lezer_promql_1.Abs] = {\n  name: 'abs',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Absent] = {\n  name: 'absent',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.AbsentOverTime] = {\n  name: 'absent_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.AvgOverTime] = {\n  name: 'avg_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Ceil] = {\n  name: 'ceil',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Changes] = {\n  name: 'changes',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Clamp] = {\n  name: 'clamp',\n  argTypes: [ValueType.vector, ValueType.scalar, ValueType.scalar],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.ClampMax] = {\n  name: 'clamp_max',\n  argTypes: [ValueType.vector, ValueType.scalar],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.ClampMin] = {\n  name: 'clamp_min',\n  argTypes: [ValueType.vector, ValueType.scalar],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.CountOverTime] = {\n  name: 'count_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.DaysInMonth] = {\n  name: 'days_in_month',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.DayOfMonth] = {\n  name: 'day_of_month',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.DayOfWeek] = {\n  name: 'day_of_week',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Delta] = {\n  name: 'delta',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Deriv] = {\n  name: 'deriv',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Exp] = {\n  name: 'exp',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Floor] = {\n  name: 'floor',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.HistogramQuantile] = {\n  name: 'histogram_quantile',\n  argTypes: [ValueType.scalar, ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.HoltWinters] = {\n  name: 'holt_winters',\n  argTypes: [ValueType.matrix, ValueType.scalar, ValueType.scalar],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Hour] = {\n  name: 'hour',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Idelta] = {\n  name: 'idelta',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Increase] = {\n  name: 'increase',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Irate] = {\n  name: 'irate',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.LabelReplace] = {\n  name: 'label_replace',\n  argTypes: [ValueType.vector, ValueType.string, ValueType.string, ValueType.string, ValueType.string],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.LabelJoin] = {\n  name: 'label_join',\n  argTypes: [ValueType.vector, ValueType.string, ValueType.string, ValueType.string],\n  variadic: -1,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.LastOverTime] = {\n  name: 'last_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Ln] = {\n  name: 'ln',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Log10] = {\n  name: 'log10',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Log2] = {\n  name: 'log2',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.MaxOverTime] = {\n  name: 'max_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.MinOverTime] = {\n  name: 'min_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Minute] = {\n  name: 'minute',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Month] = {\n  name: 'month',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.PredictLinear] = {\n  name: 'predict_linear',\n  argTypes: [ValueType.matrix, ValueType.scalar],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.QuantileOverTime] = {\n  name: 'quantile_over_time',\n  argTypes: [ValueType.scalar, ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Rate] = {\n  name: 'rate',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Resets] = {\n  name: 'resets',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Round] = {\n  name: 'round',\n  argTypes: [ValueType.vector, ValueType.scalar],\n  variadic: 1,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Scalar] = {\n  name: 'scalar',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.scalar\n}, _a[lezer_promql_1.Sgn] = {\n  name: 'sgn',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Sort] = {\n  name: 'sort',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.SortDesc] = {\n  name: 'sort_desc',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Sqrt] = {\n  name: 'sqrt',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.StddevOverTime] = {\n  name: 'stddev_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.StdvarOverTime] = {\n  name: 'stdvar_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.SumOverTime] = {\n  name: 'sum_over_time',\n  argTypes: [ValueType.matrix],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Time] = {\n  name: 'time',\n  argTypes: [],\n  variadic: 0,\n  returnType: ValueType.scalar\n}, _a[lezer_promql_1.Timestamp] = {\n  name: 'timestamp',\n  argTypes: [ValueType.vector],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Vector] = {\n  name: 'vector',\n  argTypes: [ValueType.scalar],\n  variadic: 0,\n  returnType: ValueType.vector\n}, _a[lezer_promql_1.Year] = {\n  name: 'year',\n  argTypes: [ValueType.vector],\n  variadic: 1,\n  returnType: ValueType.vector\n}, _a);\n\nfunction getFunction(id) {\n  return promqlFunctions[id];\n}\n\nexports.getFunction = getFunction;","map":{"version":3,"sources":["../../../src/lang-promql/types/function.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2020 The Prometheus Authors\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunction = exports.ValueType = void 0;\nvar lezer_promql_1 = require(\"lezer-promql\");\nvar ValueType;\n(function (ValueType) {\n    ValueType[\"none\"] = \"none\";\n    ValueType[\"vector\"] = \"vector\";\n    ValueType[\"scalar\"] = \"scalar\";\n    ValueType[\"matrix\"] = \"matrix\";\n    ValueType[\"string\"] = \"string\";\n})(ValueType = exports.ValueType || (exports.ValueType = {}));\n// promqlFunctions is a list of all functions supported by PromQL, including their types.\n// Based on https://github.com/prometheus/prometheus/blob/master/promql/parser/functions.go#L26\nvar promqlFunctions = (_a = {},\n    _a[lezer_promql_1.Abs] = {\n        name: 'abs',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Absent] = {\n        name: 'absent',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.AbsentOverTime] = {\n        name: 'absent_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.AvgOverTime] = {\n        name: 'avg_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Ceil] = {\n        name: 'ceil',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Changes] = {\n        name: 'changes',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Clamp] = {\n        name: 'clamp',\n        argTypes: [ValueType.vector, ValueType.scalar, ValueType.scalar],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.ClampMax] = {\n        name: 'clamp_max',\n        argTypes: [ValueType.vector, ValueType.scalar],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.ClampMin] = {\n        name: 'clamp_min',\n        argTypes: [ValueType.vector, ValueType.scalar],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.CountOverTime] = {\n        name: 'count_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.DaysInMonth] = {\n        name: 'days_in_month',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.DayOfMonth] = {\n        name: 'day_of_month',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.DayOfWeek] = {\n        name: 'day_of_week',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Delta] = {\n        name: 'delta',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Deriv] = {\n        name: 'deriv',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Exp] = {\n        name: 'exp',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Floor] = {\n        name: 'floor',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.HistogramQuantile] = {\n        name: 'histogram_quantile',\n        argTypes: [ValueType.scalar, ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.HoltWinters] = {\n        name: 'holt_winters',\n        argTypes: [ValueType.matrix, ValueType.scalar, ValueType.scalar],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Hour] = {\n        name: 'hour',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Idelta] = {\n        name: 'idelta',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Increase] = {\n        name: 'increase',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Irate] = {\n        name: 'irate',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.LabelReplace] = {\n        name: 'label_replace',\n        argTypes: [ValueType.vector, ValueType.string, ValueType.string, ValueType.string, ValueType.string],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.LabelJoin] = {\n        name: 'label_join',\n        argTypes: [ValueType.vector, ValueType.string, ValueType.string, ValueType.string],\n        variadic: -1,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.LastOverTime] = {\n        name: 'last_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Ln] = {\n        name: 'ln',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Log10] = {\n        name: 'log10',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Log2] = {\n        name: 'log2',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.MaxOverTime] = {\n        name: 'max_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.MinOverTime] = {\n        name: 'min_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Minute] = {\n        name: 'minute',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Month] = {\n        name: 'month',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.PredictLinear] = {\n        name: 'predict_linear',\n        argTypes: [ValueType.matrix, ValueType.scalar],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.QuantileOverTime] = {\n        name: 'quantile_over_time',\n        argTypes: [ValueType.scalar, ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Rate] = {\n        name: 'rate',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Resets] = {\n        name: 'resets',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Round] = {\n        name: 'round',\n        argTypes: [ValueType.vector, ValueType.scalar],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Scalar] = {\n        name: 'scalar',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.scalar,\n    },\n    _a[lezer_promql_1.Sgn] = {\n        name: 'sgn',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Sort] = {\n        name: 'sort',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.SortDesc] = {\n        name: 'sort_desc',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Sqrt] = {\n        name: 'sqrt',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.StddevOverTime] = {\n        name: 'stddev_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.StdvarOverTime] = {\n        name: 'stdvar_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.SumOverTime] = {\n        name: 'sum_over_time',\n        argTypes: [ValueType.matrix],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Time] = {\n        name: 'time',\n        argTypes: [],\n        variadic: 0,\n        returnType: ValueType.scalar,\n    },\n    _a[lezer_promql_1.Timestamp] = {\n        name: 'timestamp',\n        argTypes: [ValueType.vector],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Vector] = {\n        name: 'vector',\n        argTypes: [ValueType.scalar],\n        variadic: 0,\n        returnType: ValueType.vector,\n    },\n    _a[lezer_promql_1.Year] = {\n        name: 'year',\n        argTypes: [ValueType.vector],\n        variadic: 1,\n        returnType: ValueType.vector,\n    },\n    _a);\nfunction getFunction(id) {\n    return promqlFunctions[id];\n}\nexports.getFunction = getFunction;\n//# sourceMappingURL=function.js.map"]},"metadata":{},"sourceType":"script"}