{"ast":null,"code":"import _slicedToArray from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import moment from'moment-timezone';import{PanelType,PanelDefaultOptions}from'../pages/graph/Panel';export var generateID=function generateID(){return\"_\".concat(Math.random().toString(36).substr(2,9));};export var byEmptyString=function byEmptyString(p){return p.length>0;};export var isPresent=function isPresent(obj){return obj!==null&&obj!==undefined;};export var escapeHTML=function escapeHTML(str){var entityMap={'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;',\"'\":'&#39;','/':'&#x2F;'};return String(str).replace(/[&<>\"'/]/g,function(s){return entityMap[s];});};export var metricToSeriesName=function metricToSeriesName(labels){if(labels===null){return'scalar';}var tsName=(labels.__name__||'')+'{';var labelStrings=[];for(var label in labels){if(label!=='__name__'){labelStrings.push(label+'=\"'+labels[label]+'\"');}}tsName+=labelStrings.join(', ')+'}';return tsName;};export var parseDuration=function parseDuration(durationStr){if(durationStr===''){return null;}if(durationStr==='0'){// Allow 0 without a unit.\nreturn 0;}var durationRE=new RegExp('^(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?$');var matches=durationStr.match(durationRE);if(!matches){return null;}var dur=0;// Parse the match at pos `pos` in the regex and use `mult` to turn that\n// into ms, then add that value to the total parsed duration.\nvar m=function m(pos,mult){if(matches[pos]===undefined){return;}var n=parseInt(matches[pos]);dur+=n*mult;};m(2,1000*60*60*24*365);// y\nm(4,1000*60*60*24*7);// w\nm(6,1000*60*60*24);// d\nm(8,1000*60*60);// h\nm(10,1000*60);// m\nm(12,1000);// s\nm(14,1);// ms\nreturn dur;};export var formatDuration=function formatDuration(d){var ms=d;var r='';if(ms===0){return'0s';}var f=function f(unit,mult,exact){if(exact&&ms%mult!==0){return;}var v=Math.floor(ms/mult);if(v>0){r+=\"\".concat(v).concat(unit);ms-=v*mult;}};// Only format years and weeks if the remainder is zero, as it is often\n// easier to read 90d than 12w6d.\nf('y',1000*60*60*24*365,true);f('w',1000*60*60*24*7,true);f('d',1000*60*60*24,false);f('h',1000*60*60,false);f('m',1000*60,false);f('s',1000,false);f('ms',1,false);return r;};export function parseTime(timeText){return moment.utc(timeText).valueOf();}export function formatTime(time){return moment.utc(time).format('YYYY-MM-DD HH:mm:ss');}export var now=function now(){return moment().valueOf();};export var humanizeDuration=function humanizeDuration(milliseconds){var sign=milliseconds<0?'-':'';var unsignedMillis=milliseconds<0?-1*milliseconds:milliseconds;var duration=moment.duration(unsignedMillis,'ms');var ms=Math.floor(duration.milliseconds());var s=Math.floor(duration.seconds());var m=Math.floor(duration.minutes());var h=Math.floor(duration.hours());var d=Math.floor(duration.asDays());if(d!==0){return\"\".concat(sign).concat(d,\"d \").concat(h,\"h \").concat(m,\"m \").concat(s,\"s\");}if(h!==0){return\"\".concat(sign).concat(h,\"h \").concat(m,\"m \").concat(s,\"s\");}if(m!==0){return\"\".concat(sign).concat(m,\"m \").concat(s,\"s\");}if(s!==0){return\"\".concat(sign).concat(s,\".\").concat(ms,\"s\");}if(unsignedMillis>0){return\"\".concat(sign).concat(unsignedMillis.toFixed(3),\"ms\");}return'0s';};export var formatRelative=function formatRelative(startStr,end){var start=parseTime(startStr);if(start<0){return'Never';}return humanizeDuration(end-start)+' ago';};var paramFormat=/^g\\d+\\..+=.+$/;export var decodePanelOptionsFromQueryString=function decodePanelOptionsFromQueryString(query){if(query===''){return[];}var urlParams=query.substring(1).split('&');return urlParams.reduce(function(panels,urlParam,i){var panelsCount=panels.length;var prefix=\"g\".concat(panelsCount,\".\");if(urlParam.startsWith(\"\".concat(prefix,\"expr=\"))){var prefixLen=prefix.length;return[].concat(_toConsumableArray(panels),[{id:generateID(),key:\"\".concat(panelsCount),options:urlParams.slice(i).reduce(function(opts,param){return param.startsWith(prefix)&&paramFormat.test(param)?_objectSpread(_objectSpread({},opts),parseOption(param.substring(prefixLen))):opts;},PanelDefaultOptions)}]);}return panels;},[]);};export var parseOption=function parseOption(param){var _param$split=param.split('='),_param$split2=_slicedToArray(_param$split,2),opt=_param$split2[0],val=_param$split2[1];var decodedValue=decodeURIComponent(val.replace(/\\+/g,' '));switch(opt){case'expr':return{expr:decodedValue};case'tab':return{type:decodedValue==='0'?PanelType.Graph:PanelType.Table};case'stacked':return{stacked:decodedValue==='1'};case'range_input':var range=parseDuration(decodedValue);return isPresent(range)?{range:range}:{};case'end_input':case'moment_input':return{endTime:parseTime(decodedValue)};case'step_input':var resolution=parseInt(decodedValue);return resolution>0?{resolution:resolution}:{};}return{};};export var formatParam=function formatParam(key){return function(paramName,value){return\"g\".concat(key,\".\").concat(paramName,\"=\").concat(encodeURIComponent(value));};};export var toQueryString=function toQueryString(_ref){var key=_ref.key,options=_ref.options;var formatWithKey=formatParam(key);var expr=options.expr,type=options.type,stacked=options.stacked,range=options.range,endTime=options.endTime,resolution=options.resolution;var time=isPresent(endTime)?formatTime(endTime):false;var urlParams=[formatWithKey('expr',expr),formatWithKey('tab',type===PanelType.Graph?0:1),formatWithKey('stacked',stacked?1:0),formatWithKey('range_input',formatDuration(range)),time?\"\".concat(formatWithKey('end_input',time),\"&\").concat(formatWithKey('moment_input',time)):'',isPresent(resolution)?formatWithKey('step_input',resolution):''];return urlParams.filter(byEmptyString).join('&');};export var encodePanelOptionsToQueryString=function encodePanelOptionsToQueryString(panels){return\"?\".concat(panels.map(toQueryString).join('&'));};export var createExpressionLink=function createExpressionLink(expr){return\"../graph?g0.expr=\".concat(encodeURIComponent(expr),\"&g0.tab=1&g0.stacked=0&g0.range_input=1h\");};export var mapObjEntries=function mapObjEntries(o,cb){return Object.entries(o).map(cb);};export var callAll=function callAll(){for(var _len=arguments.length,fns=new Array(_len),_key=0;_key<_len;_key++){fns[_key]=arguments[_key];}return function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}// eslint-disable-next-line prefer-spread\nfns.filter(Boolean).forEach(function(fn){return fn.apply(null,args);});};};export var parsePrometheusFloat=function parsePrometheusFloat(value){if(isNaN(Number(value))){return value;}else{return Number(value);}};","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/src/utils/index.ts"],"names":["moment","PanelType","PanelDefaultOptions","generateID","Math","random","toString","substr","byEmptyString","p","length","isPresent","obj","undefined","escapeHTML","str","entityMap","String","replace","s","metricToSeriesName","labels","tsName","__name__","labelStrings","label","push","join","parseDuration","durationStr","durationRE","RegExp","matches","match","dur","m","pos","mult","n","parseInt","formatDuration","d","ms","r","f","unit","exact","v","floor","parseTime","timeText","utc","valueOf","formatTime","time","format","now","humanizeDuration","milliseconds","sign","unsignedMillis","duration","seconds","minutes","h","hours","asDays","toFixed","formatRelative","startStr","end","start","paramFormat","decodePanelOptionsFromQueryString","query","urlParams","substring","split","reduce","panels","urlParam","i","panelsCount","prefix","startsWith","prefixLen","id","key","options","slice","opts","param","test","parseOption","opt","val","decodedValue","decodeURIComponent","expr","type","Graph","Table","stacked","range","endTime","resolution","formatParam","paramName","value","encodeURIComponent","toQueryString","formatWithKey","filter","encodePanelOptionsToQueryString","map","createExpressionLink","mapObjEntries","o","cb","Object","entries","callAll","fns","args","Boolean","forEach","fn","apply","parsePrometheusFloat","isNaN","Number"],"mappings":"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","sourcesContent":["import moment from 'moment-timezone';\n\nimport { PanelOptions, PanelType, PanelDefaultOptions } from '../pages/graph/Panel';\nimport { PanelMeta } from '../pages/graph/PanelList';\n\nexport const generateID = () => {\n  return `_${Math.random()\n    .toString(36)\n    .substr(2, 9)}`;\n};\n\nexport const byEmptyString = (p: string) => p.length > 0;\n\nexport const isPresent = <T>(obj: T): obj is NonNullable<T> => obj !== null && obj !== undefined;\n\nexport const escapeHTML = (str: string): string => {\n  const entityMap: { [key: string]: string } = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n  };\n\n  return String(str).replace(/[&<>\"'/]/g, function(s) {\n    return entityMap[s];\n  });\n};\n\nexport const metricToSeriesName = (labels: { [key: string]: string }) => {\n  if (labels === null) {\n    return 'scalar';\n  }\n  let tsName = (labels.__name__ || '') + '{';\n  const labelStrings: string[] = [];\n  for (const label in labels) {\n    if (label !== '__name__') {\n      labelStrings.push(label + '=\"' + labels[label] + '\"');\n    }\n  }\n  tsName += labelStrings.join(', ') + '}';\n  return tsName;\n};\n\nexport const parseDuration = (durationStr: string): number | null => {\n  if (durationStr === '') {\n    return null;\n  }\n  if (durationStr === '0') {\n    // Allow 0 without a unit.\n    return 0;\n  }\n\n  const durationRE = new RegExp('^(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?$');\n  const matches = durationStr.match(durationRE);\n  if (!matches) {\n    return null;\n  }\n\n  let dur = 0;\n\n  // Parse the match at pos `pos` in the regex and use `mult` to turn that\n  // into ms, then add that value to the total parsed duration.\n  const m = (pos: number, mult: number) => {\n    if (matches[pos] === undefined) {\n      return;\n    }\n    const n = parseInt(matches[pos]);\n    dur += n * mult;\n  };\n\n  m(2, 1000 * 60 * 60 * 24 * 365); // y\n  m(4, 1000 * 60 * 60 * 24 * 7); // w\n  m(6, 1000 * 60 * 60 * 24); // d\n  m(8, 1000 * 60 * 60); // h\n  m(10, 1000 * 60); // m\n  m(12, 1000); // s\n  m(14, 1); // ms\n\n  return dur;\n};\n\nexport const formatDuration = (d: number): string => {\n  let ms = d;\n  let r = '';\n  if (ms === 0) {\n    return '0s';\n  }\n\n  const f = (unit: string, mult: number, exact: boolean) => {\n    if (exact && ms % mult !== 0) {\n      return;\n    }\n    const v = Math.floor(ms / mult);\n    if (v > 0) {\n      r += `${v}${unit}`;\n      ms -= v * mult;\n    }\n  };\n\n  // Only format years and weeks if the remainder is zero, as it is often\n  // easier to read 90d than 12w6d.\n  f('y', 1000 * 60 * 60 * 24 * 365, true);\n  f('w', 1000 * 60 * 60 * 24 * 7, true);\n\n  f('d', 1000 * 60 * 60 * 24, false);\n  f('h', 1000 * 60 * 60, false);\n  f('m', 1000 * 60, false);\n  f('s', 1000, false);\n  f('ms', 1, false);\n\n  return r;\n};\n\nexport function parseTime(timeText: string): number {\n  return moment.utc(timeText).valueOf();\n}\n\nexport function formatTime(time: number): string {\n  return moment.utc(time).format('YYYY-MM-DD HH:mm:ss');\n}\n\nexport const now = (): number => moment().valueOf();\n\nexport const humanizeDuration = (milliseconds: number): string => {\n  const sign = milliseconds < 0 ? '-' : '';\n  const unsignedMillis = milliseconds < 0 ? -1 * milliseconds : milliseconds;\n  const duration = moment.duration(unsignedMillis, 'ms');\n  const ms = Math.floor(duration.milliseconds());\n  const s = Math.floor(duration.seconds());\n  const m = Math.floor(duration.minutes());\n  const h = Math.floor(duration.hours());\n  const d = Math.floor(duration.asDays());\n  if (d !== 0) {\n    return `${sign}${d}d ${h}h ${m}m ${s}s`;\n  }\n  if (h !== 0) {\n    return `${sign}${h}h ${m}m ${s}s`;\n  }\n  if (m !== 0) {\n    return `${sign}${m}m ${s}s`;\n  }\n  if (s !== 0) {\n    return `${sign}${s}.${ms}s`;\n  }\n  if (unsignedMillis > 0) {\n    return `${sign}${unsignedMillis.toFixed(3)}ms`;\n  }\n  return '0s';\n};\n\nexport const formatRelative = (startStr: string, end: number): string => {\n  const start = parseTime(startStr);\n  if (start < 0) {\n    return 'Never';\n  }\n  return humanizeDuration(end - start) + ' ago';\n};\n\nconst paramFormat = /^g\\d+\\..+=.+$/;\n\nexport const decodePanelOptionsFromQueryString = (query: string): PanelMeta[] => {\n  if (query === '') {\n    return [];\n  }\n  const urlParams = query.substring(1).split('&');\n\n  return urlParams.reduce<PanelMeta[]>((panels, urlParam, i) => {\n    const panelsCount = panels.length;\n    const prefix = `g${panelsCount}.`;\n    if (urlParam.startsWith(`${prefix}expr=`)) {\n      const prefixLen = prefix.length;\n      return [\n        ...panels,\n        {\n          id: generateID(),\n          key: `${panelsCount}`,\n          options: urlParams.slice(i).reduce((opts, param) => {\n            return param.startsWith(prefix) && paramFormat.test(param)\n              ? { ...opts, ...parseOption(param.substring(prefixLen)) }\n              : opts;\n          }, PanelDefaultOptions),\n        },\n      ];\n    }\n    return panels;\n  }, []);\n};\n\nexport const parseOption = (param: string): Partial<PanelOptions> => {\n  const [opt, val] = param.split('=');\n  const decodedValue = decodeURIComponent(val.replace(/\\+/g, ' '));\n  switch (opt) {\n    case 'expr':\n      return { expr: decodedValue };\n\n    case 'tab':\n      return { type: decodedValue === '0' ? PanelType.Graph : PanelType.Table };\n\n    case 'stacked':\n      return { stacked: decodedValue === '1' };\n\n    case 'range_input':\n      const range = parseDuration(decodedValue);\n      return isPresent(range) ? { range } : {};\n\n    case 'end_input':\n    case 'moment_input':\n      return { endTime: parseTime(decodedValue) };\n\n    case 'step_input':\n      const resolution = parseInt(decodedValue);\n      return resolution > 0 ? { resolution } : {};\n  }\n  return {};\n};\n\nexport const formatParam = (key: string) => (paramName: string, value: number | string | boolean) => {\n  return `g${key}.${paramName}=${encodeURIComponent(value)}`;\n};\n\nexport const toQueryString = ({ key, options }: PanelMeta) => {\n  const formatWithKey = formatParam(key);\n  const { expr, type, stacked, range, endTime, resolution } = options;\n  const time = isPresent(endTime) ? formatTime(endTime) : false;\n  const urlParams = [\n    formatWithKey('expr', expr),\n    formatWithKey('tab', type === PanelType.Graph ? 0 : 1),\n    formatWithKey('stacked', stacked ? 1 : 0),\n    formatWithKey('range_input', formatDuration(range)),\n    time ? `${formatWithKey('end_input', time)}&${formatWithKey('moment_input', time)}` : '',\n    isPresent(resolution) ? formatWithKey('step_input', resolution) : '',\n  ];\n  return urlParams.filter(byEmptyString).join('&');\n};\n\nexport const encodePanelOptionsToQueryString = (panels: PanelMeta[]) => {\n  return `?${panels.map(toQueryString).join('&')}`;\n};\n\nexport const createExpressionLink = (expr: string) => {\n  return `../graph?g0.expr=${encodeURIComponent(expr)}&g0.tab=1&g0.stacked=0&g0.range_input=1h`;\n};\nexport const mapObjEntries = <T, key extends keyof T, Z>(\n  o: T,\n  cb: ([k, v]: [string, T[key]], i: number, arr: [string, T[key]][]) => Z\n) => Object.entries(o).map(cb);\n\nexport const callAll = (...fns: Array<(...args: any) => void>) => (...args: any) => {\n  // eslint-disable-next-line prefer-spread\n  fns.filter(Boolean).forEach(fn => fn.apply(null, args));\n};\n\nexport const parsePrometheusFloat = (value: string) => {\n  if (isNaN(Number(value))) {\n    return value;\n  } else {\n    return Number(value);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}