{"ast":null,"code":"import _objectSpread from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Alert,Button,Col,Nav,NavItem,NavLink,Row,TabContent,TabPane}from'reactstrap';import moment from'moment-timezone';import ExpressionInput from'./ExpressionInput';import CMExpressionInput from'./CMExpressionInput';import GraphControls from'./GraphControls';import{GraphTabContent}from'./GraphTabContent';import DataTable from'./DataTable';import TimeInput from'./TimeInput';import QueryStatsView from'./QueryStatsView';import{API_PATH}from'../../constants/constants';export var PanelType;(function(PanelType){PanelType[\"Graph\"]=\"graph\";PanelType[\"Table\"]=\"table\";})(PanelType||(PanelType={}));export var PanelDefaultOptions={type:PanelType.Table,expr:'',range:60*60*1000,endTime:null,resolution:null,stacked:false};var Panel=/*#__PURE__*/function(_Component){_inherits(Panel,_Component);var _super=_createSuper(Panel);function Panel(props){var _this;_classCallCheck(this,Panel);_this=_super.call(this,props);_this.abortInFlightFetch=null;_this.executeQuery=function(){var expr=_this.state.exprInputValue;var queryStart=Date.now();_this.props.onExecuteQuery(expr);if(_this.props.options.expr!==expr){_this.setOptions({expr:expr});}if(expr===''){return;}if(_this.abortInFlightFetch){_this.abortInFlightFetch();_this.abortInFlightFetch=null;}var abortController=new AbortController();_this.abortInFlightFetch=function(){return abortController.abort();};_this.setState({loading:true});var endTime=_this.getEndTime().valueOf()/1000;// TODO: shouldn't valueof only work when it's a moment?\nvar startTime=endTime-_this.props.options.range/1000;var resolution=_this.props.options.resolution||Math.max(Math.floor(_this.props.options.range/250000),1);var params=new URLSearchParams({query:expr});var path;switch(_this.props.options.type){case'graph':path='query_range';params.append('start',startTime.toString());params.append('end',endTime.toString());params.append('step',resolution.toString());break;case'table':path='query';params.append('time',endTime.toString());break;default:throw new Error('Invalid panel type \"'+_this.props.options.type+'\"');}fetch(\"\".concat(_this.props.pathPrefix,\"/\").concat(API_PATH,\"/\").concat(path,\"?\").concat(params),{cache:'no-store',credentials:'same-origin',signal:abortController.signal}).then(function(resp){return resp.json();}).then(function(json){if(json.status!=='success'){throw new Error(json.error||'invalid response JSON');}var resultSeries=0;if(json.data){var _json$data=json.data,resultType=_json$data.resultType,result=_json$data.result;if(resultType==='scalar'){resultSeries=1;}else if(result&&result.length>0){resultSeries=result.length;}}_this.setState({error:null,data:json.data,warnings:json.warnings,lastQueryParams:{startTime:startTime,endTime:endTime,resolution:resolution},stats:{loadTime:Date.now()-queryStart,resolution:resolution,resultSeries:resultSeries},loading:false});_this.abortInFlightFetch=null;}).catch(function(error){if(error.name==='AbortError'){// Aborts are expected, don't show an error for them.\nreturn;}_this.setState({error:'Error executing query: '+error.message,loading:false});});};_this.handleExpressionChange=function(expr){_this.setState({exprInputValue:expr});};_this.handleChangeRange=function(range){_this.setOptions({range:range});};_this.getEndTime=function(){if(_this.props.options.endTime===null){return moment();}return _this.props.options.endTime;};_this.handleChangeEndTime=function(endTime){_this.setOptions({endTime:endTime});};_this.handleChangeResolution=function(resolution){_this.setOptions({resolution:resolution});};_this.handleChangeType=function(type){if(_this.props.options.type===type){return;}_this.setState({data:null});_this.setOptions({type:type});};_this.handleChangeStacking=function(stacked){_this.setOptions({stacked:stacked});};_this.state={data:null,lastQueryParams:null,loading:false,warnings:null,error:null,stats:null,exprInputValue:props.options.expr};return _this;}_createClass(Panel,[{key:\"componentDidUpdate\",value:function componentDidUpdate(_ref){var prevOpts=_ref.options;var _this$props$options=this.props.options,endTime=_this$props$options.endTime,range=_this$props$options.range,resolution=_this$props$options.resolution,type=_this$props$options.type;if(prevOpts.endTime!==endTime||prevOpts.range!==range||prevOpts.resolution!==resolution||prevOpts.type!==type){this.executeQuery();}}},{key:\"componentDidMount\",value:function componentDidMount(){this.executeQuery();}},{key:\"setOptions\",value:function setOptions(opts){var newOpts=_objectSpread(_objectSpread({},this.props.options),opts);this.props.onOptionsChanged(newOpts);}},{key:\"render\",value:function render(){var _this$state$warnings,_this2=this;var _this$props=this.props,pastQueries=_this$props.pastQueries,metricNames=_this$props.metricNames,options=_this$props.options;return/*#__PURE__*/React.createElement(\"div\",{className:\"panel\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,this.props.useExperimentalEditor?/*#__PURE__*/React.createElement(CMExpressionInput,{value:this.state.exprInputValue,onExpressionChange:this.handleExpressionChange,executeQuery:this.executeQuery,loading:this.state.loading,enableAutocomplete:this.props.enableAutocomplete,enableHighlighting:this.props.enableHighlighting,enableLinter:this.props.enableLinter,queryHistory:pastQueries,metricNames:metricNames}):/*#__PURE__*/React.createElement(ExpressionInput,{value:this.state.exprInputValue,onExpressionChange:this.handleExpressionChange,executeQuery:this.executeQuery,loading:this.state.loading,enableAutocomplete:this.props.enableAutocomplete,queryHistory:pastQueries,metricNames:metricNames}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,this.state.error&&/*#__PURE__*/React.createElement(Alert,{color:\"danger\"},this.state.error))),(_this$state$warnings=this.state.warnings)===null||_this$state$warnings===void 0?void 0:_this$state$warnings.map(function(warning,index){return/*#__PURE__*/React.createElement(Row,{key:index},/*#__PURE__*/React.createElement(Col,null,warning&&/*#__PURE__*/React.createElement(Alert,{color:\"warning\"},warning)));}),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Nav,{tabs:true},/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{className:options.type==='table'?'active':'',onClick:function onClick(){return _this2.handleChangeType(PanelType.Table);}},\"Table\")),/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{className:options.type==='graph'?'active':'',onClick:function onClick(){return _this2.handleChangeType(PanelType.Graph);}},\"Graph\")),!this.state.loading&&!this.state.error&&this.state.stats&&/*#__PURE__*/React.createElement(QueryStatsView,this.state.stats)),/*#__PURE__*/React.createElement(TabContent,{activeTab:options.type},/*#__PURE__*/React.createElement(TabPane,{tabId:\"table\"},options.type==='table'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"table-controls\"},/*#__PURE__*/React.createElement(TimeInput,{time:options.endTime,useLocalTime:this.props.useLocalTime,range:options.range,placeholder:\"Evaluation time\",onChangeTime:this.handleChangeEndTime})),/*#__PURE__*/React.createElement(DataTable,{data:this.state.data}))),/*#__PURE__*/React.createElement(TabPane,{tabId:\"graph\"},this.props.options.type==='graph'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(GraphControls,{range:options.range,endTime:options.endTime,useLocalTime:this.props.useLocalTime,resolution:options.resolution,stacked:options.stacked,onChangeRange:this.handleChangeRange,onChangeEndTime:this.handleChangeEndTime,onChangeResolution:this.handleChangeResolution,onChangeStacking:this.handleChangeStacking}),/*#__PURE__*/React.createElement(GraphTabContent,{data:this.state.data,stacked:options.stacked,useLocalTime:this.props.useLocalTime,lastQueryParams:this.state.lastQueryParams})))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{className:\"float-right\",color:\"link\",onClick:this.props.removePanel,size:\"sm\"},\"Remove Panel\"))));}}]);return Panel;}(Component);export default Panel;","map":{"version":3,"sources":["/usr/local/google/home/freinartz/repos/src/github.com/GoogleCloudPlatform/prometheus-clean/web/ui/react-app/src/pages/graph/Panel.tsx"],"names":["React","Component","Alert","Button","Col","Nav","NavItem","NavLink","Row","TabContent","TabPane","moment","ExpressionInput","CMExpressionInput","GraphControls","GraphTabContent","DataTable","TimeInput","QueryStatsView","API_PATH","PanelType","PanelDefaultOptions","type","Table","expr","range","endTime","resolution","stacked","Panel","props","abortInFlightFetch","executeQuery","state","exprInputValue","queryStart","Date","now","onExecuteQuery","options","setOptions","abortController","AbortController","abort","setState","loading","getEndTime","valueOf","startTime","Math","max","floor","params","URLSearchParams","query","path","append","toString","Error","fetch","pathPrefix","cache","credentials","signal","then","resp","json","status","error","resultSeries","data","resultType","result","length","warnings","lastQueryParams","stats","loadTime","catch","name","message","handleExpressionChange","handleChangeRange","handleChangeEndTime","handleChangeResolution","handleChangeType","handleChangeStacking","prevOpts","opts","newOpts","onOptionsChanged","pastQueries","metricNames","useExperimentalEditor","enableAutocomplete","enableHighlighting","enableLinter","map","warning","index","Graph","useLocalTime","removePanel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Alert, Button, Col, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\n\nimport moment from 'moment-timezone';\n\nimport ExpressionInput from './ExpressionInput';\nimport CMExpressionInput from './CMExpressionInput';\nimport GraphControls from './GraphControls';\nimport { GraphTabContent } from './GraphTabContent';\nimport DataTable from './DataTable';\nimport TimeInput from './TimeInput';\nimport QueryStatsView, { QueryStats } from './QueryStatsView';\nimport { QueryParams } from '../../types/types';\nimport { API_PATH } from '../../constants/constants';\n\ninterface PanelProps {\n  options: PanelOptions;\n  onOptionsChanged: (opts: PanelOptions) => void;\n  useLocalTime: boolean;\n  pastQueries: string[];\n  metricNames: string[];\n  removePanel: () => void;\n  onExecuteQuery: (query: string) => void;\n  pathPrefix: string;\n  useExperimentalEditor: boolean;\n  enableAutocomplete: boolean;\n  enableHighlighting: boolean;\n  enableLinter: boolean;\n}\n\ninterface PanelState {\n  data: any; // TODO: Type data.\n  lastQueryParams: QueryParams | null;\n  loading: boolean;\n  warnings: string[] | null;\n  error: string | null;\n  stats: QueryStats | null;\n  exprInputValue: string;\n}\n\nexport interface PanelOptions {\n  expr: string;\n  type: PanelType;\n  range: number; // Range in milliseconds.\n  endTime: number | null; // Timestamp in milliseconds.\n  resolution: number | null; // Resolution in seconds.\n  stacked: boolean;\n}\n\nexport enum PanelType {\n  Graph = 'graph',\n  Table = 'table',\n}\n\nexport const PanelDefaultOptions: PanelOptions = {\n  type: PanelType.Table,\n  expr: '',\n  range: 60 * 60 * 1000,\n  endTime: null,\n  resolution: null,\n  stacked: false,\n};\n\nclass Panel extends Component<PanelProps, PanelState> {\n  private abortInFlightFetch: (() => void) | null = null;\n\n  constructor(props: PanelProps) {\n    super(props);\n\n    this.state = {\n      data: null,\n      lastQueryParams: null,\n      loading: false,\n      warnings: null,\n      error: null,\n      stats: null,\n      exprInputValue: props.options.expr,\n    };\n  }\n\n  componentDidUpdate({ options: prevOpts }: PanelProps) {\n    const { endTime, range, resolution, type } = this.props.options;\n    if (\n      prevOpts.endTime !== endTime ||\n      prevOpts.range !== range ||\n      prevOpts.resolution !== resolution ||\n      prevOpts.type !== type\n    ) {\n      this.executeQuery();\n    }\n  }\n\n  componentDidMount() {\n    this.executeQuery();\n  }\n\n  executeQuery = (): void => {\n    const { exprInputValue: expr } = this.state;\n    const queryStart = Date.now();\n    this.props.onExecuteQuery(expr);\n    if (this.props.options.expr !== expr) {\n      this.setOptions({ expr });\n    }\n    if (expr === '') {\n      return;\n    }\n\n    if (this.abortInFlightFetch) {\n      this.abortInFlightFetch();\n      this.abortInFlightFetch = null;\n    }\n\n    const abortController = new AbortController();\n    this.abortInFlightFetch = () => abortController.abort();\n    this.setState({ loading: true });\n\n    const endTime = this.getEndTime().valueOf() / 1000; // TODO: shouldn't valueof only work when it's a moment?\n    const startTime = endTime - this.props.options.range / 1000;\n    const resolution = this.props.options.resolution || Math.max(Math.floor(this.props.options.range / 250000), 1);\n    const params: URLSearchParams = new URLSearchParams({\n      query: expr,\n    });\n\n    let path: string;\n    switch (this.props.options.type) {\n      case 'graph':\n        path = 'query_range';\n        params.append('start', startTime.toString());\n        params.append('end', endTime.toString());\n        params.append('step', resolution.toString());\n        break;\n      case 'table':\n        path = 'query';\n        params.append('time', endTime.toString());\n        break;\n      default:\n        throw new Error('Invalid panel type \"' + this.props.options.type + '\"');\n    }\n\n    fetch(`${this.props.pathPrefix}/${API_PATH}/${path}?${params}`, {\n      cache: 'no-store',\n      credentials: 'same-origin',\n      signal: abortController.signal,\n    })\n      .then(resp => resp.json())\n      .then(json => {\n        if (json.status !== 'success') {\n          throw new Error(json.error || 'invalid response JSON');\n        }\n\n        let resultSeries = 0;\n        if (json.data) {\n          const { resultType, result } = json.data;\n          if (resultType === 'scalar') {\n            resultSeries = 1;\n          } else if (result && result.length > 0) {\n            resultSeries = result.length;\n          }\n        }\n\n        this.setState({\n          error: null,\n          data: json.data,\n          warnings: json.warnings,\n          lastQueryParams: {\n            startTime,\n            endTime,\n            resolution,\n          },\n          stats: {\n            loadTime: Date.now() - queryStart,\n            resolution,\n            resultSeries,\n          },\n          loading: false,\n        });\n        this.abortInFlightFetch = null;\n      })\n      .catch(error => {\n        if (error.name === 'AbortError') {\n          // Aborts are expected, don't show an error for them.\n          return;\n        }\n        this.setState({\n          error: 'Error executing query: ' + error.message,\n          loading: false,\n        });\n      });\n  };\n\n  setOptions(opts: object): void {\n    const newOpts = { ...this.props.options, ...opts };\n    this.props.onOptionsChanged(newOpts);\n  }\n\n  handleExpressionChange = (expr: string): void => {\n    this.setState({ exprInputValue: expr });\n  };\n\n  handleChangeRange = (range: number): void => {\n    this.setOptions({ range: range });\n  };\n\n  getEndTime = (): number | moment.Moment => {\n    if (this.props.options.endTime === null) {\n      return moment();\n    }\n    return this.props.options.endTime;\n  };\n\n  handleChangeEndTime = (endTime: number | null) => {\n    this.setOptions({ endTime: endTime });\n  };\n\n  handleChangeResolution = (resolution: number | null) => {\n    this.setOptions({ resolution: resolution });\n  };\n\n  handleChangeType = (type: PanelType) => {\n    if (this.props.options.type === type) {\n      return;\n    }\n\n    this.setState({ data: null });\n    this.setOptions({ type: type });\n  };\n\n  handleChangeStacking = (stacked: boolean) => {\n    this.setOptions({ stacked: stacked });\n  };\n\n  render() {\n    const { pastQueries, metricNames, options } = this.props;\n    return (\n      <div className=\"panel\">\n        <Row>\n          <Col>\n            {this.props.useExperimentalEditor ? (\n              <CMExpressionInput\n                value={this.state.exprInputValue}\n                onExpressionChange={this.handleExpressionChange}\n                executeQuery={this.executeQuery}\n                loading={this.state.loading}\n                enableAutocomplete={this.props.enableAutocomplete}\n                enableHighlighting={this.props.enableHighlighting}\n                enableLinter={this.props.enableLinter}\n                queryHistory={pastQueries}\n                metricNames={metricNames}\n              />\n            ) : (\n              <ExpressionInput\n                value={this.state.exprInputValue}\n                onExpressionChange={this.handleExpressionChange}\n                executeQuery={this.executeQuery}\n                loading={this.state.loading}\n                enableAutocomplete={this.props.enableAutocomplete}\n                queryHistory={pastQueries}\n                metricNames={metricNames}\n              />\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Col>{this.state.error && <Alert color=\"danger\">{this.state.error}</Alert>}</Col>\n        </Row>\n        {this.state.warnings?.map((warning, index) => (\n          <Row key={index}>\n            <Col>{warning && <Alert color=\"warning\">{warning}</Alert>}</Col>\n          </Row>\n        ))}\n        <Row>\n          <Col>\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={options.type === 'table' ? 'active' : ''}\n                  onClick={() => this.handleChangeType(PanelType.Table)}\n                >\n                  Table\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={options.type === 'graph' ? 'active' : ''}\n                  onClick={() => this.handleChangeType(PanelType.Graph)}\n                >\n                  Graph\n                </NavLink>\n              </NavItem>\n              {!this.state.loading && !this.state.error && this.state.stats && <QueryStatsView {...this.state.stats} />}\n            </Nav>\n            <TabContent activeTab={options.type}>\n              <TabPane tabId=\"table\">\n                {options.type === 'table' && (\n                  <>\n                    <div className=\"table-controls\">\n                      <TimeInput\n                        time={options.endTime}\n                        useLocalTime={this.props.useLocalTime}\n                        range={options.range}\n                        placeholder=\"Evaluation time\"\n                        onChangeTime={this.handleChangeEndTime}\n                      />\n                    </div>\n                    <DataTable data={this.state.data} />\n                  </>\n                )}\n              </TabPane>\n              <TabPane tabId=\"graph\">\n                {this.props.options.type === 'graph' && (\n                  <>\n                    <GraphControls\n                      range={options.range}\n                      endTime={options.endTime}\n                      useLocalTime={this.props.useLocalTime}\n                      resolution={options.resolution}\n                      stacked={options.stacked}\n                      onChangeRange={this.handleChangeRange}\n                      onChangeEndTime={this.handleChangeEndTime}\n                      onChangeResolution={this.handleChangeResolution}\n                      onChangeStacking={this.handleChangeStacking}\n                    />\n                    <GraphTabContent\n                      data={this.state.data}\n                      stacked={options.stacked}\n                      useLocalTime={this.props.useLocalTime}\n                      lastQueryParams={this.state.lastQueryParams}\n                    />\n                  </>\n                )}\n              </TabPane>\n            </TabContent>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button className=\"float-right\" color=\"link\" onClick={this.props.removePanel} size=\"sm\">\n              Remove Panel\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Panel;\n"]},"metadata":{},"sourceType":"module"}