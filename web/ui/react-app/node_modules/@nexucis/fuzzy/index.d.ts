export declare function score(intervals: FuzzyMatchingInterval[], strLength: number): number;
export interface FuzzyConfiguration {
    caseSensitive?: boolean;
    includeMatches?: boolean;
    shouldSort?: boolean;
    escapeHTML?: boolean;
    pre?: string;
    post?: string;
}
export interface FuzzyMatchingInterval {
    from: number;
    to: number;
}
export interface FuzzyResult {
    rendered: string;
    original: string;
    index: number;
    score: number;
    intervals?: FuzzyMatchingInterval[];
}
export declare class Fuzzy {
    private readonly caseSensitive;
    private readonly includeMatches;
    private readonly shouldSort;
    private readonly escapeHTML;
    private readonly pre;
    private readonly post;
    constructor(conf?: FuzzyConfiguration);
    filter(pattern: string, list: string[], conf?: FuzzyConfiguration): FuzzyResult[];
    match(pattern: string, text: string, conf?: FuzzyConfiguration): FuzzyResult | null;
    render(text: string, intervals: FuzzyMatchingInterval[], conf?: FuzzyConfiguration): string;
    private extractSubString;
}
